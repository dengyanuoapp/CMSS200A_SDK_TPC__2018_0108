C251 COMPILER V4.55,  usound_trans                                                         13/12/18  14:07:00  PAGE 1   


C251 COMPILER V4.55, COMPILATION OF MODULE usound_trans
OBJECT MODULE PLACED IN ..\..\..\obj\lib\usound\usound_trans.obj
COMPILER INVOKED BY: C:\Keil\C251\BIN\C251.EXE ..\..\..\libsrc\usbsound\usound_trans.c XSMALL FUNCTIONS(REENTRANT) ROM(H
                    -UGE) INCDIR(..\..\..\inc) I4 ORDER DEBUG PRINT(..\..\..\obj\lib\usound\usound_trans.lst) OBJECT(..\..\..\obj\lib\usound\
                    -usound_trans.obj) 

stmt  level    source

    1          /********************************************************************************
    2           *                              AS260A
    3           *                            Module: USB Sound
    4           *                 Copyright(c) 2001-2012 Actions Semiconductor,
    5           *                            All Rights Reserved.
    6           *
    7           * History:
    8           *      <author>    <time>            <version >             <desc>
    9           *      dengtaiping 2012-10-23 16:40     1.0                build this file
   10           ********************************************************************************/
   11          /*!
   12           * \file     usound_trans.c
   13           * \brief    .
   14           * \author   dengtaiping
   15           * \par      GENERAL DESCRIPTION:
   16           *               数据传输代码
   17           * \par      EXTERNALIZED FUNCTIONS:
   18           *               这里描述调用到外面的模块
   19           *
   20           *      Copyright(c) 2001-2012 Actions Semiconductor, All Rights Reserved.
   21           *
   22           * \version 1.0
   23           * \date  2012/10/23
   24           *******************************************************************************/
   25          #include "usound_intern.h"
   26          #include "usound_extern.h"
   27          #pragma name(USC_TRANS)
   28          #pragma renamecode(?PR?USC_TRANS)
   29          
   30          /******************************************************************************/
   31          /*!
   32           * \par  Description:
   33           *     access usb fifo data
   34           * \param[in]    ep_select:endp NO.、address:buff address、data_lenth:data length
   35           * \param[out]   none.
   36           * \return       none
   37          
   38           * \ingroup      module name
   39           * \par          exmaple code
   40           * \code
   41           *               list example code in here
   42           * \endcode
   43           *******************************************************************************/
   44          void usb_fifo_access(uint8 ep_select, uint8 *address, uint16 data_lenth)
   45          {
   46   1          uint16 i;
   47   1      
   48   1          for (i = 0; i < data_lenth; i++)
   49   1          {
   50   2              if (EP1IN == ep_select)
   51   2              {
   52   3                  //address += 2; //上传左声道数据
   53   3                  //i += 2;
   54   3                  Fifo1dat = *address;
   55   3                  address++;
   56   3                  Fifo1dat = *address;
   57   3                  address++;
C251 COMPILER V4.55,  usound_trans                                                         13/12/18  14:07:00  PAGE 2   

   58   3                  i++;
   59   3                  address += 2; //上传右声道数据
   60   3                  i += 2;
   61   3              }
   62   2              else if (EP2OUT == ep_select)
   63   2              {
   64   3                  *address = Fifo2dat;
   65   3                  address++;
   66   3              }
   67   2              else
   68   2              {
   69   3                  return;
   70   3              }
   71   2          }
   72   1      }
   73          
   74          /******************************************************************************/
   75          /*!
   76           * \par  Description:
   77           *     set dma reload mode to transfer data
   78           * \param[in]    none
   79           * \param[out]   none.
   80           * \return       none
   81          
   82           * \ingroup      module name
   83           * \par          exmaple code
   84           * \code
   85           *               list example code in here
   86           * \endcode
   87           *******************************************************************************/
   88          void dma_reload_from_adc(void)
   89          {
   90   1          uint8 sfr_temp = SFR_BANK;
   91   1      
   92   1          SFR_BANK = BANK_DMA_USB2;
   93   1          DMAnCTL0 &= ~(3 << 4);
   94   1          DMAnCTL0 |= 1 << 4; //16bit width
   95   1          //DMAnCTL0 |= 0x40; //separated
   96   1          DMAnCTL0 &= ~0x40;
   97   1          DMAnCTL1 = 0x05;
   98   1          DMAnDADDR0H = 0x00;
   99   1          DMAnDADDR0M = 0x40;
  100   1          DMAnDADDR0L = 0x00;
  101   1          //DMAnDADDR1H = 0x00;
  102   1          //DMAnDADDR1M = 0x43;
  103   1          //DMAnDADDR1L = 0x80;
  104   1          DMAnIP |= 0x03; //clear pending bit
  105   1          DMAnIE |= 0x03;
  106   1          DMAnFrameLenH = (uint8)((RECORD_BUFF_SIZE/2)>>8);
  107   1          DMAnFrameLenL = (RECORD_BUFF_SIZE/2) & 0xFF;
  108   1          DMAnCTL0 |= 0x02; //enable reload mode
  109   1          DMAnCTL0 |= 0x01; //start dma
  110   1          SFR_BANK = sfr_temp;
  111   1      }
  112          
  113          /******************************************************************************/
  114          /*!
  115           * \par  Description:
  116           *     set dma reload mode to transfer data
  117           * \param[in]    none
  118           * \param[out]   none.
  119           * \return       none
  120          
  121           * \ingroup      module name
  122           * \par          exmaple code
  123           * \code
C251 COMPILER V4.55,  usound_trans                                                         13/12/18  14:07:00  PAGE 3   

  124           *               list example code in here
  125           * \endcode
  126           *******************************************************************************/
  127          void dma_reload_to_dac(void)
  128          {
  129   1          uint8 sfr_temp = SFR_BANK;
  130   1      
  131   1          SFR_BANK = BANK_DMA_USB1;
  132   1          DMAnCTL0 &= ~(3 << 4);
  133   1          if (DOWNLOAD_BIT_DEPTH_24== gud_param.bit_depth)
  134   1          {
  135   2              DMAnCTL0 |= (0x1<<5);
  136   2          }
  137   1          else
  138   1          {
  139   2              DMAnCTL0 |= (0x1<<4);
  140   2          }
  141   1          DMAnCTL1 = 0x50;
  142   1          DMAnSADDR0H = 0x00;
  143   1          DMAnSADDR0M = 0x49;//0x30;
  144   1          DMAnSADDR0L = 0x00;
  145   1          DMAnIP |= 0x03; //clear pending bit
  146   1          DMAnIE |= 0x03; //enable interrupt
  147   1          if(DOWNLOAD_BIT_DEPTH_24==gud_param.bit_depth)
  148   1          {
  149   2              DMAnFrameLenH = (uint8)((PLAY_BUFF_SIZE/3)>>8);
  150   2              DMAnFrameLenL = (PLAY_BUFF_SIZE/3) & 0xFF;
  151   2          }
  152   1          else
  153   1          {
  154   2              DMAnFrameLenH = (uint8)((PLAY_BUFF_SIZE/2)>>8);
  155   2              DMAnFrameLenL = (PLAY_BUFF_SIZE/2) & 0xFF;
  156   2          }
  157   1          
  158   1          DMAnCTL0 |= 0x02; //enable reload mode
  159   1          DMAnCTL0 |= 0x01; //start dma
  160   1          SFR_BANK = sfr_temp;
  161   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       165     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
