C251 COMPILER V4.55,  main                                                                 23/05/16  10:42:20  PAGE 1   


C251 COMPILER V4.55, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Obj\main.obj
COMPILER INVOKED BY: C:\Keil\C251\BIN\C251.EXE main.c XSMALL NOALIAS FUNCTIONS(REENTRANT) ROM(HUGE) OPTIMIZE(9,SPEED) BR
                    -OWSE INCDIR(..\..\..\psp_rel\inc;..\..\inc) I4 DEBUG PRINT(.\Lst\main.lst) OBJECT(.\Obj\main.obj) 

stmt  level    source

    1          /*
    2           *******************************************************************************
    3           *                ACTOS AP
    4           *        voice recorder main program.
    5           *
    6           *        (c) Copyright, Actions Co,Ld.
    7           *             All Right Reserved
    8           *
    9           *  $Id: main.c,v 1.10 2009/10/09 09:53:51 dengyulin Exp $
   10           *******************************************************************************
   11           */
   12          #include "ap_record.h"
   13          #include "uhdrv.h"
   14          
   15          #pragma name(AP_MAIN)
   16          #define DISK_C 0
   17          #define DISK_H 1
   18          
   19          /********************常量定义***********************/
   20          
   21          /******************全局变量定义*********************/
   22          
   23          //保留项
   24          //uint8 DiskFlag = 0;
   25          //uint16 near g_rec_event = 0;
   26          
   27          bool show_time = TRUE;
   28          
   29          /*  当前目录下录音文件总个数*/
   30          uint8 near g_file_num;
   31          
   32          /* 可录总秒数*/
   33          uint32 total_sec = 0;
   34          
   35          /* 配置的可录扇区数 */
   36          uint32 total_space_setting = 0;
   37          
   38          /* 单次进入录音，累计已录扇区数 */
   39          uint32 total_space_used = 0;
   40          
   41          /* 单个文件的扇区数 */
   42          uint32 onefile_space = 0;
   43          uint16 near g_rec_event = 0;
   44          
   45          uint32 near g_free_space; //剩余磁盘空间//remaining disk space
   46          
   47          /* 当前录音文件的page数*/
   48          uint32 near g_file_size;
   49          //uint8 near g_total_time[11]; //000:00:00
   50          uint8 near g_now_time[10]; //000:00:00
   51          uint8 near g_file_name_time[16]; //"WAV001 04/01/01"
   52          
   53          /* 当前录音比特率ASCILL , 用于显示*/
   54          uint8 near currentBitrate[4];
   55          
   56          record_vars_t near g_record_vars;
   57          //uint8 near g_rec_from; //当前的录音源 by ccm
   58          
C251 COMPILER V4.55,  main                                                                 23/05/16  10:42:20  PAGE 2   

   59          /*  可录音总时间*/
   60          time_t_ext near g_total_time;
   61          /*  实时显示录音的时间*/
   62          time_t near g_rec_time;
   63          /* 录音状态*/
   64          wav_rec_status_t rec_stat;
   65          
   66          //resource_t inputSelect =
   67          //{ 0 };
   68          
   69          /* 录音参数结构*/
   70          audio_format_t Rec_format;
   71          //bool unicodeFlagofFolder;
   72          
   73          /* 是否FM  录音*/
   74          bool isFmRecord;
   75          /* 空间是否已满*/
   76          bool overflag;
   77          uint8 avrEnableSave;
   78          //ap_inputSelect_e inputSelSave;
   79          
   80          //uint8 dir_name[30];
   81          
   82          /* 录音比特率*/
   83          ap_bitrate_e rec_bitrate;
   84          /* 录音采样率*/
   85          ap_samplerate_e Rec_Fsrate;
   86          /* 录音通道数*/
   87          channelnum_t rec_channel;
   88          /* 指向当前默认录音目录*/
   89          const uint8 *g_dir_voice;
   90          
   91          /* 磁盘状态bitmap */
   92          uint8 g_DiskStateFlag = 0;
   93          
   94          /* 是否需要取剩余容量 */
   95          bool need_fetch_space;
   96          
   97          bool card_exist = FALSE;
   98          bool UDisk_exist = FALSE;
   99          uint8 rec_status;//当前录音状态。0-停止状态;1-录音状态;2-暂停状态
  100          uint8 need_change_rec_status;//是否需要转换录音状态标志
  101          uint8 review_disk;//是否需要检查磁盘标志
  102          
  103          uint8 g_disk_char[MAX_DISK_NUM] =
  104          { 'U', 'H' };
  105          uint8 rec_str[4] =
  106          { "REC" };
  107          uint8 nodevice_str[5] =
  108          { "NDEV" };
  109          
  110          //#pragma renamecode(AP_MAIN)
  111          
  112          
  113          /*
  114           ********************************************************************************
  115           * Description : 使能DAC
  116           *
  117           * Arguments   : NULL
  118           *
  119           * Returns     : NULL
  120           *
  121           * Notes       :
  122           *
  123           ********************************************************************************
  124           */
C251 COMPILER V4.55,  main                                                                 23/05/16  10:42:20  PAGE 3   

  125          void near openDAC_main(void)
  126          {
  127   1          dac_t dacattr;
  128   1          dacattr.dacselect = 0;
  129   1          dacattr.rate = FS_44K1;//默认
  130   1          EnableDAC(&dacattr);
  131   1      
  132   1      }
  133          
  134          /*
  135           ********************************************************************************
  136           * Description : 关闭录音通道
  137           *
  138           * Arguments   : NULL
  139           *
  140           * Returns     : NULL
  141           *
  142           * Notes       :
  143           *
  144           ********************************************************************************
  145           */
  146          void near Close_RecRoute(void)
  147          {
  148   1          if (!g_comval.KeyTone)
  149   1          {
  150   2              //      DisablePA();
  151   2          }
  152   1      }
  153          
  154          /*
  155           ********************************************************************************
  156           * Description : Record 应用参数初始化
  157           *
  158           * Arguments   : NULL
  159           *
  160           * Returns     : NULL
  161           *
  162           * Notes       :
  163           *
  164           ********************************************************************************
  165           */
  166          void near read_var(void)
  167          {
  168   1          BOOL result;
  169   1          result = read_ap_comval();
  170   1      
  171   1          result = VMRead(&g_record_vars, VM_AP_RECORD, sizeof(g_record_vars));
  172   1          if ((FALSE == result) || (g_record_vars.maigc != MAGIC_RECORD))
  173   1          {
  174   2              g_record_vars.maigc = MAGIC_RECORD;
  175   2              //        g_comval.RecordType = (uint8)RECORD_FILE_TYPE_WAV;
  176   2      
  177   2              g_record_vars.location.disk = 'U';
  178   2              //g_record_vars.Rec_Fsrate = (uint8) AP_FS_8K;
  179   2              //g_record_vars.rec_bitrate = (uint8) AP_BT_128K;
  180   2              g_record_vars.rec_source = AP_MICIN;
  181   2              if(g_comval.RecordType != 0)
  182   2              {
  183   3                  g_record_vars.rec_type = RECORD_FILE_TYPE_WAV;
  184   3              }
  185   2              else
  186   2              {
  187   3                  g_record_vars.rec_type = RECORD_FILE_TYPE_MP2;
  188   3              }
  189   2      
  190   2              g_record_vars.rec_encode = ENCODE_WAV_ADPCM;
C251 COMPILER V4.55,  main                                                                 23/05/16  10:42:20  PAGE 4   

  191   2              g_record_vars.rec_mode = 1; //默认普通录音
  192   2      
  193   2              g_record_vars.wav_num = 1;
  194   2              g_record_vars.mp2_num = 1;
  195   2              g_record_vars.rec_InputGain = g_comval.RecordGain;
  196   2              g_record_vars.rec_ADCGain = 3;
  197   2              g_record_vars.rec_DSPGain = 0;
  198   2              g_record_vars.rec_DelayTime = 15;
  199   2      
  200   2              //g_record_vars.rec_AVREnable = 0;
  201   2              //g_record_vars.rec_AVRDelay = 3;
  202   2              //g_record_vars.rec_AVRLevel = 5;//3400;
  203   2          }
  204   1      
  205   1          //avrEnableSave = g_record_vars.rec_AVREnable;
  206   1          //  inputSelSave = g_record_vars.rec_source;
  207   1      
  208   1          confirm_rec_param();
  209   1      
  210   1          if (g_record_vars.location.disk == 0)
  211   1          {
  212   2              memset(&g_record_vars.location, 0, sizeof(file_location_t));
  213   2              g_record_vars.location.disk = 'U';
  214   2          }
  215   1      }
  216          
  217          
  218          /*
  219           ********************************************************************************
  220           * Description : Record 应用入口主函数
  221           *
  222           * Arguments   :
  223           param:
  224           0, 不自动开始录音
  225           1, 自动开始录音
  226           RESULT_FMREC_NOSTART,  FM录音,   不自动开始
  227           RESULT_FMREC_START,  FM录音, 自动开始
  228           *
  229           *
  230           * Returns     : 结果消息或0
  231           *
  232           * Notes       :
  233           *
  234           ********************************************************************************
  235           */
  236          int main(int param)
  237          {
  238   1      
  239   1          BOOL mc_result;
  240   1          BOOL ReturnToFm = 0;
  241   1          uint8 result = 0;
  242   1          uint8 sfr_bank;
  243   1          overflag = FALSE;
  244   1      
  245   1          need_fetch_space = TRUE;
  246   1          g_file_size = 0;
  247   1          read_var();
  248   1      
  249   1          LEDClearScreen();
  250   1          LEDPuts(NUMBER2, rec_str, 1);
  251   1          /* 选择U盘播放 */
  252   1          if (USBH_Check_Udisk())
  253   1          {
  254   2              g_record_vars.location.disk = g_disk_char[0];
  255   2          }
  256   1          else if (DRV_DetectUD(1) == 0x20)
C251 COMPILER V4.55,  main                                                                 23/05/16  10:42:20  PAGE 5   

  257   1          {
  258   2              g_record_vars.location.disk = g_disk_char[1];
  259   2          }
  260   1          else
  261   1          {
  262   2              LEDPuts(NUMBER1, nodevice_str, 1);
  263   2              if (param == RESULT_FMREC_START)
  264   2              {
  265   3                  return RESULT_RADIO;
  266   3              }
  267   2              else
  268   2              {
  269   3                  return RESULT_NULL;
  270   3              }
  271   2          }
  272   1          if (param == RESULT_RECORD)
  273   1          {
  274   2              g_record_vars.rec_source = AP_MICIN;
  275   2          }
  276   1          else
  277   1          {
  278   2              g_record_vars.rec_source = AP_FMIN;
  279   2          }
  280   1          set_dac_volume(g_comval.volume);
  281   1          enable_adda();
  282   1      
  283   1          result = show_rec();
  284   1          //    Close_RecRoute();
  285   1      
  286   1          mc_result = VMWrite(&g_record_vars, VM_AP_RECORD, sizeof(record_vars_t));
  287   1          mc_result = VMWrite(&g_comval, VM_SYSTEM, sizeof(g_comval));
  288   1          disable_adda();
  289   1      
  290   1          if (result == RESULT_MAIN)
  291   1          {
  292   2              if (param != RESULT_FMREC_START)
  293   2              {
  294   3                  result = RESULT_NULL;
  295   3              }
  296   2              else
  297   2              {
  298   3                  result = RESULT_FMREC2FM;
  299   3              }
  300   2          }
  301   1          sfr_bank = SFR_BANK;
  302   1          SFR_BANK = BANK_CMU_RMU;
  303   1          MRCR2 &= 0xdf;
  304   1          SFR_BANK = sfr_bank;
  305   1      
  306   1          return result;
  307   1      }
  308          void enable_adda(void)
  309          {
  310   1          if(g_record_vars.rec_source != AP_FMIN)
  311   1          {
  312   2              return;
  313   2          }
  314   1          decAddainit(AD_FM);
  315   1          set_dac_volume(g_comval.volume);
  316   1      }
  317          void disable_adda(void)
  318          {
  319   1          if(g_record_vars.rec_source != AP_FMIN)
  320   1          {
  321   2              return;
  322   2          }
C251 COMPILER V4.55,  main                                                                 23/05/16  10:42:20  PAGE 6   

  323   1          decAddaexit();
  324   1      }
  325          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       454     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       187     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        82     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
