C251 COMPILER V4.55,  file_selector                                                        23/05/16  10:41:55  PAGE 1   


C251 COMPILER V4.55, COMPILATION OF MODULE file_selector
OBJECT MODULE PLACED IN .\Obj\file_selector.obj
COMPILER INVOKED BY: C:\Keil\C251\BIN\C251.EXE file_selector.c XSMALL NOALIAS FUNCTIONS(REENTRANT) ROM(HUGE) OPTIMIZE(9,
                    -SPEED) BROWSE INCDIR(..\..\inc;..\..\..\psp_rel\inc) I4 DEBUG PRINT(.\Lst\file_selector.lst) OBJECT(.\Obj\file_selector.
                    -obj) 

stmt  level    source

    1          /*
    2           ******************************************************************************
    3           *                               AS211A
    4           *                            Module: music
    5           *                 Copyright(c) 2002-2010 Actions Semiconductor,
    6           *                            All Rights Reserved.
    7           *
    8           * Descripton: sub functions 1 of music
    9           *
   10           * History:
   11           *      <author>    <time>           <version >             <desc>
   12           *       xusong    2010-07-15 15:00     1.0             build this file
   13           ******************************************************************************
   14           */
   15          #include "ap_music.h"
   16          
   17          extern uint8 fselError;
   18          #pragma name(FILE_SELECTOR)
   19          
   20          uint8 cmp_location(void)
   21          {
   22   1          uint8 i;
   23   1          for (i = 0; i < 2; i++)
   24   1          {
   25   2              if (CurUselocation.disk == disk_char[i])
   26   2              {
   27   3                  if (CurUselocation.ClusterNo != g_music_vars.location[i].ClusterNo)
   28   3                  {
   29   4                      return 0;
   30   4                  }
   31   3                  else if (CurUselocation.DirEntry != g_music_vars.location[i].DirEntry)
   32   3                  {
   33   4                      return 0;
   34   4                  }
   35   3                  else if (CurUselocation.filename[11] != 0xfe)
   36   3                  {
   37   4                      if (memcmp(&CurUselocation.filename, g_music_vars.location[i].filename, 12) != 0)
   38   4                      {
   39   5                          return 0;
   40   5                      }
   41   4                  }
   42   3              }
   43   2          }
   44   1          return 1;
   45   1      }
   46          void write_poweroff_flag(uint8 flag)
   47          {
   48   1          uint8 sfr_bak;
   49   1          g_power_flag = flag;
   50   1          sfr_bak = SFR_BANK;
   51   1          SFR_BANK = 0x0c;
   52   1          RTCRDM22 = g_power_flag;
   53   1          SFR_BANK = sfr_bak;
   54   1      }
   55          void read_breakpoint(void)
   56          {
   57   1          uint8 sfr_bak;
C251 COMPILER V4.55,  file_selector                                                        23/05/16  10:41:55  PAGE 2   

   58   1          if (g_power_flag != 0)
   59   1          {
   60   2              if (cmp_location() == 0)
   61   2              {
   62   3                  return;
   63   3              }
   64   2              g_music_vars.MusicOpenMod = Hard_Break_open;
   65   2              //硬件断电后进来，获取断点时间再显示
   66   2              sfr_bak = SFR_BANK;
   67   2              SFR_BANK = 0x0c;
   68   2              g_music_vars.BreakPTDisTime.hour = RTCRDM19;
   69   2              g_music_vars.BreakPTDisTime.minute = RTCRDM20;
   70   2              g_music_vars.BreakPTDisTime.second = RTCRDM21;
   71   2              SFR_BANK = sfr_bak;
   72   2          }
   73   1          else
   74   1          {
   75   2              if (cmp_location() == 0)
   76   2              {
   77   3                  ClearTimePara();
   78   3                  return;
   79   3              }
   80   2              g_music_vars.MusicOpenMod = Nor_Break_open;
   81   2          }
   82   1          if((g_music_vars.BreakPTDisTime.hour == 0) && (g_music_vars.BreakPTDisTime.minute == 0) && (g_music_v
             -ars.BreakPTDisTime.second == 0))
   83   1          {
   84   2              g_music_vars.MusicOpenMod = Nor_open;
   85   2          }
   86   1      }
   87          /******************************************************************************
   88           ** 名字: 初始化C,U,H盘，
   89           ** 接口: static int InitFileSelector_sub(char disk)
   90           ** 描述:
   91           ** 输入参数: char disk,输入要初始化的盘符。目前支持三种：C：主盘，H：插卡盘，U：外插U盘或读卡器。
   92           **           每次只初始化一个盘。
   93           ** 输出参数: 1：成功。0：失败
   94           ** 使用说明:此函数只被本文件的InitFileSelector，StartFileSelector函数调用。
   95           ********************************************************************************/
   96          uint16 InitFileSelector_sub(char disk)
   97          {
   98   1      file_init:
   99   1          read_VM();
  100   1          if (FSELInit(FSEL_TYPE_MUSIC, FSEL_ALL_SEQUENCE, g_music_vars.fselmod, &CurUselocation, scan_flag) !=
             - 0)
  101   1          {
  102   2              CurUselocation.disk = disk;
  103   2              scan_flag = FALSE;
  104   2              g_musicamount = FSELGetTotal();
  105   2              return 1;
  106   2          }
  107   1          else if (auto_switch_device_flag != 0)
  108   1          {
  109   2              auto_switch_device_flag = 0;
  110   2              if (disk == disk_char[0])
  111   2              {
  112   3                  if (DRV_DetectUD(1) == 0x20)
  113   3                  {
  114   4                      disk = disk_char[1];
  115   4                      goto file_init;
  116   4                  }
  117   3              }
  118   2              else
  119   2              {
  120   3                  if (USBH_Check_Udisk())
  121   3                  {
C251 COMPILER V4.55,  file_selector                                                        23/05/16  10:41:55  PAGE 3   

  122   4                      disk = disk_char[0];
  123   4                      goto file_init;
  124   4                  }
  125   3              }
  126   2          }
  127   1          return 0;
  128   1      }
  129          
  130          /******************************************************************************
  131           ** 名字:  文件选择器初始化及报错显示
  132           ** 接口:  int InitFileSelector(void)
  133           ** 描述:  把文件选择器初始化到有效的盘上，如找不到，则报错退出
  134           ** 输入参数: void
  135           ** 输出参数: 0: 没有有效的盘,初始化失败，要求退出AP
  136           1: 已完成初始化文件选择器动作
  137           ** 使用说明:
  138           ********************************************************************************/
  139          uint16 InitFileSelector(void)
  140          {
  141   1          if (InitFileSelector_sub(CurUselocation.disk) != 0)
  142   1          {
  143   2              return 1;
  144   2          }
  145   1          return 0;
  146   1      }
  147          
  148          /******************************************************************************
  149           ** 名字:
  150           ** 接口:
  151           ** 描述:
  152           ** 输入参数:
  153           ** 输出参数:
  154           ** 使用说明: //注，这函数是在初始化完文件选择器或set 完目录后调用的
  155           ********************************************************************************/
  156          uint16 StartFileSelector(void)
  157          {
  158   1          if (InitFileSelector_sub(CurUselocation.disk) != 0)
  159   1          {
  160   2              if (FSELGetNext(CurUselocation.filename) != 0)
  161   2              {
  162   3                  return 1;
  163   3              }
  164   2          }
  165   1      
  166   1          return 0;
  167   1      
  168   1      }
  169          /******************************************************************************
  170           ** 名字:
  171           ** 接口: int UpdateFileSelector(void)
  172           ** 描述: 更新文件选择器
  173           ** 输入参数: void
  174           ** 输出参数:
  175           0: 更新不成功，要退出AP
  176           1: 更新成功，已可用
  177           ** 使用说明:
  178           ********************************************************************************/
  179          uint16 UpdateFileSelector(void)
  180          {
  181   1          uint8 result;
  182   1      set_locastion:
  183   1          result = FSELSetLocation(&CurUselocation);
  184   1      
  185   1          if (result == 1)
  186   1          {
  187   2              if (CurUselocation.filename[0] != '\0')
C251 COMPILER V4.55,  file_selector                                                        23/05/16  10:41:55  PAGE 4   

  188   2              {
  189   3                  return 1;
  190   3              }
  191   2          }
  192   1          if (fselError != FSEL_ERR_DISK)
  193   1          {
  194   2              /* 从头开始播放 */
  195   2              ClearTimePara();
  196   2              result = StartFileSelector();
  197   2          }
  198   1          scan_flag = TRUE;
  199   1          if (result == 0)
  200   1          {
  201   2              if (auto_switch_device_flag == 0)
  202   2              {
  203   3                  return 0;
  204   3              }
  205   2              if (CurUselocation.disk == disk_char[0])
  206   2              {
  207   3                  if (DRV_DetectUD(1) == 0x20)
  208   3                  {
  209   4                      CurUselocation.disk = disk_char[1];
  210   4                      goto set_locastion;
  211   4                  }
  212   3              }
  213   2              else
  214   2              {
  215   3                  if (USBH_Check_Udisk())
  216   3                  {
  217   4                      CurUselocation.disk = disk_char[0];
  218   4                      goto set_locastion;
  219   4                  }
  220   3              }
  221   2          }
  222   1          return result;
  223   1      }
  224          
  225          uint8 deal_playing_err(void)
  226          {
  227   1          uint8 retval = NULL;
  228   1          uint8 first_check = TRUE;
  229   1      check_disk:
  230   1          if ((CurUselocation.disk == disk_char[1]) && (DRV_DetectUD(1) != 0x20))
  231   1          {
  232   2              stop_music_play(TRUE);
  233   2              CurUselocation.disk = disk_char[0];
  234   2              if (USBH_Check_Udisk() == 0)
  235   2              {
  236   3                  no_device_flag = TRUE;
  237   3              }
  238   2              reinit_file_info();
  239   2          }
  240   1          else if ((CurUselocation.disk == disk_char[0]) && (!USBH_Check_Udisk()))
  241   1          {
  242   2              stop_music_play(TRUE);
  243   2              CurUselocation.disk = disk_char[1];
  244   2              if (DRV_DetectUD(1) != 0x20)
  245   2              {
  246   3                  no_device_flag = TRUE;
  247   3              }
  248   2              reinit_file_info();
  249   2          }
  250   1          else
  251   1          {
  252   2              //first_check为false,说明磁盘还在，可能磁盘已经损坏，则切换到显示时钟界面
  253   2              if (first_check == FALSE)
C251 COMPILER V4.55,  file_selector                                                        23/05/16  10:41:55  PAGE 5   

  254   2              {
  255   3                  no_device_flag = TRUE;
  256   3              }
  257   2              else
  258   2              {
  259   3                  stop_music_play(FALSE);
  260   3                  if ((err_music_count++) > max_music_err)
  261   3                  {
  262   4                      err_music_count = 0;
  263   4                      PlayStatus = StopSta;
  264   4                      return NULL;
  265   4                  }
  266   3                  if (prev_key_direc == Key_Next)
  267   3                  {
  268   4                      retval = get_next_prev_music(Music_Next, Auto_Sel);
  269   4                  }
  270   3                  else
  271   3                  {
  272   4                      retval = get_next_prev_music(Music_Prev, Auto_Sel);
  273   4                  }
  274   3                  //加强快速拔插卡的出错处理，以免出现死机或播放异常的问题
  275   3                  if (retval == RESULT_UI_STOP)
  276   3                  {
  277   4                      //快速拔插卡或u盘后，如果没有来得及切换磁盘，需要重新初始化磁盘
  278   4                      if (CurUselocation.disk == disk_char[1] && (DRV_DetectUD(1) == 0x20))
  279   4                      {
  280   5                      }
  281   4                      else if ((CurUselocation.disk == disk_char[0]) && (USBH_Check_Udisk() != 0))
  282   4                      {
  283   5                      }
  284   4                      else
  285   4                      {
  286   5      
  287   5                          //这里主要是为了防止卡或u盘拔出以后，没有及时检测到
  288   5                          //卡或u盘拔出消息，从而继续读取磁盘而出现错误的问题
  289   5                          first_check = FALSE;
  290   5                          goto check_disk;
  291   5                      }
  292   4                      reinit_file_info();
  293   4                  }
  294   3                  need_draw = TRUE;
  295   3              }
  296   2      
  297   2          }
  298   1          return NULL;
  299   1      }
  300          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       760     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
C251 COMPILER V4.55,  file_selector                                                        23/05/16  10:41:55  PAGE 6   

End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
