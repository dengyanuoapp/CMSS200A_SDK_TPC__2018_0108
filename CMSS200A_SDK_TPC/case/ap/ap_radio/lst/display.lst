C251 COMPILER V4.55,  display                                                              23/05/16  10:42:08  PAGE 1   


C251 COMPILER V4.55, COMPILATION OF MODULE display
OBJECT MODULE PLACED IN .\obj\display.obj
COMPILER INVOKED BY: C:\Keil\C251\BIN\C251.EXE display.c XSMALL FUNCTIONS(REENTRANT) ROM(HUGE) OPTIMIZE(9,SPEED) BROWSE 
                    -ORDER INCDIR(..\..\..\psp_rel\inc;..\..\inc;.\\FM_QN8035) I4 DEFINE(CHECKALARM) DEBUG PRINT(.\lst\display.lst) OBJECT(.\
                    -obj\display.obj) 

stmt  level    source

    1          /*
    2           *******************************************************************************
    3           *                ACTOS AP
    4           *        main ap of sdk 3.0
    5           *
    6           *        (c) Copyright, Actions Co,Ld.
    7           *             All Right Reserved
    8           *       History Record:
    9           *
   10           *******************************************************************************
   11           */
   12          #include "ap_radio.h"
   13          
   14          #pragma name(DISPLAY)
   15          
   16          void show_eq_ui(void);
   17          void RefreshMainScreen(void)
   18          {
   19   1          char buf[5];
   20   1          char i;
   21   1          LEDClearScreen();
   22   1      branch_reflash:
   23   1          switch (CurUI_Type)
   24   1          {
   25   2          case FMFreq_UI: //显示频点
   26   2              /* stop or play icon */
   27   2              LEDDisplay(LED_PLAY, 0xff, !mute_flag);
   28   2              LEDDisplay(LED_PAUSE, 0xff, mute_flag);
   29   2      
   30   2              LEDDisplay(LED_FM, 0xff, 1);
   31   2              itoa4(g_FMStatus.freq, buf);
   32   2              for (i = 0; i < 4; i++)
   33   2              {
   34   3                  buf[i] -= '0';
   35   3              }
   36   2      
   37   2              if (g_FMStatus.freq >= 1000)
   38   2              {
   39   3                  LEDDisplay(NUMBER1, buf[0], 1);
   40   3              }
   41   2              LEDDisplay(NUMBER2, buf[1], 1);
   42   2              LEDDisplay(NUMBER3, buf[2], 1);
   43   2              LEDDisplay(NUMBER4, buf[3], 1);
   44   2              break;
   45   2      
   46   2          case FMChannel_UI://显示电台号
   47   2              if (!g_FMStatus.station)
   48   2              {
   49   3                  CurUI_Type = FMFreq_UI;
   50   3                  goto branch_reflash;
   51   3                  break;
   52   3              }
   53   2              LEDDisplay(NUMBER1, NUM_C, 1);
   54   2              LEDDisplay(NUMBER2, NUM_H, 1);
   55   2              itoa2(g_FMStatus.station, buf);
   56   2              for (i = 0; i < 2; i++)
   57   2              {
C251 COMPILER V4.55,  display                                                              23/05/16  10:42:08  PAGE 2   

   58   3                  buf[i] -= '0';
   59   3              }
   60   2              LEDDisplay(NUMBER3, buf[0], 1);
   61   2              LEDDisplay(NUMBER4, buf[1], 1);
   62   2              break;
   63   2      
   64   2          case Volume_UI:
   65   2              show_volume_ui();
   66   2              //        itoa2(g_comval.volume, buf);
   67   2              //        LEDDisplay(NUMBER2, buf[0] - '0', 1);
   68   2              //        LEDDisplay(NUMBER3, buf[1] - '0', 1);
   69   2              break;
   70   2      
   71   2          case FMInputFreq_UI:
   72   2              for (i = 0; i < 4; i++)
   73   2              {
   74   3                  LEDDisplay(NUMBER1 + i, DigitalBuf[i], 1);
   75   3              }
   76   2              break;
   77   2          case EQ_UI:
   78   2              show_eq_ui();
   79   2              break;
   80   2      
   81   2          default:
   82   2              break;
   83   2          }
   84   1      }
   85          void show_eq_ui(void)
   86          {
   87   1          //memset(temp_buffer, 0xff, 0x04);
   88   1          //memcpy(temp_buffer, eq_str[g_comval.eq_type], 0x02);
   89   1          //LEDPuts(NUMBER2, temp_buffer, 1);
   90   1          LEDDisplay(NUMBER2, NUM_E, 1);
   91   1          LEDDisplay(NUMBER3, (g_comval.eq_type + 1), 1);
   92   1      
   93   1      }
   94          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       400     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
