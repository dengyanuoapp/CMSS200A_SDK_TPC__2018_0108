A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     1


MACRO ASSEMBLER A251 V4.52b
OBJECT MODULE PLACED IN .\release\obj\LCM_api.obj
ASSEMBLER INVOKED BY: E:\Keil\C251\BIN\A251.EXE LCM_api.A51 MODSRC INCDIR(..\..\..\psp_rel\inc;..\..\inc) I4 SET(XSMALL,
                      ROMHUGE) DEBUG PRINT(.\release\list\LCM_api.lst) OBJECT(.\release\obj\LCM_api.obj) EP

LOC    OBJ             LINE     SOURCE

                          1     ;$include (actos.inc)
                    +1    2     
                    +1    3     
                    +1    4     
                    +1    5     
                    +1    6     ;#include "config.h"
                    +2    7     
                    +2    8     
                    +2    9     ;#include "typeext.h"
                    +3   10     
                    +3   11     
                    +3   12     
                    +3   13     
                    +3   14     
                    +3   15     
                    +3   16     
                    +3   17     
                    +3   18     
                    +3   19     
                    +3   20     
                    +3   21     
                    +3          
                    +3          
                    +3          
                    +3          
                    +3   26     
                    +3   27     
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     2

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3   78     
                    +3   79     
                    +3   80     
                    +3   81     
                    +3   82     
                    +3   83     
                    +3   84     
                    +3   85     
                    +3   86     
                    +3   87     
                    +3   88     
                    +3   89     
                    +3   90     
                    +3   91     
                    +3   92     
                    +3   93     
                    +2   94     
                    +2   95     
                    +2   96     
                    +2   97     
                    +2   98     
                    +2   99     
                    +2  100     
                    +2  101     
                    +2  102     
                    +2  103     
                    +2  104     
                    +2  105     
                    +2  106     
                    +2  107     
                    +2  108     
                    +2  109     
                    +2  110     
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2  119     
                    +2  120     
                    +2  121     
                    +2  122     
                    +2  123     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     3

                    +2  124     
                    +2  125     
                    +2  126     
                    +2  127     
                    +1  128     
                    +1  129     ;#include "as260x.h"
                    +2  130     
                    +2  131     
                    +2  132     
                    +2  133     
                    +2  134     
                    +2  135     
                    +2  136     
                    +2  137     
                    +2  138     
                    +2  139     
                    +2  140     
                    +2  141     
                    +2  142     
                    +2  143     
                    +2  144     
                    +2  145     
                    +2  146     
                    +2  147     
                    +2  148     
                    +2  149     
                    +2  150     
                    +2  151     
                    +2  152     
                    +2  153     
                    +2  154     
                    +2  155     
                    +2  156     
                    +2  157     
                    +2  158     
                    +2  159     
                    +2  160     
                    +2  161     
                    +2  162     
                    +2  163     
                    +2  164     
                    +2  165     
                    +2  166     
                    +2  167     
                    +2  168     
                    +2  169     
                    +2  170     
                    +2  171     
                    +2  172     
                    +2  173     
                    +2  174     
                    +2  175     
                    +2  176     
                    +2  177     
                    +2  178     
 00BE               +2  179     sfr SPH                   =  0xbe;      // all bank     SPH Stack Pointer high byte
 0081               +2  180     sfr SPL                   =  0x81;      // all bank     SPL Stack Pointer low byte
 0081               +2  181     sfr SP                    =  0x81;      // all bank     SPL Stack Pointer low byte  另外
                               一种写法
 0084               +2  182     sfr DPXL                  =  0x84;      // all bank     DPXL    Data Pointer extended by
                               te
 0083               +2  183     sfr DPH                   =  0x83;      // all bank     DPH Data Pointer high byte
 0082               +2  184     sfr DPL                   =  0x82;      // all bank     DPL Data Pointer low byte
 00D0               +2  185     sfr PSW                   =  0xd0;      // all bank     PSW Program Status Word
 00D1               +2  186     sfr PSW1                  =  0xd1;      // all bank     PSW1    Program Status Word1
 00E0               +2  187     sfr ACC                   =  0xe0;      // all bank     ACC Accumulator
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     4

 00F0               +2  188     sfr B                     =  0xf0;      // all bank     B   B Register
                    +2  189     
00D0.7              +2  190     sbit CY                   =  0xD7;
00D0.6              +2  191     sbit AC                   =  0xD6;
00D0.5              +2  192     sbit F0                   =  0xD5;
00D0.4              +2  193     sbit RS1                  =  0xD4;
00D0.3              +2  194     sbit RS0                  =  0xD3;
00D0.2              +2  195     sbit OV                   =  0xD2;
00D0.1              +2  196     sbit UD                   =  0xD1;
00D0.0              +2  197     sbit P                    =  0xD0;
                    +2  198     
                    +2  199     
                    +2  200     
 008E               +2  201     sfr CCMCON                =  0x8e;      // all bank     CCMCON  Communication Control Re
                               gister
 008F               +2  202     sfr CCMVAL                =  0x8f;      // all bank     CCMVAL  Communication Value Regi
                               ster
 0085               +2  203     sfr BIRDINFO              =  0x85;      // all bank     BIRDINFO    Bird information
                    +2  204     
                    +2  205     
 0080               +2  206     sfr SFR_BANK              =  0x80;      // all bank     SFR_BANK    SFR Banking control 
                               Register
                    +2  207     
                    +2  208     
 00A0               +2  209     sfr P2                    =  0xa0;      // all bank     P2  Port2 Register which is not 
                               used of IO access
 00A1               +2  210     sfr MPAGE                 =  0xa1;      // all bank     MPAGE   same as P2 register
                    +2  211     
                    +2  212     
 00A8               +2  213     sfr IE0                   =  0xa8;      // all bank     IE0 Interrupt Enable register 0
                    +2  214     
00A8.7              +2  215     sbit EA                           = IE0 ^ 7;
                    +2          
                    +2          
                    +2          
 00E8               +2  219     sfr AIE                   =  0xe8;      // all bank     AIE Additional Interrupt Enable 
                               register
 00B7               +2  220     sfr IPH0                  =  0xb7;      // 0x00         Interrupt Priority High register
                                0
 00B8               +2  221     sfr IPL0                  =  0xb8;      // 0x00         Interrupt Priority Low register 
                               0
 00F7               +2  222     sfr AIPH                  =  0xf7;      // 0x00         Additional Interrupt Priority Hi
                               gh register
 00F8               +2  223     sfr AIPL                  =  0xf8;      // 0x00         Additional Interrupt Priority Lo
                               w register
 0088               +2  224     sfr IF0                   =  0x88;      // all bank     Interrupt Flag register 0
 00C0               +2  225     sfr AIF                   =  0xc0;      // all bank     Additional interrupt flag regist
                               er
 00D8               +2  226     sfr EXTINT                =  0xd8;      // 0x06         External Interrupt Control
 00F5               +2  227     sfr IFDebug0              =  0xf5;      // 0x01         Interrupt Flag Debug register 0
 00F6               +2  228     sfr IFDebug1              =  0xf6;      // 0x01         Interrupt Flag Debug register 0
                    +2  229     
                    +2  230     
                    +2  231     
                    +2  232     
 00F9               +2  233     sfr MemBankCtl                                  =  0xf9;      // all bank       Memory b
                               anking control register
 0090               +2  234     sfr PageAddr0H                                  =  0x90;      // 0x00   High byte of Pag
                               e Address register 0
 0091               +2  235     sfr PageAddr0L                                  =  0x91;      // 0x00   Low byte of Page
                                Address register 0
 0092               +2  236     sfr PageAddr1H                                  =  0x92;      // 0x00   High byte of Pag
                               e Address register 1
 0093               +2  237     sfr PageAddr1L                                  =  0x93;      // 0x00   Low byte of Page
                                Address register 1
 0094               +2  238     sfr PageAddr2H                                  =  0x94;      // 0x00   High byte of Pag
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     5

                               e Address register 2
 0095               +2  239     sfr PageAddr2L                                  =  0x95;      // 0x00   Low byte of Page
                                Address register 2
 0098               +2  240     sfr PageAddr3H                                  =  0x98;      // 0x00   High byte of Pag
                               e Address register 3
 0099               +2  241     sfr PageAddr3L                                  =  0x99;      // 0x00   Low byte of Page
                                Address register 3
 009A               +2  242     sfr PageAddr4H                                  =  0x9a;      // 0x00   High byte of Pag
                               e Address register 4
 009B               +2  243     sfr PageAddr4L                                  =  0x9b;      // 0x00   Low byte of Page
                                Address register 4
 009C               +2  244     sfr PageAddr5H                                  =  0x9c;      // 0x00   High byte of Pag
                               e Address register 5
 009D               +2  245     sfr PageAddr5L                                  =  0x9d;      // 0x00   Low byte of Page
                                Address register 5
 009E               +2  246     sfr PageAddr6H                                  =  0x9e;      // 0x00   High byte of Pag
                               e Address register 6
 009F               +2  247     sfr PageAddr6L                                  =  0x9f;      // 0x00   Low byte of Page
                                Address register 6
 00A2               +2  248     sfr PageAddr7H                                  =  0xa2;      // 0x00   High byte of Pag
                               e Address register 7
 00A3               +2  249     sfr PageAddr7L                                  =  0xa3;      // 0x00   Low byte of Page
                                Address register 7
 00D8               +2  250     sfr PageAddr8H                                  =  0xd8;      // 0x00   High byte of Pag
                               e Address register 8
 00D9               +2  251     sfr PageAddr8L                                  =  0xd9;      // 0x00   Low byte of Page
                                Address register 8
 00DA               +2  252     sfr PageAddr9H                                  =  0xda;      // 0x00   High byte of Pag
                               e Address register 9
 00DB               +2  253     sfr PageAddr9L                                  =  0xdb;      // 0x00   Low byte of Page
                                Address register 9
 00B0               +2  254     sfr PageAddrMask0                               =  0xb0;      // 0x00   Page 0 Address M
                               ask register
 00B1               +2  255     sfr PageAddrMask1                               =  0xb1;      // 0x00   Page 1 Address M
                               ask register
 00B2               +2  256     sfr PageAddrMask2                               =  0xb2;      // 0x00   Page 2 Address M
                               ask register
 00B3               +2  257     sfr PageAddrMask3                               =  0xb3;      // 0x00   Page 3 Address M
                               ask register
 00B4               +2  258     sfr PageAddrMask4                               =  0xb4;      // 0x00   Page 4 Address M
                               ask register
 00B5               +2  259     sfr PageAddrMask5                               =  0xb5;      // 0x00   Page 5 Address M
                               ask register
 00B6               +2  260     sfr PageAddrMask6                               =  0xb6;      // 0x00   Page 6 Address M
                               ask register
 00D2               +2  261     sfr PageAddrMask7                               =  0xd2;      // 0x00   Page 7 Address M
                               ask register
 00D4               +2  262     sfr PageAddrMask8                               =  0xd4;      // 0x00   Page 8 Address M
                               ask register
 00D5               +2  263     sfr PageAddrMask9                               =  0xd5;      // 0x00   Page 9 Address M
                               ask register
 00C8               +2  264     sfr RedirectAddr0                               =  0xc8;      // 0x00   Redirect Address
                                0
 00C9               +2  265     sfr RedirectAddr1                               =  0xc9;      // 0x00   Redirect Address
                                1
 00CA               +2  266     sfr RedirectAddr2                               =  0xca;      // 0x00   Redirect Address
                                2
 00CB               +2  267     sfr RedirectAddr3                               =  0xcb;      // 0x00   Redirect Address
                                3
 00CC               +2  268     sfr RedirectAddr4                               =  0xcc;      // 0x00   Redirect Address
                                4
 00CD               +2  269     sfr RedirectAddr5                               =  0xcd;      // 0x00   Redirect Address
                                5
 00CE               +2  270     sfr RedirectAddr6                               =  0xce;      // 0x00   Redirect Address
                                6
 00CF               +2  271     sfr RedirectAddr7                               =  0xcf;      // 0x00   Redirect Address
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     6

                                7
 00D6               +2  272     sfr RedirectAddr8                               =  0xd6;      // 0x00   Redirect Address
                                8
 00D7               +2  273     sfr RedirectAddr9                               =  0xd7;      // 0x00   Redirect Address
                                9
 00D3               +2  274     sfr FixAddr0H                                   =  0xd3;      // 0x00   Hight byte of Fi
                               x Address register 0
 00B9               +2  275     sfr FixAddr0M                                   =  0xb9;      // 0x00   Middle byte of F
                               ix Address register 0
 00BA               +2  276     sfr FixAddr0L                                   =  0xba;      // 0x00   Low byte of Fix 
                               Address register 0
 00BB               +2  277     sfr FixAddr1H                                   =  0xbb;      // 0x00   Hight byte of Fi
                               x Address register 1
 00BC               +2  278     sfr FixAddr1M                                   =  0xbc;      // 0x00   Middle byte of F
                               ix Address register 1
 00BD               +2  279     sfr FixAddr1L                                   =  0xbd;      // 0x00   Low byte of Fix 
                               Address register 1
 00C2               +2  280     sfr FixAddr2H                                   =  0xc2;      // 0x00   Hight byte of Fi
                               x Address register 2
 00C3               +2  281     sfr FixAddr2M                                   =  0xc3;      // 0x00   Middle byte of F
                               ix Address register 2
 00C4               +2  282     sfr FixAddr2L                                   =  0xc4;      // 0x00   Low byte of Fix 
                               Address register 2
 00C5               +2  283     sfr FixAddr3H                                   =  0xc5;      // 0x00   Hight byte of Fi
                               x Address register 3
 00C6               +2  284     sfr FixAddr3M                                   =  0xc6;      // 0x00   Middle byte of F
                               ix Address register 3
 00C7               +2  285     sfr FixAddr3L                                   =  0xc7;      // 0x00   Low byte of Fix 
                               Address register 3
 00F4               +2  286     sfr PageMissEntryEx                             =  0xf4;      // 0x00   Page Miss Entry 
                               Address Extension byte
 00F5               +2  287     sfr PageMissEntryH                              =  0xf5;      // 0x00   Page Miss Entry 
                               Address High byte
 00F6               +2  288     sfr PageMissEntryL                              =  0xf6;      // 0x00   Page Miss Entry 
                               Address Low byte
 00A5               +2  289     sfr CodeReplaceEntryEx                          =  0xa5;      // 0x00   Code Replace Ent
                               ry Address Extension byte
 00A6               +2  290     sfr CodeReplaceEntryH                           =  0xa6;      // 0x00   Code Replace Ent
                               ry Address High byte
 00A7               +2  291     sfr CodeReplaceEntryL                           =  0xa7;      // 0x00   Code Replace Ent
                               ry Address Low byte
 00FC               +2  292     sfr TestCounterByte0                            =  0xfc;      // 0x00   Test Counter byt
                               e register 0
 00FD               +2  293     sfr TestCounterByte1                            =  0xfd;      // 0x00   Test Counter byt
                               e register 1
 00FE               +2  294     sfr TestCounterByte2                            =  0xfe;      // 0x00   Test Counter byt
                               e register 2
 00FF               +2  295     sfr TestCounterByte3                            =  0xff;      // 0x00   Test Counter byt
                               e register 3
 00F1               +2  296     sfr TestCounterByte4                            =  0xf1;      // 0x00   Test Counter byt
                               e register 4
 00E1               +2  297     sfr bist_en1                                    =  0xe1;      // 0x01   Bist enable regi
                               ster1
 00E2               +2  298     sfr bist_en2                                    =  0xe2;      // 0x01   Bist enable regi
                               ster2
 00E4               +2  299     sfr bist_fin1                                   =  0xe4;      // 0x01   Bist finish flag
                                register1
 00E5               +2  300     sfr bist_fin2                                   =  0xe5;      // 0x01   Bist finish flag
                                register2
 00E7               +2  301     sfr bist_info1                                  =  0xe7;      // 0x01   Bist information
                                register1
 00E9               +2  302     sfr bist_info2                                  =  0xe9;      // 0x01   Bist information
                                register2
                    +2  303     
                    +2  304     
                    +2  305     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     7

                    +2  306     
                    +2  307     
                    +2  308     
 0089               +2  309     sfr VOUT_CTL                                    =  0x89;      // 0x05   VCC/VDD voltage 
                               set Register
 008A               +2  310     sfr LDOPD_CTL                                   =  0x8a;      // 0x05   Capless LDO pull
                               down control
 008B               +2  311     sfr BDG_CTL                                     =  0x8b;      // 0x05   Bandgap enable R
                               egister
 008C               +2  312     sfr BDG_VOL                                     =  0x8c;      // 0x05   Bandgap voltage 
                               Register
 008D               +2  313     sfr MULTI_USED                                  =  0x8d;      // 0x05   GPIO multi-used 
                               set Register
 0090               +2  314     sfr PMUADC_CTL                                  =  0x90;      // 0x05   PMU ADC frequenc
                               y and enable Register
 0091               +2  315     sfr BATADC_DATA                                 =  0x91;      // 0x05   BATADC data Regi
                               ster
 0092               +2  316     sfr LRADC1_DATA                                 =  0x92;      // 0x05   LRADC1 data Regi
                               ster
 0093               +2  317     sfr LRADC3_DATA                                 =  0x93;      // 0x05   LRADC3 data Regi
                               ster
 0094               +2  318     sfr LRADC4_DATA                                 =  0x94;      // 0x05   LRADC4 data Regi
                               ster
 0095               +2  319     sfr LRADC5_DATA                                 =  0x95;      // 0x05   LRADC5 data Regi
                               ster
 0097               +2  320     sfr CP_CTL0                                     =  0x97;      // 0x05   Charge pump cont
                               rol Register
 0098               +2  321     sfr CP_CTL1                                     =  0x98;      // 0x05   Charge pump cont
                               rol Register
 0099               +2  322     sfr VDD_reserved                                =  0x99;      // 0x05   reserved
 009A               +2  323     sfr TEST_CTL                                    =  0x9a;      // 0x05   Standby test con
                               trol Register
 009B               +2  324     sfr SYSTEM_CTL                                  =  0x9b;      // 0x05   System on/off ti
                               me set Register
 009C               +2  325     sfr SYSTEM_ONOFF                                =  0x9c;      // 0x05   on/off statue & 
                               RESET time set Register
 009D               +2  326     sfr RTCVDD_reserved                             =  0x9d;      // 0x05   reserved
 00A2               +2  327     sfr FS_CTL                                      =  0xa2;      // 0x05   Fsource control 
                               and EFUSE select Register
 00A3               +2  328     sfr EFUSE_CTL                                   =  0xa3;      // 0x05   EFSUE control Re
                               gister
 00A4               +2  329     sfr EFUSE0                                      =  0xa4;      // 0x05   EFUSE0 data Regi
                               ster
 00A5               +2  330     sfr EFUSE1                                      =  0xa5;      // 0x05   EFUSE1 data Regi
                               ster
 00A6               +2  331     sfr EFUSE2                                      =  0xa6;      // 0x05   EFUSE2 data Regi
                               ster
 00A7               +2  332     sfr EFUSE3                                      =  0xa7;      // 0x05   EFUSE3 data Regi
                               ster
                    +2  333     
                    +2  334     
                    +2  335     
                    +2  336     
                    +2  337     
                    +2  338     
                    +2  339     
 0086               +2  340     sfr MRCR1                                       =  0x86;      // 0x01   Module Reset Con
                               trol Register 1
 0087               +2  341     sfr PCON                                        =  0x87;      // all bank       Power Co
                               ntrol Register
 0089               +2  342     sfr MRCR2                                       =  0x89;      // 0x01   Module Reset Con
                               trol Register 2
 009F               +2  343     sfr MRCR3                                       =  0x9f;      // 0x01   Module Reset Con
                               trol Register 3
 0096               +2  344     sfr ExWait                                      =  0x96;      // all bank       External
                                bus access wait cycle
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     8

                    +2  345     
                    +2  346     
                    +2  347     
                    +2  348     
                    +2  349     
                    +2  350     
                    +2  351     
 00B3               +2  352     sfr MCU_PLL_CTL                                 =  0xb3;      // 0x01   MCUPLL control r
                               egister
 00B6               +2  353     sfr HOSC_CTL                                    =  0xb6;      // 0x01   HOSC control reg
                               ister
 00B7               +2  354     sfr LOSC_CTL                                    =  0xb7;      // 0x01   LOSC control reg
                               ister
 00B8               +2  355     sfr HCL_CLK_CTL                                 =  0xb8;      // 0x01   CALENDAR clock c
                               ontrol register
 00B5               +2  356     sfr HCL_INTERVAL_CTL                            =  0xb5;      // 0x01   HCL calibration 
                               interval control register
 00B9               +2  357     sfr AUDIO_PLL_CTL                               =  0xb9;      // 0x01   AUDIO PLL contro
                               l register
 00BA               +2  358     sfr MCU_PLL_SSC_CTL                             =  0xba;      // 0x01   MCU PLL spread s
                               pectrum control register
 00BB               +2  359     sfr MCU_PLL_SSC_FSTEP                           =  0xbb;      // 0x01   MCU PLL spread s
                               pectrum frequency step
 00BC               +2  360     sfr MCU_PLL_DEBUG_CTL                           =  0xbc;      // 0x01   MCU PLL debug co
                               ntrol register
                    +2  361     
                    +2  362     
                    +2  363     
                    +2  364     
                    +2  365     
                    +2  366     
 00A9               +2  367     sfr CLKENCTL0                                   =  0xa9;      // 0x01   Clock Enable Con
                               trol Register 0
 00AA               +2  368     sfr CLKENCTL1                                   =  0xaa;      // 0x01   Clock Enable Con
                               trol Register 1
 00AB               +2  369     sfr CLKENCTL2                                   =  0xab;      // 0x01   Clock Enable Con
                               trol Register 2
 00AC               +2  370     sfr SDCLKCTL                                    =  0xac;      // 0x01   SD Card Control 
                               Register
 00C2               +2  371     sfr CPUCLKCTL                                   =  0xc2;      // 0x01   CPU Clock Contro
                               l Register
 00C3               +2  372     sfr PWMCLKCTL                                   =  0xc3;      // 0x01   PWM Clock Contro
                               l Register
 00AF               +2  373     sfr PWMDUTY                                     =  0xaf;      // 0x01   PWM Duty Control
                                Register
 00C4               +2  374     sfr AECLKCTL                                    =  0xc4;      // 0x01   Audio Codec Cloc
                               k Control Register
                    +2  375     
 00C8               +2  376     sfr FMCLKCTL                                    =  0xc8;      // 0x01   FM Clock Control
                                Register
 00C9               +2  377     sfr LED_SEGLCDCLKCTL                            =  0xc9;      // 0x01   LED & SEG LCD cl
                               ock Control Register
 00CA               +2  378     sfr SPICLKCTL                                   =  0xca;      // 0x01   SPI controller C
                               lock Control Register
 00BD               +2  379     sfr ADC_DAC_CLK_CTL                             =  0xbd;      // 0x01   ADC & DAC Clock 
                               Control Register
 00AD               +2  380     sfr MEMCLKSELCTL0                               =  0xad;      // 0x01   Memory Clock Sel
                               ection Control Register 0
 00AE               +2  381     sfr MEMCLKSELCTL1                               =  0xae;      // 0x01   Memory Clock Sel
                               ection Control Register 1
 00B4               +2  382     sfr MEMCLKENCTL0                                =  0xb4;      // 0x01   Memory Clock Ena
                               ble Control Register 0
                    +2  383     
                    +2  384     
                    +2  385     
                    +2  386     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE     9

                    +2  387     
                    +2  388     
 00A9               +2  389     sfr RTC_CTL0                                    =  0xa9;      // 0x0c   RTC Control 0 Re
                               gister
 00AA               +2  390     sfr RTC_CTL1                                    =  0xaa;      // 0x0c   RTC Control 1 re
                               gister
 00AB               +2  391     sfr RTCTimeS                                    =  0xab;      // 0x0c   RTC Time Second 
                               Register
 00AC               +2  392     sfr RTCTimeMint                                 =  0xac;      // 0x0c   RTC Time Minute 
                               Register
 00AD               +2  393     sfr RTCTimeH                                    =  0xad;      // 0x0c   RTC Time Hour Re
                               gister
 00AE               +2  394     sfr RTCTimeD                                    =  0xae;      // 0x0c   RTC Time Day Reg
                               ister
 00AF               +2  395     sfr RTCTimeMon                                  =  0xaf;      // 0x0c   RTC Time Month R
                               egister
 00B0               +2  396     sfr RTCTimeY                                    =  0xb0;      // 0x0c   RTC Time Year Re
                               gister
 00B1               +2  397     sfr RTCALMS                                     =  0xb1;      // 0x0c   RTC Alarm Second
                                Register
 00B2               +2  398     sfr RTCALMM                                     =  0xb2;      // 0x0c   RTC Alarm Minute
                                Register
 00B3               +2  399     sfr RTCALMH                                     =  0xb3;      // 0x0c   RTC Alarm Hour R
                               egister
 00B4               +2  400     sfr RTCRUPD                                     =  0xb4;      // 0x0c   RTC Register upd
                               ate Register
 00B5               +2  401     sfr TimerLB                                     =  0xb5;      // 0x0c   Timer low Byte
 00B6               +2  402     sfr TimerMB                                     =  0xb6;      // 0x0c   Timer middle Byt
                               e
 00B7               +2  403     sfr TimerHB                                     =  0xb7;      // 0x0c   Timer high Byte
 00B8               +2  404     sfr WDCTL                                       =  0xb8;      // 0x0c   watch dog contro
                               l register
 00B9               +2  405     sfr CTCCTL                                      =  0xb9;      // 0x0c   CTC control regi
                               ster
 00BA               +2  406     sfr CTCCNTL                                     =  0xba;      // 0x0c   CTC counter low 
                               register
 00BB               +2  407     sfr CTCCNTH                                     =  0xbb;      // 0x0c   CTC counter high
                                register
 00BC               +2  408     sfr RTCRDM0                                     =  0xbc;      // 0x0c   RTC Random acces
                               s Register
 00BD               +2  409     sfr RTCRDM1                                     =  0xbd;      // 0x0c   RTC Random acces
                               s Register
 00BF               +2  410     sfr RTCRDM2                                     =  0xbf;      // 0x0c   RTC Random acces
                               s Register
 00C1               +2  411     sfr RTCRDM3                                     =  0xc1;      // 0x0c   RTC Random acces
                               s Register
 00C2               +2  412     sfr RTCRDM4                                     =  0xc2;      // 0x0c   RTC Random acces
                               s Register
 00C3               +2  413     sfr RTCRDM5                                     =  0xc3;      // 0x0c   RTC Random acces
                               s Register
 00C4               +2  414     sfr RTCRDM6                                     =  0xc4;      // 0x0c   RTC Random acces
                               s Register
 00C5               +2  415     sfr RTCRDM7                                     =  0xc5;      // 0x0c   RTC Random acces
                               s Register
 00C6               +2  416     sfr RTCRDM8                                     =  0xc6;      // 0x0c   RTC Random acces
                               s Register
 00C7               +2  417     sfr RTCRDM9                                     =  0xc7;      // 0x0c   RTC Random acces
                               s Register
 00C8               +2  418     sfr RTCRDM10                                    =  0xc8;      // 0x0c   RTC Random acces
                               s Register
 00C9               +2  419     sfr RTCRDM11                                    =  0xc9;      // 0x0c   RTC Random acces
                               s Register
 00CA               +2  420     sfr RTCRDM12                                    =  0xca;      // 0x0c   RTC Random acces
                               s Register
 00CB               +2  421     sfr RTCRDM13                                    =  0xcb;      // 0x0c   RTC Random acces
                               s Register
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    10

 00CC               +2  422     sfr RTCRDM14                                    =  0xcc;      // 0x0c   RTC Random acces
                               s Register
 00CD               +2  423     sfr RTCRDM15                                    =  0xcd;      // 0x0c   RTC Random acces
                               s Register
 00CE               +2  424     sfr RTCRDM16                                    =  0xce;      // 0x0c   RTC Random acces
                               s Register
 00CF               +2  425     sfr RTCRDM17                                    =  0xcf;      // 0x0c   RTC Random acces
                               s Register
 00D2               +2  426     sfr RTCRDM18                                    =  0xd2;      // 0x0c   RTC Random acces
                               s Register
 00D3               +2  427     sfr RTCRDM19                                    =  0xd3;      // 0x0c   RTC Random acces
                               s Register
 00D4               +2  428     sfr RTCRDM20                                    =  0xd4;      // 0x0c   RTC Random acces
                               s Register
 00D5               +2  429     sfr RTCRDM21                                    =  0xd5;      // 0x0c   RTC Random acces
                               s Register
 00D6               +2  430     sfr RTCRDM22                                    =  0xd6;      // 0x0c   RTC Random acces
                               s Register
 00D7               +2  431     sfr CTCCTL2                                     =  0xd7;      // 0x0c   CTC2 control reg
                               ister
 00D8               +2  432     sfr CTCCNTL2                                    =  0xd8;      // 0x0c   CTC2 counter low
                                register
 00D9               +2  433     sfr CTCCNTH2                                    =  0xd9;      // 0x0c   CTC3 counter hig
                               h register
                    +2  434     
                    +2  435     
                    +2  436     
                    +2  437     
                    +2  438     
                    +2  439     
                    +2  440     
                    +2  441     
 0091               +2  442     sfr DMA0IP                                      =  0x91;      // 0x0e   DMA0 interrupt p
                               ending register
 0092               +2  443     sfr DMA0IE                                      =  0x92;      // 0x0e   DMA0 interrupt e
                               nable register
 0093               +2  444     sfr DMA01234DBG                                 =  0x93;      // 0x0e/0x0f/0x10/0x11/0x1
                               2       DMA0/1/2/3/4 debug register
 0094               +2  445     sfr DMA0CTL0                                    =  0x94;      // 0x0e   DMA0 control reg
                               ister 0
 0095               +2  446     sfr DMA0CTL1                                    =  0x95;      // 0x0e   DMA0 control reg
                               ister 1
 0097               +2  447     sfr DMA0SADDR0H                                 =  0x97;      // 0x0e   DMA0 source addr
                               ess register 0 high byte
 0098               +2  448     sfr DMA0SADDR0L                                 =  0x98;      // 0x0e   DMA0 source addr
                               ess register 0 low byte
 0099               +2  449     sfr DMA0SADDR1H                                 =  0x99;      // 0x0e   DMA0 source addr
                               ess register 1 high byte
 009A               +2  450     sfr DMA0SADDR1L                                 =  0x9a;      // 0x0e   DMA0 source addr
                               ess register 1 low byte
 009B               +2  451     sfr DMA0SADDR0M                                 =  0x9b;      // 0x0e   DMA0 source addr
                               ess register 0 middle byte
 009C               +2  452     sfr DMA0SADDR1M                                 =  0x9c;      // 0x0e   DMA0 source addr
                               ess register 1 middle byte
 009D               +2  453     sfr DMA0DADDR0H                                 =  0x9d;      // 0x0e   DMA0 destination
                                address register 0 high byte
 009E               +2  454     sfr DMA0DADDR0L                                 =  0x9e;      // 0x0e   DMA0 destination
                                address register 0 low byte
 009F               +2  455     sfr DMA0DADDR0M                                 =  0x9f;      // 0x0e   DMA0 destination
                                address register 0 middle byte
 00A2               +2  456     sfr DMA0DADDR1H                                 =  0xa2;      // 0x0e   DMA0 destination
                                address register 1 high byte
 00A3               +2  457     sfr DMA0DADDR1L                                 =  0xa3;      // 0x0e   DMA0 destination
                                address register 1 low byte
 00A4               +2  458     sfr DMA0FrameLenH                               =  0xa4;      // 0x0e   DMA0 frame lengt
                               h register high byte
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    11

 00A5               +2  459     sfr DMA0FrameLenL                               =  0xa5;      // 0x0e   DMA0 frame lengt
                               h register low byte
 00A6               +2  460     sfr DMA0DADDR1M                                 =  0xa6;      // 0x0e   DMA0 destination
                                address register 1 middle byte
 0091               +2  461     sfr DMA1IP                                      =  0x91;      // 0x0f   DMA1 interrupt p
                               ending register
 0092               +2  462     sfr DMA1IE                                      =  0x92;      // 0x0f   DMA1 interrupt e
                               nable register
 0094               +2  463     sfr DMA1CTL0                                    =  0x94;      // 0x0f   DMA1 control reg
                               ister 0
 0095               +2  464     sfr DMA1CTL1                                    =  0x95;      // 0x0f   DMA1 control reg
                               ister 1
 0097               +2  465     sfr DMA1SADDR0H                                 =  0x97;      // 0x0f   DMA1 source addr
                               ess register 0 high byte
 0098               +2  466     sfr DMA1SADDR0L                                 =  0x98;      // 0x0f   DMA1 source addr
                               ess register 0 low byte
 0099               +2  467     sfr DMA1SADDR1H                                 =  0x99;      // 0x0f   DMA1 source addr
                               ess register 1 high byte
 009A               +2  468     sfr DMA1SADDR1L                                 =  0x9a;      // 0x0f   DMA1 source addr
                               ess register 1 low byte
 009B               +2  469     sfr DMA1SADDR0M                                 =  0x9b;      // 0x0f   DMA1 source addr
                               ess register 0 middle byte
 009C               +2  470     sfr DMA1SADDR1M                                 =  0x9c;      // 0x0f   DMA1 source addr
                               ess register 1 middle byte
 009D               +2  471     sfr DMA1DADDR0H                                 =  0x9d;      // 0x0f   DMA1 destination
                                address register 0 high byte
 009E               +2  472     sfr DMA1DADDR0L                                 =  0x9e;      // 0x0f   DMA1 destination
                                address register 0 low byte
 009F               +2  473     sfr DMA1DADDR0M                                 =  0x9f;      // 0x0f   DMA1 destination
                                address register 0 middle byte
 00A2               +2  474     sfr DMA1DADDR1H                                 =  0xa2;      // 0x0f   DMA1 destination
                                address register 1 high byte
 00A3               +2  475     sfr DMA1DADDR1L                                 =  0xa3;      // 0x0f   DMA1 destination
                                address register 1 low byte
 00A4               +2  476     sfr DMA1FrameLenH                               =  0xa4;      // 0x0f   DMA1 frame lengt
                               h register high byte
 00A5               +2  477     sfr DMA1FrameLenL                               =  0xa5;      // 0x0f   DMA1 frame lengt
                               h register low byte
 00A6               +2  478     sfr DMA1DADDR1M                                 =  0xa6;      // 0x0f   DMA1 destination
                                address register 1 middle byte
 0091               +2  479     sfr DMA2IP                                      =  0x91;      // 0x10   DMA2 interrupt p
                               ending register
 0092               +2  480     sfr DMA2IE                                      =  0x92;      // 0x10   DMA2 interrupt e
                               nable register
 0094               +2  481     sfr DMA2CTL0                                    =  0x94;      // 0x10   DMA2 control reg
                               ister 0
 0095               +2  482     sfr DMA2CTL1                                    =  0x95;      // 0x10   DMA2 control reg
                               ister 1
 0097               +2  483     sfr DMA2SADDR0H                                 =  0x97;      // 0x10   DMA2 source addr
                               ess register 0 high byte
 0098               +2  484     sfr DMA2SADDR0L                                 =  0x98;      // 0x10   DMA2 source addr
                               ess register 0 low byte
 0099               +2  485     sfr DMA2SADDR1H                                 =  0x99;      // 0x10   DMA2 source addr
                               ess register 1 high byte
 009A               +2  486     sfr DMA2SADDR1L                                 =  0x9a;      // 0x10   DMA2 source addr
                               ess register 1 low byte
 009B               +2  487     sfr DMA2SADDR0M                                 =  0x9b;      // 0x10   DMA2 source addr
                               ess register 0 middle byte
 009C               +2  488     sfr DMA2SADDR1M                                 =  0x9c;      // 0x10   DMA2 source addr
                               ess register 1 middle byte
 009D               +2  489     sfr DMA2DADDR0H                                 =  0x9d;      // 0x10   DMA2 destination
                                address register 0 high byte
 009E               +2  490     sfr DMA2DADDR0L                                 =  0x9e;      // 0x10   DMA2 destination
                                address register 0 low byte
 009F               +2  491     sfr DMA2DADDR0M                                 =  0x9f;      // 0x10   DMA2 destination
                                address register 0 middle byte
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    12

 00A2               +2  492     sfr DMA2DADDR1H                                 =  0xa2;      // 0x10   DMA2 destination
                                address register 1 high byte
 00A3               +2  493     sfr DMA2DADDR1L                                 =  0xa3;      // 0x10   DMA2 destination
                                address register 1 low byte
 00A4               +2  494     sfr DMA2FrameLenH                               =  0xa4;      // 0x10   DMA2 frame lengt
                               h register high byte
 00A5               +2  495     sfr DMA2FrameLenL                               =  0xa5;      // 0x10   DMA2 frame lengt
                               h register low byte
 00A6               +2  496     sfr DMA2DADDR1M                                 =  0xa6;      // 0x10   DMA2 destination
                                address register 1 middle byte
 0091               +2  497     sfr DMA3IP                                      =  0x91;      // 0x11   DMA3 interrupt p
                               ending register
 0092               +2  498     sfr DMA3IE                                      =  0x92;      // 0x11   DMA3 interrupt e
                               nable register
 0094               +2  499     sfr DMA3CTL0                                    =  0x94;      // 0x11   DMA3 control reg
                               ister 0
 0095               +2  500     sfr DMA3CTL1                                    =  0x95;      // 0x11   DMA3 control reg
                               ister 1
 0097               +2  501     sfr DMA3SADDR0H                                 =  0x97;      // 0x11   DMA3 source addr
                               ess register 0 high byte
 0098               +2  502     sfr DMA3SADDR0L                                 =  0x98;      // 0x11   DMA3 source addr
                               ess register 0 low byte
 0099               +2  503     sfr DMA3SADDR1H                                 =  0x99;      // 0x11   DMA3 source addr
                               ess register 1 high byte
 009A               +2  504     sfr DMA3SADDR1L                                 =  0x9a;      // 0x11   DMA3 source addr
                               ess register 1 low byte
 009B               +2  505     sfr DMA3SADDR0M                                 =  0x9b;      // 0x11   DMA3 source addr
                               ess register 0 middle byte
 009C               +2  506     sfr DMA3SADDR1M                                 =  0x9c;      // 0x11   DMA3 source addr
                               ess register 1 middle byte
 009D               +2  507     sfr DMA3DADDR0H                                 =  0x9d;      // 0x11   DMA3 destination
                                address register 0 high byte
 009E               +2  508     sfr DMA3DADDR0L                                 =  0x9e;      // 0x11   DMA3 destination
                                address register 0 low byte
 009F               +2  509     sfr DMA3DADDR0M                                 =  0x9f;      // 0x11   DMA0 destination
                                address register 0 middle byte
 00A2               +2  510     sfr DMA3DADDR1H                                 =  0xa2;      // 0x11   DMA3 destination
                                address register 1 high byte
 00A3               +2  511     sfr DMA3DADDR1L                                 =  0xa3;      // 0x11   DMA3 destination
                                address register 1 low byte
 00A4               +2  512     sfr DMA3FrameLenH                               =  0xa4;      // 0x11   DMA3 frame lengt
                               h register high byte
 00A5               +2  513     sfr DMA3FrameLenL                               =  0xa5;      // 0x11   DMA3 frame lengt
                               h register low byte
 00A6               +2  514     sfr DMA3DADDR1M                                 =  0xa6;      // 0x11   DMA3 destination
                                address register 1 middle byte
 0091               +2  515     sfr DMA4IP                                      =  0x91;      // 0x12   DMA4 interrupt p
                               ending register
 0092               +2  516     sfr DMA4IE                                      =  0x92;      // 0x12   DMA4 interrupt e
                               nable register
 0094               +2  517     sfr DMA4CTL0                                    =  0x94;      // 0x12   DMA4 control reg
                               ister 0
 0095               +2  518     sfr DMA4CTL1                                    =  0x95;      // 0x12   DMA4control regi
                               ster 1
 0097               +2  519     sfr DMA4SADDR0H                                 =  0x97;      // 0x12   DMA4 source addr
                               ess register 0 high byte
 0098               +2  520     sfr DMA4SADDR0L                                 =  0x98;      // 0x12   DMA4 source addr
                               ess register 0 low byte
 0099               +2  521     sfr DMA4SADDR1H                                 =  0x99;      // 0x12   DMA4 source addr
                               ess register 1 high byte
 009A               +2  522     sfr DMA4SADDR1L                                 =  0x9a;      // 0x12   DMA4 source addr
                               ess register 1 low byte
 009B               +2  523     sfr DMA4SADDR0M                                 =  0x9b;      // 0x12   DMA4 source addr
                               ess register 0 middle byte
 009C               +2  524     sfr DMA4SADDR1M                                 =  0x9c;      // 0x12   DMA4 source addr
                               ess register 1 middle byte
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    13

 009D               +2  525     sfr DMA4DADDR0H                                 =  0x9d;      // 0x12   DMA4 destination
                                address register 0 high byte
 009E               +2  526     sfr DMA4DADDR0L                                 =  0x9e;      // 0x12   DMA4 destination
                                address register 0 low byte
 009F               +2  527     sfr DMA4DADDR0M                                 =  0x9f;      // 0x12   DMA4 destination
                                address register 0 middle byte
 00A2               +2  528     sfr DMA4DADDR1H                                 =  0xa2;      // 0x12   DMA4 destination
                                address register 1 high byte
 00A3               +2  529     sfr DMA4DADDR1L                                 =  0xa3;      // 0x12   DMA4 destination
                                address register 1 low byte
 00A4               +2  530     sfr DMA4FrameLenH                               =  0xa4;      // 0x12   DMA4 frame lengt
                               h register high byte
 00A5               +2  531     sfr DMA4FrameLenL                               =  0xa5;      // 0x12   DMA4 frame lengt
                               h register low byte
 00A6               +2  532     sfr DMA4DADDR1M                                 =  0xa6;      // 0x12   DMA4 destination
                                address register 1 middle byte
                    +2  533     
 0091               +2  534     sfr DMAnIP                                      =  0x91;      // 0x0e/0f10/11/12        
                               DMA1 interrupt pending register
 0092               +2  535     sfr DMAnIE                                      =  0x92;      // 0x0e/0f10/11/12        
                               DMA1 interrupt enable register
 0094               +2  536     sfr DMAnCTL0                                    =  0x94;      // 0x0e/0f10/11/12        
                               DMA1 control register 0
 0095               +2  537     sfr DMAnCTL1                                    =  0x95;      // 0x0e/0f10/11/12        
                               DMA1 control register 1
 0097               +2  538     sfr DMAnSADDR0H                                 =  0x97;      // 0x0e/0f10/11/12        
                               DMA1 source address register 0 high byte
 009B               +2  539     sfr DMAnSADDR0M                                 =  0x9b;      // 0x0e/0f10/11/12        
                               DMA1 source address register 0 midlle byte
 0098               +2  540     sfr DMAnSADDR0L                                 =  0x98;      // 0x0e/0f10/11/12        
                               DMA1 source address register 0 low byte
 0099               +2  541     sfr DMAnSADDR1H                                 =  0x99;      // 0x0e/0f10/11/12        
                               DMA1 source address register 1 high byte
 009C               +2  542     sfr DMAnSADDR1M                                 =  0x9c;      // 0x0e/0f10/11/12        
                               DMA1 source address register 1 midlle byte
 009A               +2  543     sfr DMAnSADDR1L                                 =  0x9a;      // 0x0e/0f10/11/12        
                               DMA1 source address register 1 low byte
 009D               +2  544     sfr DMAnDADDR0H                                 =  0x9d;      // 0x0e/0f10/11/12        
                               DMA1 destination address register 0 high byte
 009F               +2  545     sfr DMAnDADDR0M                                 =  0x9f;      // 0x0e/0f10/11/12        
                               DMA1 destination address register 0 middle byte
 009E               +2  546     sfr DMAnDADDR0L                                 =  0x9e;      // 0x0e/0f10/11/12        
                               DMA1 destination address register 0 low byte
 00A2               +2  547     sfr DMAnDADDR1H                                 =  0xa2;      // 0x0e/0f10/11/12        
                               DMA1 destination address register 1 high byte
 00A6               +2  548     sfr DMAnDADDR1M                                 =  0xa6;      // 0x0e/0f10/11/12        
                               DMA1 destination address register 1 middle byte
 00A3               +2  549     sfr DMAnDADDR1L                                 =  0xa3;      // 0x0e/0f10/11/12        
                               DMA1 destination address register 1 low byte
 00A4               +2  550     sfr DMAnFrameLenH                               =  0xa4;      // 0x0e/0f10/11/12        
                               DMA1 frame length register high byte
 00A5               +2  551     sfr DMAnFrameLenL                               =  0xa5;      // 0x0e/0f10/11/12   DMA0 
                               frame length register low byte
                    +2  552     
                    +2  553     
                    +2  554     
                    +2  555     
                    +2  556     
 0090               +2  557     sfr AuCodecCtl                                  =  0x90;      // 0x04   Audio Codec Cont
                               rol Register
 0091               +2  558     sfr AuDebugLength                               =  0x91;      // 0x04   Audio Codec Debu
                               g Length Register
 0092               +2  559     sfr AuCodecDebug                                =  0x92;      // 0x04   Audio Codec Debu
                               g Register
 0093               +2  560     sfr AuCodecFIFOCtl                              =  0x93;      // 0x04   Audio Codec FIFO
                                control Register
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    14

 0094               +2  561     sfr AuCodecFIFOData                             =  0x94;      // 0x04   Audio Codec FIFO
                                Data Register
 0095               +2  562     sfr AuCodecDebug2                               =  0x95;      // 0x04   Audio Codec Debu
                               g Register 2
 0097               +2  563     sfr AuCodecDecStateH                            =  0x97;      // 0x04   Decoding State R
                               egister High byte
 0098               +2  564     sfr AuCodecDecStateL                            =  0x98;      // 0x04   Decoding State R
                               egister Low byte
 00A9               +2  565     sfr MP3IE                                       =  0xa9;      // 0x04   MP3 Decoder Inte
                               rrupt Enable Register
 00AA               +2  566     sfr MP3IP                                       =  0xaa;      // 0x04   MP3 Decoder Inte
                               rrupt Pending Register
 00AB               +2  567     sfr MP3Ctl                                      =  0xab;      // 0x04   MP3 Decoder Cont
                               rol Register
 00AC               +2  568     sfr MP3HeaderInfo                               =  0xac;      // 0x04   Header informati
                               on register
 00AD               +2  569     sfr MP3BitRateH                                 =  0xad;      // 0x04   High byte of bit
                                rate index register
 00AE               +2  570     sfr MP3BitRateL                                 =  0xae;      // 0x04   Low byte of bit 
                               rate index register
 00AF               +2  571     sfr MP3TTimeH                                   =  0xaf;      // 0x04   Total time hours
                                register
 00B0               +2  572     sfr MP3TTimeM                                   =  0xb0;      // 0x04   Total time minut
                               es register
 00B1               +2  573     sfr MP3TTimeS                                   =  0xb1;      // 0x04   Total time secon
                               ds register
 00B2               +2  574     sfr MP3CTimeH                                   =  0xb2;      // 0x04   Current time hou
                               rs register
 00B3               +2  575     sfr MP3CTimeM                                   =  0xb3;      // 0x04   Current time min
                               utes register
 00B4               +2  576     sfr MP3CTimeS                                   =  0xb4;      // 0x04   Current time sec
                               onds register
 00B5               +2  577     sfr MP3FrameNumH                                =  0xb5;      // 0x04   High byte of Fra
                               me Number register
 00B6               +2  578     sfr MP3FrameNumM                                =  0xb6;      // 0x04   Middle byte of F
                               rame Number register
 00B7               +2  579     sfr MP3FrameNumL                                =  0xb7;      // 0x04   Low byte of Fram
                               e Number register
 00B8               +2  580     sfr MP3FileLen3                                 =  0xb8;      // 0x04   Byte 3 of File L
                               ength register
 00B9               +2  581     sfr MP3FileLen2                                 =  0xb9;      // 0x04   Byte 2 of File L
                               ength register
 00BA               +2  582     sfr MP3FileLen1                                 =  0xba;      // 0x04   Byte 1 of File L
                               ength register
 00BB               +2  583     sfr MP3HeaderSynCtl                             =  0xbb;      // 0x04   MP3 header synch
                               ronization control register
 00BC               +2  584     sfr SynHeaderData1                              =  0xbc;      // 0x04   MP3 header synch
                               ronization Data register 1
 00BD               +2  585     sfr SynHeaderData2                              =  0xbd;      // 0x04   MP3 header synch
                               ronization Data register 2
 00A9               +2  586     sfr WMAIE                                       =  0xa9;      // 0x04   WMA Decoder Inte
                               rrupt Enable Register
 00AA               +2  587     sfr WMAIP                                       =  0xaa;      // 0x04   WMA Decoder Inte
                               rrupt Pending Register
 00AB               +2  588     sfr WMACtl                                      =  0xab;      // 0x04   WMA Decoder Cont
                               rol Register
 00AC               +2  589     sfr WMAHeaderInfo                               =  0xac;      // 0x04   Header informati
                               on register
 00AD               +2  590     sfr WMABitRateH                                 =  0xad;      // 0x04   High byte of bit
                                rate index register
 00AE               +2  591     sfr WMABitRateL                                 =  0xae;      // 0x04   Low byte of bit 
                               rate index register
 00AF               +2  592     sfr WMATTimeH                                   =  0xaf;      // 0x04   Total time hours
                                register
 00B0               +2  593     sfr WMATTimeM                                   =  0xb0;      // 0x04   Total time minut
                               es register
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    15

 00B1               +2  594     sfr WMATTimeS                                   =  0xb1;      // 0x04   Total time secon
                               ds register
 00B2               +2  595     sfr WMACTimeH                                   =  0xb2;      // 0x04   Current time hou
                               rs register
 00B3               +2  596     sfr WMACTimeM                                   =  0xb3;      // 0x04   Current time min
                               utes register
 00B4               +2  597     sfr WMACTimeS                                   =  0xb4;      // 0x04   Current time sec
                               onds register
 00B5               +2  598     sfr WMAPackNumH                                 =  0xb5;      // 0x04   High byte of Pac
                               ket Number register
 00B6               +2  599     sfr WMAPackNumM                                 =  0xb6;      // 0x04   Middle byte of P
                               acket Number register
 00B7               +2  600     sfr WMAPackNumL                                 =  0xb7;      // 0x04   Low byte of Pack
                               et Number register
 00B8               +2  601     sfr WMAPackSizeH                                =  0xb8;      // 0x04   High byte of Pac
                               ket Size register
 00B9               +2  602     sfr WMAPackSizeM                                =  0xb9;      // 0x04   Middle byte of P
                               acket Size register
 00BA               +2  603     sfr WMAPackSizeL                                =  0xba;      // 0x04   Low byte of Pack
                               et Size register
 00BB               +2  604     sfr VirtualAddrH                                =  0xbb;      // 0x04   High byte of vir
                               tual address of current frame
 00BC               +2  605     sfr VirtualAddrL                                =  0xbc;      // 0x04   Low byte of virt
                               ual address of current frame
 00BD               +2  606     sfr PhysicalAddrH                               =  0xbd;      // 0x04   High byte of phy
                               sical address of current frame
 00BF               +2  607     sfr PhysicalAddrL                               =  0xbf;      // 0x04   Low byte of phys
                               ical address of current frame
 00C1               +2  608     sfr DiscardLen                                  =  0xc1;      // 0x04   Discard length o
                               f current subframe
 00A9               +2  609     sfr WAVIE                                       =  0xa9;      // 0x04   WAV Decoder Inte
                               rrupt Enable Register
 00AA               +2  610     sfr WAVIP                                       =  0xaa;      // 0x04   WAV Decoder Inte
                               rrupt Pending Register
 00AB               +2  611     sfr WAVCtl                                      =  0xab;      // 0x04   WAV Decoder Cont
                               rol Register
 00AC               +2  612     sfr WAVHeaderInfo1                              =  0xac;      // 0x04   Header informati
                               on register 1
 00AD               +2  613     sfr WAVHeaderInfo2                              =  0xad;      // 0x04   Header informati
                               on register 2
 00AF               +2  614     sfr WAVTTimeH                                   =  0xaf;      // 0x04   Total time hours
                                register
 00B0               +2  615     sfr WAVTTimeM                                   =  0xb0;      // 0x04   Total time minut
                               es register
 00B1               +2  616     sfr WAVTTimeS                                   =  0xb1;      // 0x04   Total time secon
                               ds register
 00B2               +2  617     sfr WAVCTimeH                                   =  0xb2;      // 0x04   Current time hou
                               rs register
 00B3               +2  618     sfr WAVCTimeM                                   =  0xb3;      // 0x04   Current time min
                               utes register
 00B4               +2  619     sfr WAVCTimeS                                   =  0xb4;      // 0x04   Current time sec
                               onds register
 00B5               +2  620     sfr WAVBlockNumH                                =  0xb5;      // 0x04   High byte of Blo
                               ck Number register
 00B6               +2  621     sfr WAVBlockNumM                                =  0xb6;      // 0x04   Middle byte of B
                               lock Number register
 00B7               +2  622     sfr WAVBlockNumL                                =  0xb7;      // 0x04   Low byte of Bloc
                               k Number register
 00AB               +2  623     sfr WAVEncCtl                                   =  0xab;      // 0x04   WAV Encoder Cont
                               rol Register
 00AC               +2  624     sfr WAVEncInfo                                  =  0xac;      // 0x04   WAV Encoder Info
                               rmation Register
 00AB               +2  625     sfr MP3EncCtl                                   =  0xab;      // 0x04   MP3 Encoder Cont
                               rol Register
 00AC               +2  626     sfr MP3EncInfo                                  =  0xac;      // 0x04   MP3 Encoder Info
                               rmation Register
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    16

 00A9               +2  627     sfr SoftIE                                      =  0xa9;      // 0x04   Software Decoder
                                Interrupt Enable Register
 00AA               +2  628     sfr SoftIP                                      =  0xaa;      // 0x04   Software Decoder
                                Interrupt Pending Register
 00AB               +2  629     sfr SoftCtl                                     =  0xab;      // 0x04   Software Decoder
                                Control Register
 00B8               +2  630     sfr FrameLen1                                   =  0xb8;      // 0x04   Frame Length Reg
                               ister 1
 00B9               +2  631     sfr FrameLen0                                   =  0xb9;      // 0x04   Frame Length Reg
                               ister 0
 00C2               +2  632     sfr BEPCtl1                                     =  0xc2;      // 0x04   Post Processor C
                               ontrol Register 1
 00C3               +2  633     sfr BEPCtl2                                     =  0xc3;      // 0x04   Post Processor C
                               ontrol Register 2
 00C4               +2  634     sfr BEPCtl3                                     =  0xc4;      // 0x04   Post Processor C
                               ontrol Register 3
 00C5               +2  635     sfr BEPCtl4                                     =  0xc5;      // 0x04   Post Processor C
                               ontrol Register 4
 00C6               +2  636     sfr BEPCtl5                                     =  0xc6;      // 0x04   Post Processor C
                               ontrol Register 5
 00C7               +2  637     sfr GlobalGainH                                 =  0xc7;      // 0x04   Global Gain High
                                Byte Register
 00C8               +2  638     sfr GlobalGainM                                 =  0xc8;      // 0x04   Global Gain Midd
                               le Byte Register
 00C9               +2  639     sfr GlobalGainL                                 =  0xc9;      // 0x04   Global Gain Low 
                               Byte Register
 00CA               +2  640     sfr CurrentEnergy                               =  0xca;      // 0x04   Current Energy R
                               egister
 00CB               +2  641     sfr KaraokeCtl                                  =  0xcb;      // 0x04   Karaoke Control 
                               Register
 00CC               +2  642     sfr LCHGain                                     =  0xcc;      // 0x04   Left channel gai
                               n
 00CD               +2  643     sfr RCHGain                                     =  0xcd;      // 0x04   Right channel ga
                               in
 00CE               +2  644     sfr LPFGain                                     =  0xce;      // 0x04   Low pass filter 
                               gain
 00CF               +2  645     sfr HPFGain                                     =  0xcf;      // 0x04   High pass filter
                                gain
 00CC               +2  646     sfr SRSCtl0                                     =  0xcc;      // 0x04   SRS Control Regi
                               ster 0
 00CD               +2  647     sfr SRSCtl1                                     =  0xcd;      // 0x04   SRS Control Regi
                               ster 1
 00CE               +2  648     sfr SRSCtl2                                     =  0xce;      // 0x04   SRS Control Regi
                               ster 2
                    +2  649     
 00A9               +2  650     sfr AuCodecIE             =  0xa9;      // bank 04h     Audio Codec Interrupt Enable Reg
                               ister
 00AA               +2  651     sfr AuCodecIP             =  0xaa;      // bank 04h     Audio Codec Interrupt Pending Re
                               gister
 00AB               +2  652     sfr AuDecEncCtl           =  0xab;      // bank 04h     Audio decoding or encoding Contr
                               ol Register
 00AC               +2  653     sfr AuCodecHeaderInfo     =  0xac;      // bank 04h     Header information register
 00AD               +2  654     sfr AuCodecBirRateH       =  0xad;      // bank 04h     High byte of bit rate index regi
                               ster
 00AE               +2  655     sfr AuCodecBirRateL       =  0xae;      // bank 04h     Low byte of bit rate index regis
                               ter
 00AF               +2  656     sfr AuCodecTTimeH         =  0xaf;      // bank 04h     Total time hours register
 00B0               +2  657     sfr AuCodecTTimeM         =  0xb0;      // bank 04h     Total time minutes register
 00B1               +2  658     sfr AuCodecTTimeS         =  0xb1;      // bank 04h     Total time seconds register
 00B2               +2  659     sfr AuCodecCTimeH         =  0xb2;      // bank 04h     Current time hours register
 00B3               +2  660     sfr AuCodecCTimeM         =  0xb3;      // bank 04h     Current time minutes register
 00B4               +2  661     sfr AuCodecCTimeS         =  0xb4;      // bank 04h     Current time seconds register
                    +2  662     
                    +2  663     
                    +2  664     
                    +2  665     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    17

                    +2  666     
                    +2  667     
                    +2  668     
 0089               +2  669     sfr ACC_CTRL                                    =  0x89;      // Bank   Control Register
 008A               +2  670     sfr ACC_BLKLEN_LENHI                            =  0x8a;      // 0x08   Search block len
                               gth or the low byte of data length of unsigned accumulation unit number
 008B               +2  671     sfr ACC_BLKNUM_LENLO                            =  0x8b;      // 0x08   Search block num
                               ber or the high byte of data length of unsigned accumulation unit number
 00F1               +2  672     sfr ACC_CMPDATA0_SUMHIE                         =  0xf1;      // 0x08   The first byte o
                               f data searched or the higher byte of unsigned accelerator’s result
 00F2               +2  673     sfr ACC_CMPDATA1_SUMHI                          =  0xf2;      // 0x08   The second byte 
                               of data searched or the high byte of unsigned accelerator’s result
 00F3               +2  674     sfr ACC_CMPDATA2_SUMLO                          =  0xf3;      // 0x08   The third byte o
                               f data searched or the low byte of unsigned accelerator’s result
 00F4               +2  675     sfr ACC_CMPDATA3_SUMLOE                         =  0xf4;      // 0x08   The fourth byte 
                               of data searched or the lower byte of unsigned accelerator’s result
 00F5               +2  676     sfr ACC_MATCNTHI                                =  0xf5;      // 0x08   The high byte of
                                bitmap
 00F6               +2  677     sfr ACC_MATCNTLO                                =  0xf6;      // 0x08   The low byte of 
                               match number
 00F7               +2  678     sfr ACC_BITMAPHI                                =  0xf7;      // 0x08   The high byte of
                                bitmap
 00F8               +2  679     sfr ACC_BITMAPLO                                =  0xf8;      // 0x08   The low byte of 
                               bitmap
 008C               +2  680     sfr ACC_FIFO                                    =  0x8c;      // 0x08   ACC FIFO address
                    +2  681     
                    +2  682     
                    +2  683     
                    +2  684     
                    +2  685     
                    +2  686     
                    +2  687     
 0090               +2  688     sfr TK_EN_CTL                                   =  0x90;      // 0x14   Touch Key Contro
                               l Register.
 0091               +2  689     sfr TK_FUN_CTL                                  =  0x91;      // 0x14   Touch Key Functi
                               on Control Register.
 0092               +2  690     sfr TK_IRQ_PD                                   =  0x92;      // 0x14   Touch Key IRQ Pe
                               nding Status Register.
 0093               +2  691     sfr TK_PRESS_STA                                =  0x93;      // 0x14   Touch Key Press 
                               Status Register.
 0094               +2  692     sfr TK_DB_CTL                                   =  0x94;      // 0x14   Touch Key Deboun
                               ce Control Register.
 0095               +2  693     sfr TK_PWM_CNTH                                 =  0x95;      // 0x14   Touch Key PWM Co
                               unter High Register.
 0097               +2  694     sfr TK_PWM_CNTL                                 =  0x97;      // 0x14   Touch Key PWM Co
                               unter Low Register.
 0099               +2  695     sfr TK_PRESS_TH                                 =  0x99;      // 0x14   Touch Key Press 
                               Threshold Register.
 009A               +2  696     sfr TK_BL_CAL_TH                                =  0x9A;      // 0x14   Touch Key Baseli
                               ne Calibration Threshold Register.
 009B               +2  697     sfr TK_NOISE_TH                                 =  0x9B;      // 0x14   Touch Key Noise 
                               Threshold Register.
 009C               +2  698     sfr TK_BUCKET_TH                                =  0x9C;      // 0x14   Touch Key Bucket
                                Threshold And Baseline Step Adjust Register.
 009D               +2  699     sfr TK_AUTO_LOWTH_H                             =  0x9D;      //        Touch Key idac a
                               uto adjust low threshold high bits Register.
 009E               +2  700     sfr TK_AUTO_LOWTH_L                             =  0x9E;      //        Touch Key idac a
                               uto adjust low threshold low bits Register.
 00A2               +2  701     sfr TK_AUTO_HIGHTH_H                            =  0xA2;      //        Touch Key idac a
                               uto adjust high threshold high bits Register.
 00A3               +2  702     sfr TK_AUTO_HIGHTH_L                            =  0xA3;      //        Touch Key idac a
                               uto adjust high threshold low bits Register.
 00A4               +2  703     sfr TK_KEY0_IDA_CTL                             =  0xA4;      // 0x14   Touch Key0 charg
                               ing current Control Register.
 00A5               +2  704     sfr TK_KEY1_IDA_CTL                             =  0xA5;      // 0x14   Touch Key1 charg
                               ing current Control Register.
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    18

 00A6               +2  705     sfr TK_KEY2_IDA_CTL                             =  0xA6;      // 0x14   Touch Key2 charg
                               ing current Control Register.
 00A9               +2  706     sfr TK_KEY3_IDA_CTL                             =  0xA9;      // 0x14   Touch Key3 charg
                               ing current Control Register.
 00AA               +2  707     sfr TK_KEY4_IDA_CTL                             =  0xAA;      // 0x14   Touch Key4 charg
                               ing current Control Register.
 00AB               +2  708     sfr TK_KEY5_IDA_CTL                             =  0xAB;      // 0x14   Touch Key5 charg
                               ing current Control Register.
 00AD               +2  709     sfr TK_UPDAT_PD                                 =  0xAD;      // 0x14   Touch Key New Da
                               ta Update Pending Register.
 00AE               +2  710     sfr TK_KEY0_DATH                                =  0xAE;      // 0x14   Touch Key0 curre
                               nt data high bits.
 00AF               +2  711     sfr TK_KEY0_DATL                                =  0xAF;      // 0x14   Touch Key0 curre
                               nt data low bits.
 00B0               +2  712     sfr TK_KEY1_DATH                                =  0xB0;      // 0x14   Touch Key1 curre
                               nt data high bits.
 00B1               +2  713     sfr TK_KEY1_DATL                                =  0xB1;      // 0x14   Touch Key1 curre
                               nt data low bits.
 00B2               +2  714     sfr TK_KEY2_DATH                                =  0xB2;      // 0x14   Touch Key2 curre
                               nt data high bits.
 00B3               +2  715     sfr TK_KEY2_DATL                                =  0xB3;      // 0x14   Touch Key2 curre
                               nt data low bits.
 00B4               +2  716     sfr TK_KEY3_DATH                                =  0xB4;      // 0x14   Touch Key3 curre
                               nt data high bits.
 00B5               +2  717     sfr TK_KEY3_DATL                                =  0xB5;      // 0x14   Touch Key3 curre
                               nt data low bits.
 00B6               +2  718     sfr TK_KEY4_DATH                                =  0xB6;      // 0x14   Touch Key4 curre
                               nt data high bits.
 00B7               +2  719     sfr TK_KEY4_DATL                                =  0xB7;      // 0x14   Touch Key40 curr
                               ent data low bits.
 00B8               +2  720     sfr TK_KEY5_DATH                                =  0xB8;      // 0x14   Touch Key5 curre
                               nt data high bits.
 00B9               +2  721     sfr TK_KEY5_DATL                                =  0xB9;      // 0x14   Touch Key5 curre
                               nt data low bits.
 00BA               +2  722     sfr TK_RAW_PD                                   =  0xBA;      // 0x14   Touch Key New RA
                               W Data Update Pending Register.
 00BC               +2  723     sfr TK_KEY0_RAWH                                =  0xBC;      // 0x14   Touch Key0 curre
                               nt RAW high bits.
 00BD               +2  724     sfr TK_KEY0_RAWL                                =  0xBD;      // 0x14   Touch Key0 curre
                               nt RAW low bits.
 00BF               +2  725     sfr TK_KEY1_RAWH                                =  0xBF;      // 0x14   Touch Key1 curre
                               nt RAW high bits.
 00C1               +2  726     sfr TK_KEY1_RAWL                                =  0xC1;      // 0x14   Touch Key1 curre
                               nt RAW low bits.
 00C2               +2  727     sfr TK_KEY2_RAWH                                =  0xC2;      // 0x14   Touch Key2 curre
                               nt RAW high bits.
 00C3               +2  728     sfr TK_KEY2_RAWL                                =  0xC3;      // 0x14   Touch Key2 curre
                               nt RAW low bits.
 00C4               +2  729     sfr TK_KEY3_RAWH                                =  0xC4;      // 0x14   Touch Key3 curre
                               nt RAW high bits.
 00C5               +2  730     sfr TK_KEY3_RAWL                                =  0xC5;      // 0x14   Touch Key3 curre
                               nt RAW low bits.
 00C6               +2  731     sfr TK_KEY4_RAWH                                =  0xC6;      // 0x14   Touch Key4 curre
                               nt RAW high bits.
 00C7               +2  732     sfr TK_KEY4_RAWL                                =  0xC7;      // 0x14   Touch Key4 curre
                               nt RAW low bits.
 00C8               +2  733     sfr TK_KEY5_RAWH                                =  0xC8;      // 0x14   Touch Key5 curre
                               nt RAW high bits.
 00C9               +2  734     sfr TK_KEY5_RAWL                                =  0xC9;      // 0x14   Touch Key5 curre
                               nt RAW low bits.
 00CA               +2  735     sfr TK_KEY0_BL_H                                =  0xCA;      // 0x14   Touch Key0 curre
                               nt baseline high bits.
 00CC               +2  736     sfr TK_KEY0_BL_L                                =  0xCC;      // 0x14   Touch Key0 curre
                               nt baseline low bits.
 00CD               +2  737     sfr TK_KEY1_BL_H                                =  0xCD;      // 0x14   Touch Key1 curre
                               nt baseline high bits.
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    19

 00CE               +2  738     sfr TK_KEY1_BL_L                                =  0xCE;      // 0x14   Touch Key1 curre
                               nt baseline low bits.
 00D2               +2  739     sfr TK_KEY2_BL_H                                =  0xD2;      // 0x14   Touch Key2 curre
                               nt baseline high bits.
 00D3               +2  740     sfr TK_KEY2_BL_L                                =  0xD3;      // 0x14   Touch Key2 curre
                               nt baseline low bits.
 00D4               +2  741     sfr TK_KEY3_BL_H                                =  0xD4;      // 0x14   Touch Key3 curre
                               nt baseline high bits.
 00D5               +2  742     sfr TK_KEY3_BL_L                                =  0xD5;      // 0x14   Touch Key3 curre
                               nt baseline low bits.
 00D6               +2  743     sfr TK_KEY4_BL_H                                =  0xD6;      // 0x14   Touch Key4 curre
                               nt baseline high bits.
 00D7               +2  744     sfr TK_KEY4_BL_L                                =  0xD7;      // 0x14   Touch Key4 curre
                               nt baseline low bits.
 00D8               +2  745     sfr TK_KEY5_BL_H                                =  0xD8;      // 0x14   Touch Key5 curre
                               nt baseline high bits.
 00D9               +2  746     sfr TK_KEY5_BL_L                                =  0xD9;      // 0x14   Touch Key5 curre
                               nt baseline low bits.
 00DA               +2  747     sfr TK_DEBUG                                    =  0xDA;      // 0x14   Touch Key Debug 
                               Register.
                    +2  748     
                    +2  749     
                    +2  750     
                    +2  751     
                    +2  752     
                    +2  753     
                    +2  754     
 0090               +2  755     sfr SD_CMD                                      =  0x90;      // 0x09   SD/MMC CMD Regis
                               ter
 0091               +2  756     sfr SD_CMD_ARGRSP                               =  0x91;      // 0x09   SD/MMC Argument 
                               or RSP Register
 0092               +2  757     sfr SD_RSP_POIN                                 =  0x92;      // 0x09   SD/MMC RSP Point
                                Register
 0093               +2  758     sfr SD_TF_CTL                                   =  0x93;      // 0x09   SD/MMC control r
                               egister
 0094               +2  759     sfr SD_STATE                                    =  0x94;      // 0x09   MMC/SD status Re
                               gister
 0097               +2  760     sfr SD_BLK_SIZE_H                               =  0x97;      // 0x09   SD/MMC High Bloc
                               k size Register
 0098               +2  761     sfr SD_BLK_SIZE_L                               =  0x98;      // 0x09   SD/MMC Low Block
                                size Register
 0099               +2  762     sfr SD_BLK_NUM                                  =  0x99;      // 0x09   SD/MMC BLOCK num
                               ber Register
 009A               +2  763     sfr SD_CLK_CTL                                  =  0x9a;      // 0x09   SD/MMC Clock Con
                               trol Register
 009B               +2  764     sfr SD_PAD_CTL                                  =  0x9b;      // 0x09   SD/MMC PAD CONTR
                               OL Register
 009C               +2  765     sfr SD_INT_CTL                                  =  0x9c;      // 0x09   SD/MMC INTERRUPT
                                Control Register
 009D               +2  766     sfr SD_DATA_FIFO                                =  0x9d;      // 0x09   SD/MMC Data FIFO
                                Register
 009E               +2  767     sfr SD_TIMEOUT_CTL                              =  0x9e;      // 0x09   Data Timeout Cou
                               nter Register
 00AD               +2  768     sfr SD_TIMING_CTL                               =  0xad;      // 0x09   CARD TIMING CONT
                               ROL
 00AE               +2  769     sfr SD_DBG_CTL                                  =  0xae;      // 0x09   CARD Debug Signa
                               l Output Register
                    +2  770     
                    +2  771     
                    +2  772     
                    +2  773     
                    +2  774     
                    +2  775     
                    +2  776     
 009E               +2  777     sfr EXTMEM_CTL                                  =  0x9e;      // 0x06   Extended Memory 
                               Interface Control Register
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    20

 009F               +2  778     sfr EXTMEM_WT                                   =  0x9f;      // 0x06   Extended Memory 
                               Interface Wait State Register
 00FE               +2  779     sfr EXTMEM_DH                                   =  0xfe;      // 0x06   Extended Memory 
                               Interface high Byte Register
 00FF               +2  780     sfr EXTMEM_DL                                   =  0xff;      // 0x06   Extended Memory 
                               Interface Low Byte Register
                    +2  781     
                    +2  782     
                    +2  783     
                    +2  784     
                    +2  785     
                    +2  786     
                    +2  787     
 0086               +2  788     sfr UDMAM                                       =  0x86;      // 0x07   USB DMA MODE
 0089               +2  789     sfr AUTOINTIMER                                 =  0x89;      // 0x07   Auto in mode in 
                               token timer
 008A               +2  790     sfr EP1STADDRH                                  =  0x8a;      // 0x07   EP1 FIFO start a
                               ddress high register
 008B               +2  791     sfr EP1STADDRL                                  =  0x8b;      // 0x07   EP1 FIFO start a
                               ddress low register
 008C               +2  792     sfr EP1DMALENH                                  =  0x8c;      // 0x07   EP1 DMA transfer
                                length high in normal mode
 008D               +2  793     sfr EP1DMALENL                                  =  0x8d;      // 0x07   EP1 DMA transfer
                                length low in normal mode
 0090               +2  794     sfr OUTPCKCNTH                                  =  0x90;      // 0x07   Out transaction 
                               packet counter high
 0091               +2  795     sfr OUTPCKCNTL                                  =  0x91;      // 0x07   Out transaction 
                               packet counter low
 0092               +2  796     sfr IDVBUSCTRL                                  =  0x92;      // 0x07   ID&VBUS control
 0093               +2  797     sfr USBSTATUS                                   =  0x93;      // 0x07   USB status
 0094               +2  798     sfr DPDMCTRL                                    =  0x94;      // 0x07   DP DM control re
                               gister
 0095               +2  799     sfr USB_PHYCTRL                                 =  0x95;      // 0x07   PHY control regi
                               ster
 0097               +2  800     sfr Out0bc_hcin0bc                              =  0x97;      // 0x07   Endpoint 0 OUT B
                               yte Count
 0098               +2  801     sfr In0bc_hcout0bc                              =  0x98;      // 0x07   Endpoint 0 IN By
                               te Count
 0099               +2  802     sfr Ep0cs_hcep0cs                               =  0x99;      // 0x07   Endpoint 0 Contr
                               ol and Status
 009A               +2  803     sfr In1bch_hcout1bch                            =  0x9a;      // 0x07   Endpoint 1 IN By
                               te Count High
 009B               +2  804     sfr In1bcl_hcout1bcl                            =  0x9b;      // 0x07   Endpoint 1 IN By
                               te Count Low
 009C               +2  805     sfr In1ctrl_hcout1ctrl                          =  0x9c;      // 0x07   Endpoint 1 IN Co
                               ntrol
 009D               +2  806     sfr In1cs_hcout1cs                              =  0x9d;      // 0x07   Endpoint 1 IN Co
                               ntrol And Status
 009E               +2  807     sfr Out2bch_hcin2bch                            =  0x9e;      // 0x07   Endpoint 2 OUT B
                               yte Count High
 009F               +2  808     sfr Out2bcl_hcin2bcl                            =  0x9f;      // 0x07   Endpoint 2 OUT B
                               yte Count Low
 00A2               +2  809     sfr Out2ctrl_hcin2ctrl                          =  0xa2;      // 0x07   Endpoint 2 OUT C
                               ontrol
 00A3               +2  810     sfr Out2cs_hcin2cs                              =  0xa3;      // 0x07   Endpoint 2 OUT C
                               ontrol And Status
 00A4               +2  811     sfr In3bc_hcout3bc                              =  0xa4;      // 0x07   Endpoint 3 IN By
                               te Count
 00A5               +2  812     sfr In3ctrl_hcout3ctrl                          =  0xa5;      // 0x07   Endpoint 3 IN Co
                               ntrol
 00A6               +2  813     sfr In3cs_hcout3cs                              =  0xa6;      // 0x07   Endpoint 3 IN Co
                               ntrol And Status
 00A7               +2  814     sfr Fifo1dat                                    =  0xa7;      // 0x07   FIFO 1 Data
 00A9               +2  815     sfr Fifo2dat                                    =  0xa9;      // 0x07   FIFO 2 Data
 00AA               +2  816     sfr Fifo3dat                                    =  0xaa;      // 0x07   FIFO 3 Data
 00AB               +2  817     sfr Ep0indata                                   =  0xab;      // 0x07   EP0 IN DATA
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    21

 00AC               +2  818     sfr Ep0outdata                                  =  0xac;      // 0x07   EP0 OUT DATA
 00AD               +2  819     sfr Usbirq_hcusbirq                             =  0xad;      // 0x07   USB Interrupt
 00AE               +2  820     sfr Usbien_hcusbien                             =  0xae;      // 0x07   USB interrupt en
                               able
 00AF               +2  821     sfr SHORTPCKIRQ                                 =  0xaf;      // 0x07   Short packets In
                               terrupt request and enable
 00B0               +2  822     sfr Hcep0ctrl                                   =  0xb0;      // 0x07   Endpoint 0 Contr
                               ol
 00B1               +2  823     sfr Hcout0err                                   =  0xb1;      // 0x07   Endpoint 0 HC OU
                               T Error
 00B2               +2  824     sfr Hcin0err                                    =  0xb2;      // 0x07   Endpoint 0 HC IN
                                Error
 00B3               +2  825     sfr Hcout1ctrl                                  =  0xb3;      // 0x07   Endpoint 1 HC OU
                               T Control
 00B4               +2  826     sfr Hcout1err                                   =  0xb4;      // 0x07   Endpoint 1 HC OU
                               T Error
 00B5               +2  827     sfr Hcin2ctrl                                   =  0xb5;      // 0x07   Endpoint 2 HC IN
                                Control
 00B6               +2  828     sfr Hcin2err                                    =  0xb6;      // 0x07   Endpoint 2 HC OU
                               T Error
 00B7               +2  829     sfr EP2STADDRH                                  =  0xb7;      // 0x07   EP2 FIFO start a
                               ddress high register
 00B8               +2  830     sfr EP2STADDRL                                  =  0xb8;      // 0x07   EP2 FIFO start a
                               ddress low register
 00B9               +2  831     sfr Hcout3ctrl                                  =  0xb9;      // 0x07   Endpoint 3 HC OU
                               T Control
 00BA               +2  832     sfr Hcout3err                                   =  0xba;      // 0x07   Endpoint 3 HC OU
                               T Error
 00BB               +2  833     sfr Setupdat0                                   =  0xbb;      // 0x07   SETUP DATA0
 00BC               +2  834     sfr Setupdat1                                   =  0xbc;      // 0x07   SETUP DATA1
 00BD               +2  835     sfr Setupdat2                                   =  0xbd;      // 0x07   SETUP DATA2
 00BF               +2  836     sfr Setupdat3                                   =  0xbf;      // 0x07   SETUP DATA3
 00C1               +2  837     sfr Setupdat4                                   =  0xc1;      // 0x07   SETUP DATA4
 00C2               +2  838     sfr Setupdat5                                   =  0xc2;      // 0x07   SETUP DATA5
 00C3               +2  839     sfr Setupdat6                                   =  0xc3;      // 0x07   SETUP DATA6
 00C4               +2  840     sfr Setupdat7                                   =  0xc4;      // 0x07   SETUP DATA7
 00C5               +2  841     sfr Ep03irq                                     =  0xc5;      // 0x07   Endpoint 0 to 3 
                               Interrupt Request
 00C6               +2  842     sfr Ep03ien                                     =  0xc6;      // 0x07   Endpoint 0 to 3 
                               Interrupt Enables
 00C7               +2  843     sfr Ep03tokirq                                  =  0xc7;      // 0x07   Endpoint 0 to 3 
                               Token Interrupt Request
 00C8               +2  844     sfr Ep03tokien                                  =  0xc8;      // 0x07   Endpoint 0 to 3 
                               Token Interrupt Request Enable
 00C9               +2  845     sfr IVECT                                       =  0xc9;      // 0x07   Interrupt Vector
 00CA               +2  846     sfr EPRST                                       =  0xca;      // 0x07   Endpoint Reset
 00CB               +2  847     sfr UsbCTRL_STUS                                =  0xcb;      // 0x07   USB Control And 
                               Status
 00CC               +2  848     sfr FrmCNTH                                     =  0xcc;      // 0x07   USB Frame Counte
                               r HIGH
 00CD               +2  849     sfr FrmCNTL                                     =  0xcd;      // 0x07   USB Frame Counte
                               r Low
 00CE               +2  850     sfr Fnaddr                                      =  0xce;      // 0x07   Function Address
 00CF               +2  851     sfr Clkgate                                     =  0xcf;      // 0x07   Clock Gate
 00D2               +2  852     sfr Fifoctrl                                    =  0xd2;      // 0x07   FIFO Control
 00D3               +2  853     sfr Hcportctrl                                  =  0xd3;      // 0x07   HC Port Control
 00D4               +2  854     sfr Hcfrmnh                                     =  0xd4;      // 0x07   HC Frame Number 
                               high
 00D5               +2  855     sfr Hcfrmnl                                     =  0xd5;      // 0x07   HC Frame Number 
                               low
 00D6               +2  856     sfr Hcfrmremainh                                =  0xd6;      // 0x07   HC Frame Remain 
                               high
 00D7               +2  857     sfr Hcfrmremainl                                =  0xd7;      // 0x07   HC Frame Remain 
                               Low
 00D8               +2  858     sfr Hcep03errirq                                =  0xd8;      // 0x07   HC 0 to 3 Error 
                               Interrupt Request
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    22

 00D9               +2  859     sfr Hcep03errien                                =  0xd9;      // 0x07   HC 0 to 3 Error 
                               Interrupt Enable
 00DA               +2  860     sfr Otgirq                                      =  0xda;      // 0x07   OTG Interrupt Re
                               quest
 00DB               +2  861     sfr Otgstate                                    =  0xdb;      // 0x07   The OTG FSM Stat
                               e
 00DC               +2  862     sfr Otgctrl                                     =  0xdc;      // 0x07   OTG Control
 00DD               +2  863     sfr Otgstatus                                   =  0xdd;      // 0x07   OTG Status
 00DE               +2  864     sfr Otgien                                      =  0xde;      // 0x07   OTG Interrupt En
                               able
 00E2               +2  865     sfr EP2DMALENH                                  =  0xe2;      // 0x07   EP2 DMA transfer
                                length high in normal mode
 00E3               +2  866     sfr EP2DMALENL                                  =  0xe3;      // 0x07   EP2 DMA transfer
                                length low in normal mode
 00E4               +2  867     sfr Hcin0maxpck                                 =  0xe4;      // 0x07   HC IN 0 Max Pack
                               et Size
 00E5               +2  868     sfr Hcin2maxpckh                                =  0xe5;      // 0x07   HC IN 2 max pack
                               et high
 00E6               +2  869     sfr Hcin2maxpckl                                =  0xe6;      // 0x07   HC IN 2 max pack
                               et low
 00E7               +2  870     sfr Hcout3maxpck                                =  0xe7;      // 0x07   HC OUT 3 max pac
                               ket
 00E9               +2  871     sfr Hcout1maxpckh                               =  0xe9;      // 0x07   HC OUT 1 max pac
                               ket low
 00EA               +2  872     sfr Hcout1maxpckl                               =  0xea;      // 0x07   HC OUT 1 max pac
                               ket high
 00EB               +2  873     sfr USBEIRQ                                     =  0xeb;      // 0x07   USB external Int
                               errupt request
 00EC               +2  874     sfr AUTONAKCTRL                                 =  0xec;      // 0x07   auto nak control
 00ED               +2  875     sfr HCINCTRL                                    =  0xed;      // 0x07   host in control
 00EE               +2  876     sfr DBGMODE                                     =  0xee;      // 0x07   debug mode
 00EF               +2  877     sfr VDCTRL                                      =  0xef;      // 0x07   USB PHY vendor c
                               ontrol
 00F1               +2  878     sfr VDSTAT                                      =  0xf1;      // 0x07   USB PHY vendor s
                               tatus
 00F3               +2  879     sfr BKDOOR                                      =  0xf3;      // 0x07   Test back door
 00F5               +2  880     sfr OTGTRIEN                                    =  0xf5;      // 0x07   OTR status machi
                               ne interrupt enable
 00F6               +2  881     sfr OTGTRIRQ                                    =  0xf6;      // 0x07   OTR status machi
                               ne interrupt request
 00F7               +2  882     sfr USB_Efuse_Ref                               =  0xf7;      // 0x07   Usb Access Efuse
                               _Ref register
 00FC               +2  883     sfr FSMPRESTATE                                 =  0xfc;      // 0x07   FSM pre-state re
                               gister
 00FD               +2  884     sfr HCIN2CNTH                                   =  0xfd;      // 0x07   hcin2 packet cou
                               nter high
 00FE               +2  885     sfr HCIN2CNTL                                   =  0xfe;      // 0x07   hcin2 packet cou
                               nter low
                    +2  886     
                    +2  887     
                    +2  888     
                    +2  889     
                    +2  890     
                    +2  891     
                    +2  892     
 0099               +2  893     sfr SPI_CTL                                     =  0x99;      // 0x0a   SPI Control Regi
                               ster
 009A               +2  894     sfr SPI_DRQ                                     =  0x9a;      // 0x0a   SPI DMA/IRQ cont
                               rol Register.
 009B               +2  895     sfr SPI_STA                                     =  0x9b;      // 0x0a   SPI Status Regis
                               ter
 009C               +2  896     sfr SPI_CLKDIV                                  =  0x9c;      // 0x0a   SPI Clock Divide
                                Control Register
 009D               +2  897     sfr SPI_TXDAT                                   =  0x9d;      // 0x0a   SPI tx fifo regi
                               ster
 009E               +2  898     sfr SPI_RXDAT                                   =  0x9e;      // 0x0a   SPI rx fifo regi
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    23

                               ster
 009F               +2  899     sfr SPI_BCL                                     =  0x9f;      // 0x0a   SPI Bytes Count 
                               Low Register
 00A2               +2  900     sfr SPI_BCH                                     =  0xa2;      // 0x0a   SPI Bytes Count 
                               high Register
 00A3               +2  901     sfr SPI_DEBUG                                   =  0xa3;      // 0x0a   SPI debug regist
                               er
 00C8               +2  902     sfr SPI_RAND                                    =  0xc8;      // 0x0a   SPI Randomizer C
                               ontrol Register
 00C9               +2  903     sfr SPI_SEED0                                   =  0xc9;      // 0x0a   SPI Randomizer t
                               est seed Register.
 00CA               +2  904     sfr SPI_SEED1                                   =  0xca;      // 0x0a   SPI Randomizer t
                               est seed Register.
                    +2  905     
                    +2  906     
                    +2  907     
                    +2  908     
                    +2  909     
                    +2  910     
                    +2  911     
 0090               +2  912     sfr UART_BR                                     =  0x90;      // 0x0a   UART BAUDRATE Re
                               gister.
 0091               +2  913     sfr UART_MODE                                   =  0x91;      // 0x0a   UART mode setup 
                               Register.
 0092               +2  914     sfr UART_CTL                                    =  0x92;      // 0x0a   UART Control Reg
                               ister.
 0093               +2  915     sfr UART_DRQ                                    =  0x93;      // 0x0a   UART DRQ/IRQ reg
                               ister
 0094               +2  916     sfr UART_STA                                    =  0x94;      // 0x0a   UART Status Regi
                               ster
 0095               +2  917     sfr UART_TXDAT                                  =  0x95;      // 0x0a   UART TX FIFO reg
                               ister
 0097               +2  918     sfr UART_RXDAT                                  =  0x97;      // 0x0a   UART RX FIFO reg
                               ister
 0098               +2  919     sfr UART_DEBUG                                  =  0x98;      // 0x0a   UART debug regis
                               ter.
                    +2  920     
                    +2  921     
                    +2  922     
                    +2  923     
                    +2  924     
                    +2  925     
                    +2  926     
 00A5               +2  927     sfr IR_CTL                                      =  0xa5;      // 0x0a   IR Control Regis
                               ter
 00A6               +2  928     sfr IR_STA                                      =  0xa6;      // 0x0a   IR Status Regist
                               er
 00A7               +2  929     sfr IR_LUC                                      =  0xa7;      // 0x0a   IR low user code
                                register.
 00A9               +2  930     sfr IR_HUC                                      =  0xa9;      // 0x0a   IR high user cod
                               e register.
 00AA               +2  931     sfr IR_KDC                                      =  0xaa;      // 0x0a   IR key data code
                                register.
                    +2  932     
                    +2  933     
                    +2  934     
                    +2  935     
                    +2  936     
                    +2  937     
 00D5               +2  938     sfr DAC_CTL                                     =  0xd5;      // 0x13/0x04      DAC Cont
                               rol Register
 00D6               +2  939     sfr DAC_VOLUME0                                 =  0xd6;      // 0x13/0x04      DAC Volu
                               me Control register 0
 00D7               +2  940     sfr DAC_VOLUME1                                 =  0xd7;      // 0x13/0x04      DAC Volu
                               me Control register 1
 00D8               +2  941     sfr DAC_CH0_FIFO_CTL0                           =  0xd8;      // 0x13/0x04      DAC Chan
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    24

                               nel 0 FIFO Control Register 0
 00D9               +2  942     sfr DAC_CH0_FIFO_CTL1                           =  0xd9;      // 0x13/0x04      DAC Chan
                               nel 0 FIFO Control Register 1
 00DA               +2  943     sfr DAC_CH0_PCML                                =  0xda;      // 0x13/0x04      DAC Chan
                               nel 0 PCM DATA Low byte
 00DB               +2  944     sfr DAC_CH0_PCMM                                =  0xdb;      // 0x13/0x04      DAC Chan
                               nel 0 PCM DATA Middle byte
 00DC               +2  945     sfr DAC_CH0_PCMH                                =  0xdc;      // 0x13/0x04      DAC Chan
                               nel 0 PCM DATA High byte
 00DD               +2  946     sfr DAC_CH1_FIFO_CTL0                           =  0xdd;      // 0x13/0x04      DAC Chan
                               nel 1 FIFO Control Register 0
 00DE               +2  947     sfr DAC_CH1_FIFO_CTL1                           =  0xde;      // 0x13/0x04      DAC Chan
                               nel 1 FIFO Control Register 1
 00DF               +2  948     sfr DAC_CH1_PCML                                =  0xdf;      // 0x13/0x04      DAC Chan
                               nel 1 PCM DATA Low byte
 00E1               +2  949     sfr DAC_CH1_PCMH                                =  0xe1;      // 0x13/0x04      DAC Chan
                               nel 1 PCM DATA High byte
 00E2               +2  950     sfr I2S_CTL0                                    =  0xe2;      // 0x13/0x04      I2S Cont
                               rol Register 0
 00E3               +2  951     sfr I2S_CTL1                                    =  0xe3;      // 0x13/0x04      I2S Cont
                               rol Register 1
 00E4               +2  952     sfr DAC_ANALOG0                                 =  0xe4;      // 0x13/0x04      DAC Anal
                               og Register 0
 00E5               +2  953     sfr DAC_ANALOG1                                 =  0xe5;      // 0x13/0x04      DAC Anal
                               og Register 1
 00E6               +2  954     sfr DAC_TUNE0                                   =  0xe6;      // 0x13/0x04      DAC tuni
                               ng Control Register 0
 00E7               +2  955     sfr DAC_TUNE1                                   =  0xe7;      // 0x13/0x04      DAC tuni
                               ng Control Register 1
 00E9               +2  956     sfr PA_VOLUME                                   =  0xe9;      // 0x13/0x04      PA VOLUM
                               E Control Register
 00EA               +2  957     sfr PA_CTL                                      =  0xea;      // 0x13/0x04      PA Contr
                               ol Register
 00EB               +2  958     sfr PA_APCTL                                    =  0xeb;      // 0x13/0x04      PA anti-
                               pop Control Register
 00EC               +2  959     sfr DDV_CTL0                                    =  0xec;      // 0x13/0x04      Direct d
                               rive Control Register 0
 0090               +2  960     sfr DAC_CH0_SR_CTL                              =  0x90;      // 0x04   DAC Channel 0 Sa
                               mple Rate Control Register
 0091               +2  961     sfr DAC_CH0_SR_GAIN                             =  0x91;      // 0x04   DAC Channel 0 Sa
                               mple Rate Gain Control Register
 0092               +2  962     sfr DAC_CH0_SRFT_CTL0                           =  0x92;      // 0x04   DAC Channel 0 Sa
                               mple Rate Fine Tune Control Register 0
 0093               +2  963     sfr DAC_CH0_SRFT_CTL1                           =  0x93;      // 0x04   DAC Channel 0 Sa
                               mple Rate Fine Tune Control Register 1
 0094               +2  964     sfr DAC_CH0_SRFT_CTL2                           =  0x94;      // 0x04   DAC Channel 0 Sa
                               mple Rate Fine Tune Control Register 2
 0095               +2  965     sfr DAC_CH0_SRFT_CTL3                           =  0x95;      // 0x04   DAC Channel 0 Sa
                               mple Rate Fine Tune Control Register 3
 0097               +2  966     sfr DAC_CH0_SRFT_CTL4                           =  0x97;      // 0x04   DAC Channel 0 Sa
                               mple Rate Fine Tune Control Register 4
 0098               +2  967     sfr DAC_CH1_SR_CTL                              =  0x98;      // 0x04   DAC Channel 1 Sa
                               mple Rate Control Register
 0099               +2  968     sfr DAC_CH1_SR_GAIN                             =  0x99;      // 0x04   DAC Channel 1 Sa
                               mple Rate Gain Control Register
 009A               +2  969     sfr DAC_CH1_SRFT_CTL0                           =  0x9a;      // 0x04   DAC Channel 1 Sa
                               mple Rate Fine Tune Control Register 0
 009B               +2  970     sfr DAC_CH1_SRFT_CTL1                           =  0x9b;      // 0x04   DAC Channel 1 Sa
                               mple Rate Fine Tune Control Register 1
 009C               +2  971     sfr DAC_CH1_SRFT_CTL2                           =  0x9c;      // 0x04   DAC Channel 1 Sa
                               mple Rate Fine Tune Control Register 2
 009D               +2  972     sfr DAC_CH1_SRFT_CTL3                           =  0x9d;      // 0x04   DAC Channel 1 Sa
                               mple Rate Fine Tune Control Register 3
 009E               +2  973     sfr DAC_CH1_SRFT_CTL4                           =  0x9e;      // 0x04   DAC Channel 1 Sa
                               mple Rate Fine Tune Control Register 4
                    +2  974     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    25

                    +2  975     
                    +2  976     
                    +2  977     
                    +2  978     
                    +2  979     
                    +2  980     
 00F1               +2  981     sfr ADC_CTL0                                    =  0xf1;      // 0x13/0x04      ADC Cont
                               rol Register 0
 00F2               +2  982     sfr AINOP_CTL                                   =  0xf2;      // 0x13/0x04      AnalogIN
                                OP Control Register
 00F3               +2  983     sfr ADC_GAIN0                                   =  0xf3;      // 0x13/0x04      ADC gain
                                Control Register0
 00F4               +2  984     sfr ADC_GAIN1                                   =  0xf4;      // 0x13/0x04      ADC gain
                                Control Register1
 00F5               +2  985     sfr ADC_TUNE0                                   =  0xf5;      // 0x13/0x04      ADC tuni
                               ng control Register 0
 00F6               +2  986     sfr ADC_TUNE1                                   =  0xf6;      // 0x13/0x04      ADC tuni
                               ng control Register 1
 00F7               +2  987     sfr ADC_FIFO_DAT                                =  0xf7;      // 0x13/0x04      ADC FIFO
                                data register
 00F8               +2  988     sfr ADC_FIFOCTL0                                =  0xf8;      // 0x13/0x04      ADC FIFO
                                control register 0
 00FC               +2  989     sfr ADC_FIFOCTL1                                =  0xfc;      // 0x13/0x04      ADC FIFO
                                control register 1
 00FD               +2  990     sfr ADC_CTL1                                    =  0xfd;      // 0x13/0x04      ADC Cont
                               rol Register 1
 00A2               +2  991     sfr ADC_SRFT_CTL0                               =  0xa2;      // 0x04   ADC Sample Rate 
                               Fine Tune Control Register 0
 00A3               +2  992     sfr ADC_SRFT_CTL1                               =  0xa3;      // 0x04   ADC Sample Rate 
                               Fine Tune Control Register 1
 00A4               +2  993     sfr ADC_SRFT_CTL2                               =  0xa4;      // 0x04   ADC Sample Rate 
                               Fine Tune Control Register 2
 00A5               +2  994     sfr ADC_SRFT_CTL3                               =  0xa5;      // 0x04   ADC Sample Rate 
                               Fine Tune Control Register 3
 00A6               +2  995     sfr ADC_SRFT_CTL4                               =  0xa6;      // 0x04   ADC Sample Rate 
                               Fine Tune Control Register 4
                    +2  996     
                    +2  997     
                    +2  998     
                    +2  999     
                    +2 1000     
                    +2 1001     
                    +2 1002     
 00B0               +2 1003     sfr SPDIFRX_CTL                                 =  0xb0;      // 0x13   SPDIFRX Control 
                               Register
 00B1               +2 1004     sfr SPDIFRX_STAT                                =  0xb1;      // 0x13   SPDIFRX Statue R
                               egister
 00B2               +2 1005     sfr SPDIFRX_CSTAT                               =  0xb2;      // 0x13   SPDIFRX Channel 
                               Statue Register
 00B3               +2 1006     sfr SPDIFRX_DEBUG                               =  0xb3;      // 0x13   SPDIFRX Debug Re
                               gister
 00B4               +2 1007     sfr SPDIFRX_DAT                                 =  0xb4;      // 0x13   SPDIFRX Data Reg
                               ister
 00B5               +2 1008     sfr SPDIFRX_CNT_WR0                             =  0xb5;      // 0x13   SPDIFRX Counter 
                               for Write Register 0
 00B6               +2 1009     sfr SPDIFRX_CNT_WR1                             =  0xb6;      // 0x13   SPDIFRX Counter 
                               for Write Register 1
 00B7               +2 1010     sfr SPDIFRX_CNT_WR2                             =  0xb7;      // 0x13   SPDIFRX Counter 
                               for Write Register 2
                    +2 1011     
                    +2 1012     
                    +2 1013     
                    +2 1014     
                    +2 1015     
                    +2 1016     
                    +2 1017     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    26

 008A               +2 1018     sfr LCD_MODE                                    =  0x8a;      // 0x06   LCD Mode Control
                                Register
 008B               +2 1019     sfr LCD_DATA0                                   =  0x8b;      // 0x06   COM[3:0] of SEG0
                                and SEG1; SEG[7:0] of COM0
 008C               +2 1020     sfr LCD_DATA1                                   =  0x8c;      // 0x06   COM[3:0] of SEG2
                                and SEG3; SEG[7:0] of COM1
 008D               +2 1021     sfr LCD_DATA2                                   =  0x8d;      // 0x06   COM[3:0] of SEG4
                                and SEG5; SEG[7:0] of COM2
 0090               +2 1022     sfr LCD_DATA3                                   =  0x90;      // 0x06   COM[3:0] of SEG6
                                and SEG7; SEG[7:0] of COM3
 0091               +2 1023     sfr LCD_DATA4                                   =  0x91;      // 0x06   COM[3:0] of SEG8
                                and SEG9; SEG[7:0] of COM4
 0092               +2 1024     sfr LCD_DATA5                                   =  0x92;      // 0x06   COM[3:0] of SEG1
                               0 and SEG11; SEG[7:0] of COM5
 0093               +2 1025     sfr LCD_DATA6                                   =  0x93;      // 0x06   COM[3:0] of SEG1
                               2 and SEG13; SEG[7:0] of COM6
 0094               +2 1026     sfr LCD_DATA7                                   =  0x94;      // 0x06   COM[3:0] of SEG1
                               4 and SEG15; SEG[7:0] of COM7
 0095               +2 1027     sfr LCD_DATA8                                   =  0x95;      // 0x06   COM[3:0] of SEG1
                               6 and SEG17
 0097               +2 1028     sfr LCD_DATA9                                   =  0x97;      // 0x06   COM[3:0] of SEG1
                               8 and SEG19
 0098               +2 1029     sfr LCD_DATA10                                  =  0x98;      // 0x06   COM[3:0] of SEG2
                               0 and SEG21
 0099               +2 1030     sfr LCD_DATA11                                  =  0x99;      // 0x06   COM[3:0] of SEG2
                               2 and SEG23
 009A               +2 1031     sfr LCD_DATA12                                  =  0x9a;      // 0x06   COM[3:0] of SEG2
                               4 and SEG25
 009B               +2 1032     sfr LCD_DATA13                                  =  0x9b;      // 0x06   COM[3:0] of SEG2
                               6 and SEG27
 009C               +2 1033     sfr LCD_DATA14                                  =  0x9c;      // 0x06   COM[3:0] of SEG2
                               8 and SEG29
 009D               +2 1034     sfr LCD_DATA15                                  =  0x9d;      // 0x06   COM[3:0] of SEG3
                               0 and SEG31
                    +2 1035     
                    +2 1036     
                    +2 1037     
                    +2 1038     
                    +2 1039     
                    +2 1040     
                    +2 1041     
 00A2               +2 1042     sfr GPIOAOUTEN                                  =  0xa2;      // 0x06   General Purpose 
                               Input Output Group A Output Enable
 00A3               +2 1043     sfr GPIOAINEN                                   =  0xa3;      // 0x06   General Purpose 
                               Input Output Group A Input Enable
 00A4               +2 1044     sfr GPIOADAT                                    =  0xa4;      // 0x06   General Purpose 
                               Input Output Group A Data
 00A5               +2 1045     sfr GPIOAPUEN                                   =  0xa5;      // 0x06   General Purpose 
                               Input Output Group A PU Enable
 00A6               +2 1046     sfr GPIOAPDEN                                   =  0xa6;      // 0x06   General Purpose 
                               Input Output Group A PD Enable
 00A7               +2 1047     sfr GPIOBOUTEN                                  =  0xa7;      // 0x06   General Purpose 
                               Input Output Group B Output Enable
 00A9               +2 1048     sfr GPIOBINEN                                   =  0xa9;      // 0x06   General Purpose 
                               Input Output Group B Input Enable
 00AA               +2 1049     sfr GPIOBDAT                                    =  0xaa;      // 0x06   General Purpose 
                               Input Output Group B Data
 00AB               +2 1050     sfr GPIOBPUEN                                   =  0xab;      // 0x06   General Purpose 
                               Input Output Group B PU Enable
 00AC               +2 1051     sfr GPIOBPDEN                                   =  0xac;      // 0x06   General Purpose 
                               Input Output Group B PD Enable
 00AD               +2 1052     sfr GPIOCOUTEN                                  =  0xad;      // 0x06   General Purpose 
                               Input Output Group C Output Enable
 00AE               +2 1053     sfr GPIOCINEN                                   =  0xae;      // 0x06   General Purpose 
                               Input Output Group C Input Enable
 00AF               +2 1054     sfr GPIOCDAT                                    =  0xaf;      // 0x06   General Purpose 
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    27

                               Input Output Group C Data
 00B0               +2 1055     sfr GPIOCPUEN                                   =  0xb0;      // 0x06   General Purpose 
                               Input Output Group C PU Enable
 00B1               +2 1056     sfr GPIOCPDEN                                   =  0xb1;      // 0x06   General Purpose 
                               Input Output Group C PD Enable
 00B2               +2 1057     sfr GPIODOUTEN                                  =  0xb2;      // 0x06   General Purpose 
                               Input Output Group D Output Enable
 00B3               +2 1058     sfr GPIODINEN                                   =  0xb3;      // 0x06   General Purpose 
                               Input Output Group D Input Enable
 00B4               +2 1059     sfr GPIODDAT                                    =  0xb4;      // 0x06   General Purpose 
                               Input Output Group D Data
 00B5               +2 1060     sfr GPIODPUEN                                   =  0xb5;      // 0x06   General Purpose 
                               Input Output Group D PU Enable
 00B6               +2 1061     sfr GPIODPDEN                                   =  0xb6;      // 0x06   General Purpose 
                               Input Output Group D PD Enable
 00B7               +2 1062     sfr GPIOEOUTEN                                  =  0xb7;      // 0x06   General Purpose 
                               Input Output Group E Output Enable
 00B8               +2 1063     sfr GPIOEINEN                                   =  0xb8;      // 0x06   General Purpose 
                               Input Output Group E Input Enable
 00B9               +2 1064     sfr GPIOEDAT                                    =  0xb9;      // 0x06   General Purpose 
                               Input Output Group E Data
 00BA               +2 1065     sfr GPIOEPUEN                                   =  0xba;      // 0x06   General Purpose 
                               Input Output Group E PU Enable
 00BB               +2 1066     sfr GPIOEPDEN                                   =  0xbb;      // 0x06   General Purpose 
                               Input Output Group E PD Enable
 00BC               +2 1067     sfr GPIOFOUTEN                                  =  0xbc;      // 0x06   General Purpose 
                               Input Output Group F Output Enable
 00BD               +2 1068     sfr GPIOFINEN                                   =  0xbd;      // 0x06   General Purpose 
                               Input Output Group F Input Enable
 00BF               +2 1069     sfr GPIOFDAT                                    =  0xbf;      // 0x06   General Purpose 
                               Input Output Group F Data
 00C1               +2 1070     sfr GPIOFPUEN                                   =  0xc1;      // 0x06   General Purpose 
                               Input Output Group F PU Enable
 00C2               +2 1071     sfr GPIOFPDEN                                   =  0xc2;      // 0x06   General Purpose 
                               Input Output Group F PD Enable
 00C3               +2 1072     sfr GPIOGOUTEN                                  =  0xc3;      // 0x06   General Purpose 
                               Input Output Group G Output Enable
 00C4               +2 1073     sfr GPIOGINEN                                   =  0xc4;      // 0x06   General Purpose 
                               Input Output Group G Input Enable
 00C5               +2 1074     sfr GPIOGDAT                                    =  0xc5;      // 0x06   General Purpose 
                               Input Output Group G Data
 00C6               +2 1075     sfr GPIOGPUEN                                   =  0xc6;      // 0x06   General Purpose 
                               Input Output Group G PU Enable
 00C7               +2 1076     sfr GPIOGPDEN                                   =  0xc7;      // 0x06   General Purpose 
                               Input Output Group G PD Enable
 00C8               +2 1077     sfr MFP_CTL0                                    =  0xc8;      // 0x06   Multi-Function P
                               AD Control Register 0
 00C9               +2 1078     sfr MFP_CTL1                                    =  0xc9;      // 0x06   Multi-Function P
                               AD Control Register 1
 00CA               +2 1079     sfr MFP_CTL2                                    =  0xca;      // 0x06   Multi-Function P
                               AD Control Register 2
 00CB               +2 1080     sfr MFP_CTL3                                    =  0xcb;      // 0x06   Multi-Function P
                               AD Control Register3
 00CC               +2 1081     sfr MFP_CTL4                                    =  0xcc;      // 0x06   Multi-Function P
                               AD Control Register4
 00CD               +2 1082     sfr MFP_CTL5                                    =  0xcd;      // 0x06   Multi-Function P
                               AD Control Register5
 00CE               +2 1083     sfr MFP_CTL6                                    =  0xce;      // 0x06   Multi-Function P
                               AD Control Register6
 00CF               +2 1084     sfr MFP_CTL7                                    =  0xcf;      // 0x06   Multi-Function P
                               AD Control Register7
 00D2               +2 1085     sfr MFP_CTL8                                    =  0xd2;      // 0x06   Multi-Function P
                               AD Control Register8
 00D3               +2 1086     sfr AD_Select                                   =  0xd3;      // 0x06   ANALOG/DIGTAL Se
                               lect
 00DC               +2 1087     sfr AD_Select1                                  =  0xdc;      // 0x06   ANALOG/DIGTAL Se
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    28

                               lect1
 00D4               +2 1088     sfr PADPUPD                                     =  0xd4;      // 0x06   PADPUPD
 00D5               +2 1089     sfr PADDRV0                                     =  0xd5;      // 0x06   Pad Drive CTL0
 00D6               +2 1090     sfr PADDRV1                                     =  0xd6;      // 0x06   Pad Drive CTL1
 00D7               +2 1091     sfr PADDRV2                                     =  0xd7;      // 0x06   Pad Drive CTL2
 00D9               +2 1092     sfr PADDRV3                                     =  0xd9;      // 0x06   Pad Drive CTL3
 00DA               +2 1093     sfr PADDRV4                                     =  0xda;      // 0x06   Pad Drive CTL4
 00DB               +2 1094     sfr DBGSEL                                      =  0xdb;      // 0x06   Debug Select Reg
                               ister
 00E2               +2 1095     sfr DBGAOE                                      =  0xe2;      // 0x06   DEBUGAOUTEN
 00E3               +2 1096     sfr DBGAIE                                      =  0xe3;      // 0x06   DEBUGAINEN
 00E4               +2 1097     sfr DBGBOE                                      =  0xe4;      // 0x06   DEBUGBOUTEN
 00E5               +2 1098     sfr DBGBIE                                      =  0xe5;      // 0x06   DEBUGBINEN
 00E6               +2 1099     sfr DBGCOE                                      =  0xe6;      // 0x06   DEBUGCOUTEN
 00E9               +2 1100     sfr DBGDOE                                      =  0xe9;      // 0x06   DEBUGDOUTEN
 00EB               +2 1101     sfr LED_SEG_RC_EN                               =  0xeb;      // 0x06   LED SEG Restrict
                                Current
 00EC               +2 1102     sfr LED_SEG_BIAS_EN                             =  0xec;      // 0x06   LED SEG Restrict
                                Current
 00F4               +2 1103     sfr ChipVersion                                                 =  0xf4;      // 0x06  C
                               hip Version Register
                    +2 1104     
                    +2 1105     
                    +2 1106     
                    +1 1107     
                    +1 1108     ;#include "sysdef.h"
                    +2 1109     
                    +2 1110     
                    +2 1111     
                    +2 1112     
                    +2 1113     
                    +2 1114     
                    +2 1115     
                    +2 1116     
                    +2 1117     
                    +2 1118     
                    +2 1119     
                    +2 1120     
                    +2 1121     
                    +2 1122     
                    +2 1123     
                    +2 1124     
                    +2 1125     
                    +2 1126     
                    +2 1127     
                    +2 1128     
                    +2 1129     
                    +2 1130     
                    +2 1131     
                    +2 1132     
                    +2 1133     
                    +2 1134     
                    +2 1135     
                    +2 1136     
                    +2 1137     
                    +2 1138     
                    +2 1139     
                    +2 1140     
                    +2 1141     
                    +2 1142     
                    +2 1143     
                    +2 1144     
                    +2 1145     
                    +2 1146     
                    +2 1147     
                    +2 1148     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    29

                    +2 1149     
                    +2 1150     
                    +2 1151     
                    +2 1152     
                    +2 1153     
                    +2 1154     
                    +2 1155     
                    +2 1156     
                    +2 1157     
                    +2 1158     
                    +2 1159     
                    +2 1160     
                    +2 1161     
                    +2 1162     
                    +2 1163     
                    +2 1164     
                    +2 1165     
                    +2 1166     
                    +2 1167     
                    +2 1168     
                    +2 1169     
                    +2 1170     
                    +2 1171     
                    +2 1172     
                    +2 1173     
                    +2 1174     
                    +2 1175     
                    +2 1176     
                    +2 1177     
                    +2 1178     
                    +2 1179     
                    +2 1180     
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2 1186     
                    +2 1187     
                    +2 1188     
                    +2 1189     
                    +2 1190     
                    +2 1191     
                    +2 1192     
                    +2 1193     
                    +2 1194     
                    +2 1195     
                    +2 1196     
                    +2 1197     
                    +2 1198     
                    +2 1199     
                    +2 1200     
                    +2 1201     
                    +2 1202     
                    +2 1203     
                    +2 1204     
                    +2 1205     
                    +1 1206     
                    +1 1207     ;#include "TypeExt.h"
                    +2 1208     
                    +2 1209     
                    +2 1210     
                    +2 1211     
                    +2 1212     
                    +2 1213     
                    +2 1214     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    30

                    +2 1215     
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    31

                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +1 1292     
                    +1 1293     ;#include "port.h"
                    +2 1294     
                    +2 1295     
                    +2 1296     
                    +2 1297     
                    +2 1298     
                    +2 1299     
                    +2 1300     
                    +1 1301     
                    +1 1302     ;#include "actapi.h"
                    +2 1303     
                    +2 1304     
                    +2 1305     
                    +2 1306     
                    +2 1307     
                    +2 1308     
                    +2 1309     
                    +2 1310     
                    +2 1311     
                    +2 1312     
                    +2 1313     
                    +2 1314     
                    +2 1315     
                    +2 1316     
                    +2 1317     ;#include "as260x.h"
                    +3 1318     
                    +3 1319     
                    +3 1320     
                    +3 1321     
                    +3 1322     
                    +3 1323     
                    +3 1324     
                    +3 1325     
                    +3 1326     
                    +3 1327     
                    +3 1328     
                    +3 1329     
                    +3 1330     
                    +3 1331     
                    +3 1332     
                    +3 1333     
                    +3 1334     
                    +3 1335     
                    +3 1336     
                    +3 1337     
                    +3 1338     
                    +3 1339     
                    +3 1340     
                    +3 1341     
                    +3 1342     
                    +3 1343     
                    +3 1344     
                    +3 1345     
                    +3 1346     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    32

                    +3 1347     
                    +3 1348     
                    +3 1349     
                    +3 1350     
                    +3 1351     
                    +3 1352     
                    +3 1353     
                    +3 1354     
                    +3 1355     
                    +3 1356     
                    +3 1357     
                    +3 1358     
                    +3 1359     
                    +3 1360     
                    +3 1361     
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    33

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    34

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    35

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    36

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    37

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    38

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    39

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    40

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    41

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    42

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    43

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    44

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    45

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    46

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +2 2295     
                    +2 2296     
                    +2 2297     
                    +2 2298     
                    +2 2299     
                    +2 2300     
                    +2 2301     
                    +2 2302     
                    +2 2303     
                    +2 2304     
                    +2 2305     
                    +2 2306     
                    +2 2307     
                    +2 2308     
                    +2 2309     
                    +2 2310     
                    +2 2311     
                    +2 2312     
                    +2 2313     
                    +2 2314     
                    +2 2315     
                    +2 2316     
                    +2 2317     
                    +2 2318     
                    +2 2319     
                    +2 2320     
                    +2 2321     
                    +2 2322     
                    +2 2323     
                    +2 2324     
                    +2 2325     
                    +2 2326     
                    +2 2327     
                    +2 2328     
                    +2 2329     
                    +2 2330     
                    +2 2331     
                    +2 2332     
                    +2 2333     
                    +2 2334     
                    +2 2335     
                    +2 2336     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    47

                    +2 2337     
                    +2 2338     
                    +2 2339     
                    +2 2340     
                    +2 2341     
                    +2 2342     
                    +2 2343     
                    +2 2344     
                    +2 2345     
                    +2 2346     
                    +2 2347     
                    +2 2348     
                    +2 2349     
                    +2 2350     
                    +2 2351     
                    +2 2352     
                    +2 2353     
                    +2 2354     
                    +2 2355     
                    +2 2356     
                    +2 2357     
                    +2 2358     
                    +2 2359     
                    +2 2360     
                    +2 2361     
                    +2 2362     
                    +2 2363     
                    +2 2364     
                    +2 2365     
                    +2 2366     
                    +2 2367     
                    +2 2368     
                    +2 2369     
                    +2 2370     
                    +2 2371     
                    +2 2372     
                    +1 2373     
                    +1 2374     ;#include "device.h"
                    +2 2375     
                    +2 2376     
                    +2 2377     
                    +2 2378     ;#include "comval.h"
                    +3 2379     
                    +3 2380     
                    +3 2381     
                    +3 2382     
                    +3 2383     
                    +3 2384     
                    +3 2385     
                    +3 2386     
                    +3 2387     
                    +3 2388     
                    +3 2389     
                    +3 2390     
                    +3 2391     
                    +3 2392     
                    +3 2393     
                    +3 2394     
                    +3 2395     
                    +3 2396     ;#include "sysdef.h"
                    +4 2397     
                    +4 2398     
                    +4 2399     
                    +4 2400     
                    +4 2401     
                    +4 2402     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    48

                    +4 2403     
                    +4 2404     
                    +4 2405     
                    +4 2406     
                    +4 2407     
                    +4 2408     
                    +4 2409     
                    +4 2410     
                    +4 2411     
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    49

                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4 2493     
                    +3 2494     
                    +3 2495     ;#include "TypeExt.h"
                    +4 2496     
                    +4 2497     
                    +4 2498     
                    +4 2499     
                    +4 2500     
                    +4 2501     
                    +4 2502     
                    +4 2503     
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    50

                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +4          
                    +3 2580     
                    +3 2581     
                    +3 2582     
                    +3 2583     
                    +3 2584     
                    +3 2585     
                    +3 2586     
                    +3 2587     
                    +3 2588     
                    +3 2589     
                    +3 2590     
                    +3 2591     
                    +3 2592     
                    +3 2593     
                    +3 2594     
                    +3 2595     
                    +3 2596     
                    +3 2597     
                    +3 2598     
                    +3 2599     
                    +3 2600     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    51

                    +3 2601     
                    +3 2602     
                    +3 2603     
                    +3          
                    +3          
                    +3          
                    +3 2607     
                    +3 2608     
                    +3 2609     
                    +3 2610     
                    +3 2611     
                    +3 2612     
                    +3 2613     
                    +3 2614     
                    +3 2615     
                    +3 2616     
                    +3 2617     
                    +3 2618     
                    +3 2619     
                    +3 2620     
                    +3 2621     
                    +3 2622     
                    +3 2623     
                    +3 2624     
                    +3 2625     
                    +3 2626     
                    +3 2627     
                    +3 2628     
                    +3 2629     
                    +3 2630     
                    +3 2631     
                    +3 2632     
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3          
                    +3          
                    +3          
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    52

                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3          
                    +3              
                    +3          
                    +3          
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3              
                    +3              
                    +3          
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3              
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    53

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3 2750     
                    +3 2751     
                    +3 2752     
                    +2 2753     
                    +2 2754     ;#include "actapi.h"
                    +3 2755     
                    +3 2756     
                    +3 2757     
                    +3 2758     
                    +3 2759     
                    +3 2760     
                    +3 2761     
                    +3 2762     
                    +3 2763     
                    +3 2764     
                    +3 2765     
                    +3 2766     
                    +3 2767     
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    54

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +2 2847     
                    +2 2848     
                    +2 2849     
                    +2 2850     
                    +2 2851     
                    +2 2852     
                    +2 2853     
                    +2 2854     
                    +2 2855     
                    +2 2856     
                    +2 2857     
                    +2 2858     
                    +2 2859     
                    +2 2860     
                    +2 2861     
                    +2 2862     
                    +2 2863     
                    +2 2864     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    55

                    +2 2865     
                    +2 2866     
                    +2 2867     
                    +2 2868     
                    +2 2869     
                    +2 2870     
                    +2 2871     
                    +2 2872     
                    +2 2873     
                    +2 2874     
                    +2 2875     
                    +2 2876     
                    +2 2877     
                    +2 2878     
                    +2 2879     
                    +2 2880     
                    +2 2881     
                    +2 2882     
                    +2 2883     
                    +2 2884     
                    +2 2885     
                    +2 2886     
                    +2 2887     
                    +2 2888     
                    +2 2889     
                    +2 2890     
                    +2 2891     
                    +2 2892     
                    +2 2893     
                    +2 2894     
                    +2 2895     
                    +2 2896     
                    +2 2897     
                    +2 2898     
                    +2 2899     
                    +2 2900     
                    +2 2901     
                    +2 2902     
                    +2 2903     
                    +2 2904     
                    +2 2905     
                    +2 2906     
                    +2 2907     
                    +2 2908     
                    +2 2909     
                    +2 2910     
                    +2 2911     
                    +2 2912     
                    +2 2913     
                    +2 2914     
                    +2 2915     
                    +2 2916     
                    +2 2917     
                    +2 2918     
                    +2 2919     
                    +2 2920     
                    +2 2921     
                    +2 2922     
                    +2 2923     
                    +2 2924     
                    +2 2925     
                    +2 2926     
                    +2 2927     
                    +2 2928     
                    +2 2929     
                    +2 2930     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    56

                    +2 2931     
                    +2 2932     
                    +2 2933     
                    +2 2934     
                    +2 2935     
                    +2 2936     
                    +2 2937     
                    +2 2938     
                    +2 2939     
                    +2 2940     
                    +2 2941     
                    +2 2942     
                    +2 2943     
                    +2 2944     
                    +2 2945     
                    +2 2946     
                    +2 2947     
                    +2 2948     
                    +2 2949     
                    +2 2950     
                    +2 2951     
                    +2 2952     
                    +2 2953     
                    +2 2954     
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    57

                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    58

                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    59

                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    60

                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    61

                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    62

                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2 3341     
                    +2 3342     
                    +2 3343     mGetUsbCableStatus   macro                       
                    +2 3344     MOV  R11, #0x0004+0x0019
                    +2 3345     ECALL 0xFFC090 + 0x10
                    +2 3346     endm
                    +2 3347     mGetUsbAttribute   macro                         
                    +2 3348     MOV  R11, #0x0005+0x0019
                    +2 3349     ECALL 0xFFC090 + 0x10
                    +2 3350     endm
                    +2 3351     mGetUsbSetupInfo   macro                         
                    +2 3352     MOV  R11, #0x0006+0x0019
                    +2 3353     ECALL 0xFFC090 + 0x10
                    +2 3354     endm
                    +2 3355     mGetUsbVidPid   macro                            
                    +2 3356     MOV  R11, #0x0007+0x0019
                    +2 3357     ECALL 0xFFC090 + 0x10
                    +2 3358     endm
                    +2 3359     mGetBattery     macro
                    +2 3360     ld      a, 0x000a+0x0019
                    +2 3361     ECALL 0xFFC090 + 0x10
                    +2 3362     endm
                    +2 3363     mInitDSPCode    macro
                    +2 3364     MOV  R11, #0x000b+0x0019
                    +2 3365     ECALL 0xFFC090 + 0x10
                    +2 3366     endm
                    +2 3367     mInitDSPCodeExp macro
                    +2 3368     MOV  R11, #APINO_InitDSPCodeExp
                    +2 3369     ECALL 0xFFC090 + 0x10
                    +2 3370     endm
                    +2 3371     
                    +2 3372     
                    +2 3373     
                    +2 3374     
                    +2 3375     
                    +2 3376     mStartDsp       macro
                    +2 3377     MOV  R11, #0x000c+0x0019
                    +2 3378     ECALL 0xFFC090 + 0x10
                    +2 3379     endm
                    +2 3380     mStopDsp        macro
                    +2 3381     MOV  R11, #0x000d+0x0019
                    +2 3382     ECALL 0xFFC090 + 0x10
                    +2 3383     endm
                    +2 3384     mStopDspInUSB   macro
                    +2 3385     MOV  R11, #0x000d+0x0019
                    +2 3386     ECALL 0xFFC090 + 0x10
                    +2 3387     endm
                    +2 3388     mSetDspMips     macro
                    +2 3389     MOV  R11, #0x000e+0x0019
                    +2 3390     ECALL 0xFFC090 + 0x10
                    +2 3391     endm
                    +2 3392     mGetWmaTable    macro
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    63

                    +2 3393     MOV  R11, #APINO_GetWmaTable
                    +2 3394     ECALL 0xFFC090 + 0x10
                    +2 3395     endm
                    +2 3396     mGetOggTable    macro
                    +2 3397     MOV  R11, #APINO_GetOggTable
                    +2 3398     ECALL 0xFFC090 + 0x10
                    +2 3399     endm
                    +2 3400     
                    +2 3401     
                    +2 3402     mEnableAIn      macro
                    +2 3403     MOV  R11, #0x001b+0x0019
                    +2 3404     ECALL 0xFFC090 + 0x10
                    +2 3405     endm
                    +2 3406     mDisableAIn     macro
                    +2 3407     MOV  R11, #0x001c+0x0019
                    +2 3408     ECALL 0xFFC090 + 0x10
                    +2 3409     endm
                    +2 3410     mSetAGain       macro
                    +2 3411     MOV  R11, #0x001d+0x0019
                    +2 3412     ECALL 0xFFC090 + 0x10
                    +2 3413     endm
                    +2 3414     mGetAGain       macro
                    +2 3415     MOV  R11, #0x001e+0x0019
                    +2 3416     ECALL 0xFFC090 + 0x10
                    +2 3417     endm
                    +2 3418     mADC_Enable     macro
                    +2 3419     MOV  R11, #0x000f+0x0019
                    +2 3420     ECALL 0xFFC090 + 0x10
                    +2 3421     endm
                    +2 3422     mADC_Disable    macro
                    +2 3423     MOV  R11, #0x0010+0x0019
                    +2 3424     ECALL 0xFFC090 + 0x10
                    +2 3425     endm
                    +2 3426     
                    +2 3427     mDAC_Enable    macro
                    +2 3428     MOV  R11, #0x0011+0x0019
                    +2 3429     ECALL 0xFFC090 + 0x10
                    +2 3430     endm
                    +2 3431     
                    +2 3432     mDAC_Disable    macro
                    +2 3433     MOV  R11, #0x0012+0x0019
                    +2 3434     ECALL 0xFFC090 + 0x10
                    +2 3435     endm
                    +2 3436     mDAC_SetRate    macro
                    +2 3437     MOV  R11, #0x0013+0x0019
                    +2 3438     ECALL 0xFFC090 + 0x10
                    +2 3439     endm
                    +2 3440     mDAC_GetRate    macro
                    +2 3441     MOV  R11, #0x0014+0x0019
                    +2 3442     ECALL 0xFFC090 + 0x10
                    +2 3443     endm
                    +2 3444     mPA_Enable      macro
                    +2 3445     MOV  R11, #0x0015+0x0019
                    +2 3446     ECALL 0xFFC090 + 0x10
                    +2 3447     endm
                    +2 3448     mPA_Disable     macro
                    +2 3449     MOV  R11, #0x0016+0x0019
                    +2 3450     ECALL 0xFFC090 + 0x10
                    +2 3451     endm
                    +2 3452     mPA_SetVolume   macro
                    +2 3453     MOV  R11, #0x0017+0x0019
                    +2 3454     ECALL 0xFFC090 + 0x10
                    +2 3455     endm
                    +2 3456     mPA_GetVolume   macro
                    +2 3457     MOV  R11, #0x0018+0x0019
                    +2 3458     ECALL 0xFFC090 + 0x10
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    64

                    +2 3459     endm
                    +2 3460     
                    +2 3461     
                    +2 3462     
                    +2 3463     
                    +2 3464     
                    +2 3465     
                    +2 3466     
                    +2 3467     
                    +2 3468     
                    +2 3469     
                    +2 3470     
                    +2 3471     
                    +2 3472     
                    +2 3473     
                    +2 3474     
                    +2 3475     
                    +2 3476     
                    +2 3477     
                    +2 3478     
                    +2 3479     
                    +2 3480     
                    +2 3481     
                    +2 3482     
                    +2 3483     
                    +2 3484     
                    +2 3485     
                    +2 3486     mGetAudibleDeviceID  macro                       
                    +2 3487     MOV  R11, #APINO_GetAudibleDeviceID
                    +2 3488     ECALL 0xFFC090 + 0x10
                    +2 3489     endm
                    +2 3490     
                    +2 3491     mGetHideDiskCap  macro                           
                    +2 3492     MOV  R11, #0x0008+0x0019
                    +2 3493     ECALL 0xFFC090 + 0x10
                    +2 3494     endm
                    +2 3495     
                    +2 3496     mGetAutoRunDiskCap  macro                        
                    +2 3497     MOV  R11, #0x0009+0x0019
                    +2 3498     ECALL 0xFFC090 + 0x10
                    +2 3499     endm
                    +2 3500     
                    +2 3501     mGetSDCap       macro                           
                    +2 3502     MOV  R11, #0x0000+0x0019
                    +2 3503     ECALL 0xFFC090 + 0x10
                    +2 3504     endm
                    +2 3505     mGetVMCap       macro                           
                    +2 3506     MOV  R11, #0x0001+0x0019
                    +2 3507     ECALL 0xFFC090 + 0x10
                    +2 3508     endm
                    +2 3509     
                    +2 3510     
                    +2 3511     
                    +2 3512     
                    +2 3513     
                    +2 3514     mGetUICap       macro                           
                    +2 3515     MOV  R11, #0x0002+0x0019
                    +2 3516     ECALL 0xFFC090 + 0x10
                    +2 3517     endm
                    +2 3518     mGetExtRtcFlag  macro                           
                    +2 3519     MOV  R11, #0x0003+0x0019
                    +2 3520     ECALL 0xFFC090 + 0x10
                    +2 3521     endm
                    +2 3522     mGetLCDWidth  macro                                                        
                    +2 3523     MOV  R11, #APINO_GetLCDWidth
                    +2 3524     ECALL 0xFFC090 + 0x10
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    65

                    +2 3525     endm
                    +2 3526     mGetLCDHeight  macro                           
                    +2 3527     MOV  R11, #APINO_GetLCDHeight
                    +2 3528     ECALL 0xFFC090 + 0x10
                    +2 3529     endm
                    +2 3530     
                    +2 3531     mUH_Poweroff macro
                    +2 3532     MOV  R11, #0x0022+0x0019
                    +2 3533     ECALL 0xFFC090 + 0x10
                    +2 3534     endm
                    +2 3535     
                    +2 3536     mUSB_ISR_DEFAULT macro
                    +2 3537     MOV  R11, #APINO_USB_ISR_DEFAULT
                    +2 3538     ECALL 0xFFC090 + 0x10
                    +2 3539     endm
                    +2 3540     
                    +2 3541     mUSB_CON_ENABLE macro
                    +2 3542     MOV  R11, #0x0023+0x0019
                    +2 3543     ECALL 0xFFC090 + 0x10
                    +2 3544     endm
                    +2 3545     
                    +2 3546     mUSBH_Check_Udisk macro
                    +2 3547     MOV  R11, #0x002a+0x0019
                    +2 3548     ECALL 0xFFC090 + 0x10
                    +2 3549     endm
                    +2 3550     
                    +2 3551     mCOM_ISR_DEFAULT   macro
                    +2 3552     MOV  R11, #APINO_COM_ISR_DEFAULT
                    +2 3553     ECALL 0xFFC090 + 0x10
                    +2 3554     endm
                    +2 3555     
                    +2 3556     mGetMSCVolumeLabel  macro                        
                    +2 3557     MOV  R11, #0x0021+0x0019
                    +2 3558     ECALL 0xFFC090 + 0x10
                    +2 3559     endm
                    +2 3560     
                    +2 3561     mDRV_SetSpeedMode  macro
                    +2 3562     MOV  R11, #0x0028+0x0019
                    +2 3563     ECALL 0xFFC090 + 0x10
                    +2 3564     endm
                    +2 3565     
                    +2 3566     
                    +2 3567     
                    +2 3568     
                    +2 3569     
                    +2 3570     
                    +1 3571     
                    +1 3572     ;#include "adfu.h"
                    +2 3573     
                    +2 3574     
                    +2 3575     
                    +2 3576     
                    +2 3577     
                    +2 3578     
                    +2 3579     
                    +2 3580     
                    +2 3581     
                    +2 3582     
                    +2 3583     
                    +2 3584     
                    +2 3585     
                    +2 3586     
                    +2 3587     
                    +2 3588     
                    +2 3589     
                    +2 3590     ;#include "typeext.h"
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    66

                    +3 3591     
                    +3 3592     
                    +3 3593     
                    +3 3594     
                    +3 3595     
                    +3 3596     
                    +3 3597     
                    +3 3598     
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    67

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +2 3675     
                    +2 3676     
                    +2 3677     
                    +2 3678     
                    +2 3679     
                    +2 3680     
                    +2 3681     
                    +2 3682     
                    +2 3683     
                    +2 3684     
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    68

                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    69

                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    70

                    +2              
                    +2          
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2              
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    71

                    +2              
                    +2              
                    +2              
                    +2          
                    +2              
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2          
                    +2 3944     
                    +2 3945     
                    +2 3946     mGetSysInfo   macro
                    +2 3947     ld      hl, 0x0000+0x0002
                    +2 3948     rst     RSTBankAPI
                    +2 3949     endm
                    +2 3950     
                    +2 3951     
                    +1 3952     
                    +1 3953     ;#include "actos_lin.h"
                    +2 3954     
                    +2 3955     
                    +2 3956     ;#include "config.h"
                    +3 3957     
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    72

                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +3          
                    +2 3993     
                    +2 3994     
                    +2 3995     
                    +2 3996     $if  ROMHUGE == 1
                    +2 3997     Prefix  LIT '?'
                    +2 3998     RPrefix LIT     '??'
                    +2 3999     DPrefix LIT 'HDATA'
                    +2 4000     Model   LIT 'FAR'
                    +2 4001     PRSeg   LIT 'ECODE'
                    +2 4002     ASMret  LIT 'ERET'
                    +2 4003     $else 
                    +2          Prefix  LIT ''
                    +2          RPrefix LIT     '?_'
                    +2          DPrefix LIT 'EDATA'
                    +2          Model   LIT 'NEAR'
                    +2          PRSeg   LIT 'CODE'
                    +2          ASMret  LIT 'RET'
                    +2          $endif 
                    +2 4011     
                    +2 4012     
                    +2 4013     
                    +2 4014     
                    +2 4015     
                    +2 4016     
                    +1 4017     
                    +1 4018     ;#include "addr_bank_map.h"
                    +2 4019     
                    +2 4020     
                    +2 4021     
                    +2 4022     
                    +2 4023     
                    +2 4024     
                    +2 4025     
                    +2 4026     
                    +2 4027     
                    +2 4028     
                    +2 4029     
                    +2 4030     
                    +2 4031     
                    +2 4032     
                    +2 4033     
                    +2 4034     
                    +2 4035     
                    +2 4036     
                    +2 4037     
                    +2 4038     
                    +2 4039     
                    +2 4040     
                    +2 4041     
                    +2 4042     
                    +2 4043     
                    +2 4044     
                    +2 4045     
                    +2 4046     
                    +2 4047     
                    +2 4048     
                    +2 4049     
                    +2 4050     
                    +2 4051     
                    +2 4052     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    73

                    +2 4053     
                    +2 4054     
                    +2 4055     
                    +2 4056     
                    +2 4057     
                    +2 4058     
                    +2 4059     
                    +2 4060     
                    +2 4061     
                    +2 4062     
                    +2 4063     
                    +2 4064     
                    +2 4065     
                    +2 4066     
                    +2 4067     
                    +2 4068     
                    +2 4069     
                    +2 4070     
                    +2 4071     
                    +2 4072     
                    +2 4073     
                    +2 4074     
                    +2 4075     
                    +2 4076     
                    +2 4077     
                    +2 4078     
                    +2 4079     
                    +2 4080     
                    +2 4081     
                    +2 4082     
                    +2 4083     
                    +2 4084     
                    +2 4085     
                    +2 4086     
                    +2 4087     
                    +2 4088     
                    +2 4089     
                    +2 4090     
                    +2 4091     
                    +2 4092     
                    +2 4093     
                    +2 4094     
                    +2 4095     
                    +2 4096     
                    +2 4097     
                    +2 4098     
                    +2 4099     
                    +2 4100     
                    +2 4101     
                    +2 4102     
                    +2 4103     
                    +2 4104     
                    +2 4105     
                    +2 4106     
                    +2 4107     
                    +2 4108     
                    +2 4109     
                    +2 4110     
                    +2 4111     
                    +2 4112     
                    +2 4113     
                    +1 4114     
                    +1 4115     
                    +1 4116     
                    +1 4117     
                    +1 4118     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    74

                    +1 4119     
                    +1 4120     
                    +1 4121     
                    +1 4122     
                    +1 4123     
                    +1 4124     
                    +1 4125     
                    +1 4126     
                    +1 4127     
                    +1 4128     
                    +1 4129     
                    +1 4130     
                    +1 4131     
                    +1 4132     
                    +1 4133     
                    +1 4134     
                    +1 4135     
                    +1 4136     
                    +1 4137     
                    +1 4138     
                    +1 4139     
                    +1 4140     
                    +1 4141     
                    +1 4142     
                    +1 4143     
                    +1 4144     
                    +1 4145     
                    +1 4146     
                    +1 4147     
                    +1 4148     
                    +1 4149     
                    +1 4150     
                    +1 4151     
                    +1 4152     
                    +1 4153     
                    +1 4154     
                    +1 4155     
                    +1 4156     
                    +1 4157     
                    +1 4158     
                    +1 4159     
                    +1 4160     
                    +1 4161     
                       4162     
                       4163     
                       4164     
                       4165     
------                 4166     API30 SEGMENT 'ECODE_APISEG'
                       4167     
                       4168     
                       4169     PUBLIC API_LEDInit??
                       4170     PUBLIC API_LEDExit??
                       4171     PUBLIC API_LEDClearScreen??
                       4172     PUBLIC API_LEDDisplay??
                       4173     PUBLIC API_LEDPuts??
------                 4174     RSEG   API30
000000                 4175     API_LEDInit??:
000000                 4176     API_LEDExit??:
000000                 4177     API_LEDDisplay??:
000000                 4178     API_LEDClearScreen??:
000000                 4179     API_LEDPuts??:
000000 8A000000   F    4180             EJMP     0xFFC090 + 0x20 
                       4181     END
                       4182     
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    75

SYMBOL TABLE LISTING
------ ----- -------


N A M E               T Y P E  V A L U E     ATTRIBUTES

AC . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC. . . . . . . . .  N  NUMB  00E0H     A   
ACC_BITMAPHI . . . .  N  NUMB  00F7H     A   
ACC_BITMAPLO . . . .  N  NUMB  00F8H     A   
ACC_BLKLEN_LENHI . .  N  NUMB  008AH     A   
ACC_BLKNUM_LENLO . .  N  NUMB  008BH     A   
ACC_CMPDATA0_SUMHIE.  N  NUMB  00F1H     A   
ACC_CMPDATA1_SUMHI .  N  NUMB  00F2H     A   
ACC_CMPDATA2_SUMLO .  N  NUMB  00F3H     A   
ACC_CMPDATA3_SUMLOE.  N  NUMB  00F4H     A   
ACC_CTRL . . . . . .  N  NUMB  0089H     A   
ACC_FIFO . . . . . .  N  NUMB  008CH     A   
ACC_MATCNTHI . . . .  N  NUMB  00F5H     A   
ACC_MATCNTLO . . . .  N  NUMB  00F6H     A   
ADC_CTL0 . . . . . .  N  NUMB  00F1H     A   
ADC_CTL1 . . . . . .  N  NUMB  00FDH     A   
ADC_DAC_CLK_CTL. . .  N  NUMB  00BDH     A   
ADC_FIFOCTL0 . . . .  N  NUMB  00F8H     A   
ADC_FIFOCTL1 . . . .  N  NUMB  00FCH     A   
ADC_FIFO_DAT . . . .  N  NUMB  00F7H     A   
ADC_GAIN0. . . . . .  N  NUMB  00F3H     A   
ADC_GAIN1. . . . . .  N  NUMB  00F4H     A   
ADC_SRFT_CTL0. . . .  N  NUMB  00A2H     A   
ADC_SRFT_CTL1. . . .  N  NUMB  00A3H     A   
ADC_SRFT_CTL2. . . .  N  NUMB  00A4H     A   
ADC_SRFT_CTL3. . . .  N  NUMB  00A5H     A   
ADC_SRFT_CTL4. . . .  N  NUMB  00A6H     A   
ADC_TUNE0. . . . . .  N  NUMB  00F5H     A   
ADC_TUNE1. . . . . .  N  NUMB  00F6H     A   
AD_SELECT. . . . . .  N  NUMB  00D3H     A   
AD_SELECT1 . . . . .  N  NUMB  00DCH     A   
AECLKCTL . . . . . .  N  NUMB  00C4H     A   
AIE. . . . . . . . .  N  NUMB  00E8H     A   
AIF. . . . . . . . .  N  NUMB  00C0H     A   
AINOP_CTL. . . . . .  N  NUMB  00F2H     A   
AIPH . . . . . . . .  N  NUMB  00F7H     A   
AIPL . . . . . . . .  N  NUMB  00F8H     A   
API30. . . . . . . .  EC SEG   000004H       REL=UNIT, ALN=BYTE
API_LEDCLEARSCREEN??  EC ADDR  0000H     R   SEG=API30
API_LEDDISPLAY?? . .  EC ADDR  0000H     R   SEG=API30
API_LEDEXIT??. . . .  EC ADDR  0000H     R   SEG=API30
API_LEDINIT??. . . .  EC ADDR  0000H     R   SEG=API30
API_LEDPUTS??. . . .  EC ADDR  0000H     R   SEG=API30
ASMRET . . . . . . .  -- ----  -------       
AUCODECBIRRATEH. . .  N  NUMB  00ADH     A   
AUCODECBIRRATEL. . .  N  NUMB  00AEH     A   
AUCODECCTIMEH. . . .  N  NUMB  00B2H     A   
AUCODECCTIMEM. . . .  N  NUMB  00B3H     A   
AUCODECCTIMES. . . .  N  NUMB  00B4H     A   
AUCODECCTL . . . . .  N  NUMB  0090H     A   
AUCODECDEBUG . . . .  N  NUMB  0092H     A   
AUCODECDEBUG2. . . .  N  NUMB  0095H     A   
AUCODECDECSTATEH . .  N  NUMB  0097H     A   
AUCODECDECSTATEL . .  N  NUMB  0098H     A   
AUCODECFIFOCTL . . .  N  NUMB  0093H     A   
AUCODECFIFODATA. . .  N  NUMB  0094H     A   
AUCODECHEADERINFO. .  N  NUMB  00ACH     A   
AUCODECIE. . . . . .  N  NUMB  00A9H     A   
AUCODECIP. . . . . .  N  NUMB  00AAH     A   
AUCODECTTIMEH. . . .  N  NUMB  00AFH     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    76

AUCODECTTIMEM. . . .  N  NUMB  00B0H     A   
AUCODECTTIMES. . . .  N  NUMB  00B1H     A   
AUDEBUGLENGTH. . . .  N  NUMB  0091H     A   
AUDECENCCTL. . . . .  N  NUMB  00ABH     A   
AUDIO_PLL_CTL. . . .  N  NUMB  00B9H     A   
AUTOINTIMER. . . . .  N  NUMB  0089H     A   
AUTONAKCTRL. . . . .  N  NUMB  00ECH     A   
B. . . . . . . . . .  N  NUMB  00F0H     A   
BATADC_DATA. . . . .  N  NUMB  0091H     A   
BDG_CTL. . . . . . .  N  NUMB  008BH     A   
BDG_VOL. . . . . . .  N  NUMB  008CH     A   
BEPCTL1. . . . . . .  N  NUMB  00C2H     A   
BEPCTL2. . . . . . .  N  NUMB  00C3H     A   
BEPCTL3. . . . . . .  N  NUMB  00C4H     A   
BEPCTL4. . . . . . .  N  NUMB  00C5H     A   
BEPCTL5. . . . . . .  N  NUMB  00C6H     A   
BIRDINFO . . . . . .  N  NUMB  0085H     A   
BIST_EN1 . . . . . .  N  NUMB  00E1H     A   
BIST_EN2 . . . . . .  N  NUMB  00E2H     A   
BIST_FIN1. . . . . .  N  NUMB  00E4H     A   
BIST_FIN2. . . . . .  N  NUMB  00E5H     A   
BIST_INFO1 . . . . .  N  NUMB  00E7H     A   
BIST_INFO2 . . . . .  N  NUMB  00E9H     A   
BKDOOR . . . . . . .  N  NUMB  00F3H     A   
CCMCON . . . . . . .  N  NUMB  008EH     A   
CCMVAL . . . . . . .  N  NUMB  008FH     A   
CHIPVERSION. . . . .  N  NUMB  00F4H     A   
CLKENCTL0. . . . . .  N  NUMB  00A9H     A   
CLKENCTL1. . . . . .  N  NUMB  00AAH     A   
CLKENCTL2. . . . . .  N  NUMB  00ABH     A   
CLKGATE. . . . . . .  N  NUMB  00CFH     A   
CODEREPLACEENTRYEX .  N  NUMB  00A5H     A   
CODEREPLACEENTRYH. .  N  NUMB  00A6H     A   
CODEREPLACEENTRYL. .  N  NUMB  00A7H     A   
CPUCLKCTL. . . . . .  N  NUMB  00C2H     A   
CP_CTL0. . . . . . .  N  NUMB  0097H     A   
CP_CTL1. . . . . . .  N  NUMB  0098H     A   
CTCCNTH. . . . . . .  N  NUMB  00BBH     A   
CTCCNTH2 . . . . . .  N  NUMB  00D9H     A   
CTCCNTL. . . . . . .  N  NUMB  00BAH     A   
CTCCNTL2 . . . . . .  N  NUMB  00D8H     A   
CTCCTL . . . . . . .  N  NUMB  00B9H     A   
CTCCTL2. . . . . . .  N  NUMB  00D7H     A   
CURRENTENERGY. . . .  N  NUMB  00CAH     A   
CY . . . . . . . . .  B  ADDR  00D0H.7   A   
DAC_ANALOG0. . . . .  N  NUMB  00E4H     A   
DAC_ANALOG1. . . . .  N  NUMB  00E5H     A   
DAC_CH0_FIFO_CTL0. .  N  NUMB  00D8H     A   
DAC_CH0_FIFO_CTL1. .  N  NUMB  00D9H     A   
DAC_CH0_PCMH . . . .  N  NUMB  00DCH     A   
DAC_CH0_PCML . . . .  N  NUMB  00DAH     A   
DAC_CH0_PCMM . . . .  N  NUMB  00DBH     A   
DAC_CH0_SRFT_CTL0. .  N  NUMB  0092H     A   
DAC_CH0_SRFT_CTL1. .  N  NUMB  0093H     A   
DAC_CH0_SRFT_CTL2. .  N  NUMB  0094H     A   
DAC_CH0_SRFT_CTL3. .  N  NUMB  0095H     A   
DAC_CH0_SRFT_CTL4. .  N  NUMB  0097H     A   
DAC_CH0_SR_CTL . . .  N  NUMB  0090H     A   
DAC_CH0_SR_GAIN. . .  N  NUMB  0091H     A   
DAC_CH1_FIFO_CTL0. .  N  NUMB  00DDH     A   
DAC_CH1_FIFO_CTL1. .  N  NUMB  00DEH     A   
DAC_CH1_PCMH . . . .  N  NUMB  00E1H     A   
DAC_CH1_PCML . . . .  N  NUMB  00DFH     A   
DAC_CH1_SRFT_CTL0. .  N  NUMB  009AH     A   
DAC_CH1_SRFT_CTL1. .  N  NUMB  009BH     A   
DAC_CH1_SRFT_CTL2. .  N  NUMB  009CH     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    77

DAC_CH1_SRFT_CTL3. .  N  NUMB  009DH     A   
DAC_CH1_SRFT_CTL4. .  N  NUMB  009EH     A   
DAC_CH1_SR_CTL . . .  N  NUMB  0098H     A   
DAC_CH1_SR_GAIN. . .  N  NUMB  0099H     A   
DAC_CTL. . . . . . .  N  NUMB  00D5H     A   
DAC_TUNE0. . . . . .  N  NUMB  00E6H     A   
DAC_TUNE1. . . . . .  N  NUMB  00E7H     A   
DAC_VOLUME0. . . . .  N  NUMB  00D6H     A   
DAC_VOLUME1. . . . .  N  NUMB  00D7H     A   
DBGAIE . . . . . . .  N  NUMB  00E3H     A   
DBGAOE . . . . . . .  N  NUMB  00E2H     A   
DBGBIE . . . . . . .  N  NUMB  00E5H     A   
DBGBOE . . . . . . .  N  NUMB  00E4H     A   
DBGCOE . . . . . . .  N  NUMB  00E6H     A   
DBGDOE . . . . . . .  N  NUMB  00E9H     A   
DBGMODE. . . . . . .  N  NUMB  00EEH     A   
DBGSEL . . . . . . .  N  NUMB  00DBH     A   
DDV_CTL0 . . . . . .  N  NUMB  00ECH     A   
DISCARDLEN . . . . .  N  NUMB  00C1H     A   
DMA01234DBG. . . . .  N  NUMB  0093H     A   
DMA0CTL0 . . . . . .  N  NUMB  0094H     A   
DMA0CTL1 . . . . . .  N  NUMB  0095H     A   
DMA0DADDR0H. . . . .  N  NUMB  009DH     A   
DMA0DADDR0L. . . . .  N  NUMB  009EH     A   
DMA0DADDR0M. . . . .  N  NUMB  009FH     A   
DMA0DADDR1H. . . . .  N  NUMB  00A2H     A   
DMA0DADDR1L. . . . .  N  NUMB  00A3H     A   
DMA0DADDR1M. . . . .  N  NUMB  00A6H     A   
DMA0FRAMELENH. . . .  N  NUMB  00A4H     A   
DMA0FRAMELENL. . . .  N  NUMB  00A5H     A   
DMA0IE . . . . . . .  N  NUMB  0092H     A   
DMA0IP . . . . . . .  N  NUMB  0091H     A   
DMA0SADDR0H. . . . .  N  NUMB  0097H     A   
DMA0SADDR0L. . . . .  N  NUMB  0098H     A   
DMA0SADDR0M. . . . .  N  NUMB  009BH     A   
DMA0SADDR1H. . . . .  N  NUMB  0099H     A   
DMA0SADDR1L. . . . .  N  NUMB  009AH     A   
DMA0SADDR1M. . . . .  N  NUMB  009CH     A   
DMA1CTL0 . . . . . .  N  NUMB  0094H     A   
DMA1CTL1 . . . . . .  N  NUMB  0095H     A   
DMA1DADDR0H. . . . .  N  NUMB  009DH     A   
DMA1DADDR0L. . . . .  N  NUMB  009EH     A   
DMA1DADDR0M. . . . .  N  NUMB  009FH     A   
DMA1DADDR1H. . . . .  N  NUMB  00A2H     A   
DMA1DADDR1L. . . . .  N  NUMB  00A3H     A   
DMA1DADDR1M. . . . .  N  NUMB  00A6H     A   
DMA1FRAMELENH. . . .  N  NUMB  00A4H     A   
DMA1FRAMELENL. . . .  N  NUMB  00A5H     A   
DMA1IE . . . . . . .  N  NUMB  0092H     A   
DMA1IP . . . . . . .  N  NUMB  0091H     A   
DMA1SADDR0H. . . . .  N  NUMB  0097H     A   
DMA1SADDR0L. . . . .  N  NUMB  0098H     A   
DMA1SADDR0M. . . . .  N  NUMB  009BH     A   
DMA1SADDR1H. . . . .  N  NUMB  0099H     A   
DMA1SADDR1L. . . . .  N  NUMB  009AH     A   
DMA1SADDR1M. . . . .  N  NUMB  009CH     A   
DMA2CTL0 . . . . . .  N  NUMB  0094H     A   
DMA2CTL1 . . . . . .  N  NUMB  0095H     A   
DMA2DADDR0H. . . . .  N  NUMB  009DH     A   
DMA2DADDR0L. . . . .  N  NUMB  009EH     A   
DMA2DADDR0M. . . . .  N  NUMB  009FH     A   
DMA2DADDR1H. . . . .  N  NUMB  00A2H     A   
DMA2DADDR1L. . . . .  N  NUMB  00A3H     A   
DMA2DADDR1M. . . . .  N  NUMB  00A6H     A   
DMA2FRAMELENH. . . .  N  NUMB  00A4H     A   
DMA2FRAMELENL. . . .  N  NUMB  00A5H     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    78

DMA2IE . . . . . . .  N  NUMB  0092H     A   
DMA2IP . . . . . . .  N  NUMB  0091H     A   
DMA2SADDR0H. . . . .  N  NUMB  0097H     A   
DMA2SADDR0L. . . . .  N  NUMB  0098H     A   
DMA2SADDR0M. . . . .  N  NUMB  009BH     A   
DMA2SADDR1H. . . . .  N  NUMB  0099H     A   
DMA2SADDR1L. . . . .  N  NUMB  009AH     A   
DMA2SADDR1M. . . . .  N  NUMB  009CH     A   
DMA3CTL0 . . . . . .  N  NUMB  0094H     A   
DMA3CTL1 . . . . . .  N  NUMB  0095H     A   
DMA3DADDR0H. . . . .  N  NUMB  009DH     A   
DMA3DADDR0L. . . . .  N  NUMB  009EH     A   
DMA3DADDR0M. . . . .  N  NUMB  009FH     A   
DMA3DADDR1H. . . . .  N  NUMB  00A2H     A   
DMA3DADDR1L. . . . .  N  NUMB  00A3H     A   
DMA3DADDR1M. . . . .  N  NUMB  00A6H     A   
DMA3FRAMELENH. . . .  N  NUMB  00A4H     A   
DMA3FRAMELENL. . . .  N  NUMB  00A5H     A   
DMA3IE . . . . . . .  N  NUMB  0092H     A   
DMA3IP . . . . . . .  N  NUMB  0091H     A   
DMA3SADDR0H. . . . .  N  NUMB  0097H     A   
DMA3SADDR0L. . . . .  N  NUMB  0098H     A   
DMA3SADDR0M. . . . .  N  NUMB  009BH     A   
DMA3SADDR1H. . . . .  N  NUMB  0099H     A   
DMA3SADDR1L. . . . .  N  NUMB  009AH     A   
DMA3SADDR1M. . . . .  N  NUMB  009CH     A   
DMA4CTL0 . . . . . .  N  NUMB  0094H     A   
DMA4CTL1 . . . . . .  N  NUMB  0095H     A   
DMA4DADDR0H. . . . .  N  NUMB  009DH     A   
DMA4DADDR0L. . . . .  N  NUMB  009EH     A   
DMA4DADDR0M. . . . .  N  NUMB  009FH     A   
DMA4DADDR1H. . . . .  N  NUMB  00A2H     A   
DMA4DADDR1L. . . . .  N  NUMB  00A3H     A   
DMA4DADDR1M. . . . .  N  NUMB  00A6H     A   
DMA4FRAMELENH. . . .  N  NUMB  00A4H     A   
DMA4FRAMELENL. . . .  N  NUMB  00A5H     A   
DMA4IE . . . . . . .  N  NUMB  0092H     A   
DMA4IP . . . . . . .  N  NUMB  0091H     A   
DMA4SADDR0H. . . . .  N  NUMB  0097H     A   
DMA4SADDR0L. . . . .  N  NUMB  0098H     A   
DMA4SADDR0M. . . . .  N  NUMB  009BH     A   
DMA4SADDR1H. . . . .  N  NUMB  0099H     A   
DMA4SADDR1L. . . . .  N  NUMB  009AH     A   
DMA4SADDR1M. . . . .  N  NUMB  009CH     A   
DMANCTL0 . . . . . .  N  NUMB  0094H     A   
DMANCTL1 . . . . . .  N  NUMB  0095H     A   
DMANDADDR0H. . . . .  N  NUMB  009DH     A   
DMANDADDR0L. . . . .  N  NUMB  009EH     A   
DMANDADDR0M. . . . .  N  NUMB  009FH     A   
DMANDADDR1H. . . . .  N  NUMB  00A2H     A   
DMANDADDR1L. . . . .  N  NUMB  00A3H     A   
DMANDADDR1M. . . . .  N  NUMB  00A6H     A   
DMANFRAMELENH. . . .  N  NUMB  00A4H     A   
DMANFRAMELENL. . . .  N  NUMB  00A5H     A   
DMANIE . . . . . . .  N  NUMB  0092H     A   
DMANIP . . . . . . .  N  NUMB  0091H     A   
DMANSADDR0H. . . . .  N  NUMB  0097H     A   
DMANSADDR0L. . . . .  N  NUMB  0098H     A   
DMANSADDR0M. . . . .  N  NUMB  009BH     A   
DMANSADDR1H. . . . .  N  NUMB  0099H     A   
DMANSADDR1L. . . . .  N  NUMB  009AH     A   
DMANSADDR1M. . . . .  N  NUMB  009CH     A   
DPDMCTRL . . . . . .  N  NUMB  0094H     A   
DPH. . . . . . . . .  N  NUMB  0083H     A   
DPL. . . . . . . . .  N  NUMB  0082H     A   
DPREFIX. . . . . . .  -- ----  -------       
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    79

DPXL . . . . . . . .  N  NUMB  0084H     A   
EA . . . . . . . . .  B  ADDR  00A8H.7   A   
EFUSE0 . . . . . . .  N  NUMB  00A4H     A   
EFUSE1 . . . . . . .  N  NUMB  00A5H     A   
EFUSE2 . . . . . . .  N  NUMB  00A6H     A   
EFUSE3 . . . . . . .  N  NUMB  00A7H     A   
EFUSE_CTL. . . . . .  N  NUMB  00A3H     A   
EP03IEN. . . . . . .  N  NUMB  00C6H     A   
EP03IRQ. . . . . . .  N  NUMB  00C5H     A   
EP03TOKIEN . . . . .  N  NUMB  00C8H     A   
EP03TOKIRQ . . . . .  N  NUMB  00C7H     A   
EP0CS_HCEP0CS. . . .  N  NUMB  0099H     A   
EP0INDATA. . . . . .  N  NUMB  00ABH     A   
EP0OUTDATA . . . . .  N  NUMB  00ACH     A   
EP1DMALENH . . . . .  N  NUMB  008CH     A   
EP1DMALENL . . . . .  N  NUMB  008DH     A   
EP1STADDRH . . . . .  N  NUMB  008AH     A   
EP1STADDRL . . . . .  N  NUMB  008BH     A   
EP2DMALENH . . . . .  N  NUMB  00E2H     A   
EP2DMALENL . . . . .  N  NUMB  00E3H     A   
EP2STADDRH . . . . .  N  NUMB  00B7H     A   
EP2STADDRL . . . . .  N  NUMB  00B8H     A   
EPRST. . . . . . . .  N  NUMB  00CAH     A   
EXTINT . . . . . . .  N  NUMB  00D8H     A   
EXTMEM_CTL . . . . .  N  NUMB  009EH     A   
EXTMEM_DH. . . . . .  N  NUMB  00FEH     A   
EXTMEM_DL. . . . . .  N  NUMB  00FFH     A   
EXTMEM_WT. . . . . .  N  NUMB  009FH     A   
EXWAIT . . . . . . .  N  NUMB  0096H     A   
F0 . . . . . . . . .  B  ADDR  00D0H.5   A   
FIFO1DAT . . . . . .  N  NUMB  00A7H     A   
FIFO2DAT . . . . . .  N  NUMB  00A9H     A   
FIFO3DAT . . . . . .  N  NUMB  00AAH     A   
FIFOCTRL . . . . . .  N  NUMB  00D2H     A   
FIXADDR0H. . . . . .  N  NUMB  00D3H     A   
FIXADDR0L. . . . . .  N  NUMB  00BAH     A   
FIXADDR0M. . . . . .  N  NUMB  00B9H     A   
FIXADDR1H. . . . . .  N  NUMB  00BBH     A   
FIXADDR1L. . . . . .  N  NUMB  00BDH     A   
FIXADDR1M. . . . . .  N  NUMB  00BCH     A   
FIXADDR2H. . . . . .  N  NUMB  00C2H     A   
FIXADDR2L. . . . . .  N  NUMB  00C4H     A   
FIXADDR2M. . . . . .  N  NUMB  00C3H     A   
FIXADDR3H. . . . . .  N  NUMB  00C5H     A   
FIXADDR3L. . . . . .  N  NUMB  00C7H     A   
FIXADDR3M. . . . . .  N  NUMB  00C6H     A   
FMCLKCTL . . . . . .  N  NUMB  00C8H     A   
FNADDR . . . . . . .  N  NUMB  00CEH     A   
FRAMELEN0. . . . . .  N  NUMB  00B9H     A   
FRAMELEN1. . . . . .  N  NUMB  00B8H     A   
FRMCNTH. . . . . . .  N  NUMB  00CCH     A   
FRMCNTL. . . . . . .  N  NUMB  00CDH     A   
FSMPRESTATE. . . . .  N  NUMB  00FCH     A   
FS_CTL . . . . . . .  N  NUMB  00A2H     A   
GLOBALGAINH. . . . .  N  NUMB  00C7H     A   
GLOBALGAINL. . . . .  N  NUMB  00C9H     A   
GLOBALGAINM. . . . .  N  NUMB  00C8H     A   
GPIOADAT . . . . . .  N  NUMB  00A4H     A   
GPIOAINEN. . . . . .  N  NUMB  00A3H     A   
GPIOAOUTEN . . . . .  N  NUMB  00A2H     A   
GPIOAPDEN. . . . . .  N  NUMB  00A6H     A   
GPIOAPUEN. . . . . .  N  NUMB  00A5H     A   
GPIOBDAT . . . . . .  N  NUMB  00AAH     A   
GPIOBINEN. . . . . .  N  NUMB  00A9H     A   
GPIOBOUTEN . . . . .  N  NUMB  00A7H     A   
GPIOBPDEN. . . . . .  N  NUMB  00ACH     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    80

GPIOBPUEN. . . . . .  N  NUMB  00ABH     A   
GPIOCDAT . . . . . .  N  NUMB  00AFH     A   
GPIOCINEN. . . . . .  N  NUMB  00AEH     A   
GPIOCOUTEN . . . . .  N  NUMB  00ADH     A   
GPIOCPDEN. . . . . .  N  NUMB  00B1H     A   
GPIOCPUEN. . . . . .  N  NUMB  00B0H     A   
GPIODDAT . . . . . .  N  NUMB  00B4H     A   
GPIODINEN. . . . . .  N  NUMB  00B3H     A   
GPIODOUTEN . . . . .  N  NUMB  00B2H     A   
GPIODPDEN. . . . . .  N  NUMB  00B6H     A   
GPIODPUEN. . . . . .  N  NUMB  00B5H     A   
GPIOEDAT . . . . . .  N  NUMB  00B9H     A   
GPIOEINEN. . . . . .  N  NUMB  00B8H     A   
GPIOEOUTEN . . . . .  N  NUMB  00B7H     A   
GPIOEPDEN. . . . . .  N  NUMB  00BBH     A   
GPIOEPUEN. . . . . .  N  NUMB  00BAH     A   
GPIOFDAT . . . . . .  N  NUMB  00BFH     A   
GPIOFINEN. . . . . .  N  NUMB  00BDH     A   
GPIOFOUTEN . . . . .  N  NUMB  00BCH     A   
GPIOFPDEN. . . . . .  N  NUMB  00C2H     A   
GPIOFPUEN. . . . . .  N  NUMB  00C1H     A   
GPIOGDAT . . . . . .  N  NUMB  00C5H     A   
GPIOGINEN. . . . . .  N  NUMB  00C4H     A   
GPIOGOUTEN . . . . .  N  NUMB  00C3H     A   
GPIOGPDEN. . . . . .  N  NUMB  00C7H     A   
GPIOGPUEN. . . . . .  N  NUMB  00C6H     A   
HCEP03ERRIEN . . . .  N  NUMB  00D9H     A   
HCEP03ERRIRQ . . . .  N  NUMB  00D8H     A   
HCEP0CTRL. . . . . .  N  NUMB  00B0H     A   
HCFRMNH. . . . . . .  N  NUMB  00D4H     A   
HCFRMNL. . . . . . .  N  NUMB  00D5H     A   
HCFRMREMAINH . . . .  N  NUMB  00D6H     A   
HCFRMREMAINL . . . .  N  NUMB  00D7H     A   
HCIN0ERR . . . . . .  N  NUMB  00B2H     A   
HCIN0MAXPCK. . . . .  N  NUMB  00E4H     A   
HCIN2CNTH. . . . . .  N  NUMB  00FDH     A   
HCIN2CNTL. . . . . .  N  NUMB  00FEH     A   
HCIN2CTRL. . . . . .  N  NUMB  00B5H     A   
HCIN2ERR . . . . . .  N  NUMB  00B6H     A   
HCIN2MAXPCKH . . . .  N  NUMB  00E5H     A   
HCIN2MAXPCKL . . . .  N  NUMB  00E6H     A   
HCINCTRL . . . . . .  N  NUMB  00EDH     A   
HCL_CLK_CTL. . . . .  N  NUMB  00B8H     A   
HCL_INTERVAL_CTL . .  N  NUMB  00B5H     A   
HCOUT0ERR. . . . . .  N  NUMB  00B1H     A   
HCOUT1CTRL . . . . .  N  NUMB  00B3H     A   
HCOUT1ERR. . . . . .  N  NUMB  00B4H     A   
HCOUT1MAXPCKH. . . .  N  NUMB  00E9H     A   
HCOUT1MAXPCKL. . . .  N  NUMB  00EAH     A   
HCOUT3CTRL . . . . .  N  NUMB  00B9H     A   
HCOUT3ERR. . . . . .  N  NUMB  00BAH     A   
HCOUT3MAXPCK . . . .  N  NUMB  00E7H     A   
HCPORTCTRL . . . . .  N  NUMB  00D3H     A   
HOSC_CTL . . . . . .  N  NUMB  00B6H     A   
HPFGAIN. . . . . . .  N  NUMB  00CFH     A   
I2S_CTL0 . . . . . .  N  NUMB  00E2H     A   
I2S_CTL1 . . . . . .  N  NUMB  00E3H     A   
IDVBUSCTRL . . . . .  N  NUMB  0092H     A   
IE0. . . . . . . . .  N  NUMB  00A8H     A   
IF0. . . . . . . . .  N  NUMB  0088H     A   
IFDEBUG0 . . . . . .  N  NUMB  00F5H     A   
IFDEBUG1 . . . . . .  N  NUMB  00F6H     A   
IN0BC_HCOUT0BC . . .  N  NUMB  0098H     A   
IN1BCH_HCOUT1BCH . .  N  NUMB  009AH     A   
IN1BCL_HCOUT1BCL . .  N  NUMB  009BH     A   
IN1CS_HCOUT1CS . . .  N  NUMB  009DH     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    81

IN1CTRL_HCOUT1CTRL .  N  NUMB  009CH     A   
IN3BC_HCOUT3BC . . .  N  NUMB  00A4H     A   
IN3CS_HCOUT3CS . . .  N  NUMB  00A6H     A   
IN3CTRL_HCOUT3CTRL .  N  NUMB  00A5H     A   
IPH0 . . . . . . . .  N  NUMB  00B7H     A   
IPL0 . . . . . . . .  N  NUMB  00B8H     A   
IR_CTL . . . . . . .  N  NUMB  00A5H     A   
IR_HUC . . . . . . .  N  NUMB  00A9H     A   
IR_KDC . . . . . . .  N  NUMB  00AAH     A   
IR_LUC . . . . . . .  N  NUMB  00A7H     A   
IR_STA . . . . . . .  N  NUMB  00A6H     A   
IVECT. . . . . . . .  N  NUMB  00C9H     A   
KARAOKECTL . . . . .  N  NUMB  00CBH     A   
LCD_DATA0. . . . . .  N  NUMB  008BH     A   
LCD_DATA1. . . . . .  N  NUMB  008CH     A   
LCD_DATA10 . . . . .  N  NUMB  0098H     A   
LCD_DATA11 . . . . .  N  NUMB  0099H     A   
LCD_DATA12 . . . . .  N  NUMB  009AH     A   
LCD_DATA13 . . . . .  N  NUMB  009BH     A   
LCD_DATA14 . . . . .  N  NUMB  009CH     A   
LCD_DATA15 . . . . .  N  NUMB  009DH     A   
LCD_DATA2. . . . . .  N  NUMB  008DH     A   
LCD_DATA3. . . . . .  N  NUMB  0090H     A   
LCD_DATA4. . . . . .  N  NUMB  0091H     A   
LCD_DATA5. . . . . .  N  NUMB  0092H     A   
LCD_DATA6. . . . . .  N  NUMB  0093H     A   
LCD_DATA7. . . . . .  N  NUMB  0094H     A   
LCD_DATA8. . . . . .  N  NUMB  0095H     A   
LCD_DATA9. . . . . .  N  NUMB  0097H     A   
LCD_MODE . . . . . .  N  NUMB  008AH     A   
LCHGAIN. . . . . . .  N  NUMB  00CCH     A   
LDOPD_CTL. . . . . .  N  NUMB  008AH     A   
LED_SEGLCDCLKCTL . .  N  NUMB  00C9H     A   
LED_SEG_BIAS_EN. . .  N  NUMB  00ECH     A   
LED_SEG_RC_EN. . . .  N  NUMB  00EBH     A   
LOSC_CTL . . . . . .  N  NUMB  00B7H     A   
LPFGAIN. . . . . . .  N  NUMB  00CEH     A   
LRADC1_DATA. . . . .  N  NUMB  0092H     A   
LRADC3_DATA. . . . .  N  NUMB  0093H     A   
LRADC4_DATA. . . . .  N  NUMB  0094H     A   
LRADC5_DATA. . . . .  N  NUMB  0095H     A   
MCU_PLL_CTL. . . . .  N  NUMB  00B3H     A   
MCU_PLL_DEBUG_CTL. .  N  NUMB  00BCH     A   
MCU_PLL_SSC_CTL. . .  N  NUMB  00BAH     A   
MCU_PLL_SSC_FSTEP. .  N  NUMB  00BBH     A   
MEMBANKCTL . . . . .  N  NUMB  00F9H     A   
MEMCLKENCTL0 . . . .  N  NUMB  00B4H     A   
MEMCLKSELCTL0. . . .  N  NUMB  00ADH     A   
MEMCLKSELCTL1. . . .  N  NUMB  00AEH     A   
MFP_CTL0 . . . . . .  N  NUMB  00C8H     A   
MFP_CTL1 . . . . . .  N  NUMB  00C9H     A   
MFP_CTL2 . . . . . .  N  NUMB  00CAH     A   
MFP_CTL3 . . . . . .  N  NUMB  00CBH     A   
MFP_CTL4 . . . . . .  N  NUMB  00CCH     A   
MFP_CTL5 . . . . . .  N  NUMB  00CDH     A   
MFP_CTL6 . . . . . .  N  NUMB  00CEH     A   
MFP_CTL7 . . . . . .  N  NUMB  00CFH     A   
MFP_CTL8 . . . . . .  N  NUMB  00D2H     A   
MODEL. . . . . . . .  -- ----  -------       
MP3BITRATEH. . . . .  N  NUMB  00ADH     A   
MP3BITRATEL. . . . .  N  NUMB  00AEH     A   
MP3CTIMEH. . . . . .  N  NUMB  00B2H     A   
MP3CTIMEM. . . . . .  N  NUMB  00B3H     A   
MP3CTIMES. . . . . .  N  NUMB  00B4H     A   
MP3CTL . . . . . . .  N  NUMB  00ABH     A   
MP3ENCCTL. . . . . .  N  NUMB  00ABH     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    82

MP3ENCINFO . . . . .  N  NUMB  00ACH     A   
MP3FILELEN1. . . . .  N  NUMB  00BAH     A   
MP3FILELEN2. . . . .  N  NUMB  00B9H     A   
MP3FILELEN3. . . . .  N  NUMB  00B8H     A   
MP3FRAMENUMH . . . .  N  NUMB  00B5H     A   
MP3FRAMENUML . . . .  N  NUMB  00B7H     A   
MP3FRAMENUMM . . . .  N  NUMB  00B6H     A   
MP3HEADERINFO. . . .  N  NUMB  00ACH     A   
MP3HEADERSYNCTL. . .  N  NUMB  00BBH     A   
MP3IE. . . . . . . .  N  NUMB  00A9H     A   
MP3IP. . . . . . . .  N  NUMB  00AAH     A   
MP3TTIMEH. . . . . .  N  NUMB  00AFH     A   
MP3TTIMEM. . . . . .  N  NUMB  00B0H     A   
MP3TTIMES. . . . . .  N  NUMB  00B1H     A   
MPAGE. . . . . . . .  N  NUMB  00A1H     A   
MRCR1. . . . . . . .  N  NUMB  0086H     A   
MRCR2. . . . . . . .  N  NUMB  0089H     A   
MRCR3. . . . . . . .  N  NUMB  009FH     A   
MULTI_USED . . . . .  N  NUMB  008DH     A   
OTGCTRL. . . . . . .  N  NUMB  00DCH     A   
OTGIEN . . . . . . .  N  NUMB  00DEH     A   
OTGIRQ . . . . . . .  N  NUMB  00DAH     A   
OTGSTATE . . . . . .  N  NUMB  00DBH     A   
OTGSTATUS. . . . . .  N  NUMB  00DDH     A   
OTGTRIEN . . . . . .  N  NUMB  00F5H     A   
OTGTRIRQ . . . . . .  N  NUMB  00F6H     A   
OUT0BC_HCIN0BC . . .  N  NUMB  0097H     A   
OUT2BCH_HCIN2BCH . .  N  NUMB  009EH     A   
OUT2BCL_HCIN2BCL . .  N  NUMB  009FH     A   
OUT2CS_HCIN2CS . . .  N  NUMB  00A3H     A   
OUT2CTRL_HCIN2CTRL .  N  NUMB  00A2H     A   
OUTPCKCNTH . . . . .  N  NUMB  0090H     A   
OUTPCKCNTL . . . . .  N  NUMB  0091H     A   
OV . . . . . . . . .  B  ADDR  00D0H.2   A   
P. . . . . . . . . .  B  ADDR  00D0H.0   A   
P2 . . . . . . . . .  N  NUMB  00A0H     A   
PADDRV0. . . . . . .  N  NUMB  00D5H     A   
PADDRV1. . . . . . .  N  NUMB  00D6H     A   
PADDRV2. . . . . . .  N  NUMB  00D7H     A   
PADDRV3. . . . . . .  N  NUMB  00D9H     A   
PADDRV4. . . . . . .  N  NUMB  00DAH     A   
PADPUPD. . . . . . .  N  NUMB  00D4H     A   
PAGEADDR0H . . . . .  N  NUMB  0090H     A   
PAGEADDR0L . . . . .  N  NUMB  0091H     A   
PAGEADDR1H . . . . .  N  NUMB  0092H     A   
PAGEADDR1L . . . . .  N  NUMB  0093H     A   
PAGEADDR2H . . . . .  N  NUMB  0094H     A   
PAGEADDR2L . . . . .  N  NUMB  0095H     A   
PAGEADDR3H . . . . .  N  NUMB  0098H     A   
PAGEADDR3L . . . . .  N  NUMB  0099H     A   
PAGEADDR4H . . . . .  N  NUMB  009AH     A   
PAGEADDR4L . . . . .  N  NUMB  009BH     A   
PAGEADDR5H . . . . .  N  NUMB  009CH     A   
PAGEADDR5L . . . . .  N  NUMB  009DH     A   
PAGEADDR6H . . . . .  N  NUMB  009EH     A   
PAGEADDR6L . . . . .  N  NUMB  009FH     A   
PAGEADDR7H . . . . .  N  NUMB  00A2H     A   
PAGEADDR7L . . . . .  N  NUMB  00A3H     A   
PAGEADDR8H . . . . .  N  NUMB  00D8H     A   
PAGEADDR8L . . . . .  N  NUMB  00D9H     A   
PAGEADDR9H . . . . .  N  NUMB  00DAH     A   
PAGEADDR9L . . . . .  N  NUMB  00DBH     A   
PAGEADDRMASK0. . . .  N  NUMB  00B0H     A   
PAGEADDRMASK1. . . .  N  NUMB  00B1H     A   
PAGEADDRMASK2. . . .  N  NUMB  00B2H     A   
PAGEADDRMASK3. . . .  N  NUMB  00B3H     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    83

PAGEADDRMASK4. . . .  N  NUMB  00B4H     A   
PAGEADDRMASK5. . . .  N  NUMB  00B5H     A   
PAGEADDRMASK6. . . .  N  NUMB  00B6H     A   
PAGEADDRMASK7. . . .  N  NUMB  00D2H     A   
PAGEADDRMASK8. . . .  N  NUMB  00D4H     A   
PAGEADDRMASK9. . . .  N  NUMB  00D5H     A   
PAGEMISSENTRYEX. . .  N  NUMB  00F4H     A   
PAGEMISSENTRYH . . .  N  NUMB  00F5H     A   
PAGEMISSENTRYL . . .  N  NUMB  00F6H     A   
PA_APCTL . . . . . .  N  NUMB  00EBH     A   
PA_CTL . . . . . . .  N  NUMB  00EAH     A   
PA_VOLUME. . . . . .  N  NUMB  00E9H     A   
PCON . . . . . . . .  N  NUMB  0087H     A   
PHYSICALADDRH. . . .  N  NUMB  00BDH     A   
PHYSICALADDRL. . . .  N  NUMB  00BFH     A   
PMUADC_CTL . . . . .  N  NUMB  0090H     A   
PREFIX . . . . . . .  -- ----  -------       
PRSEG. . . . . . . .  -- ----  -------       
PSW. . . . . . . . .  N  NUMB  00D0H     A   
PSW1 . . . . . . . .  N  NUMB  00D1H     A   
PWMCLKCTL. . . . . .  N  NUMB  00C3H     A   
PWMDUTY. . . . . . .  N  NUMB  00AFH     A   
RCHGAIN. . . . . . .  N  NUMB  00CDH     A   
REDIRECTADDR0. . . .  N  NUMB  00C8H     A   
REDIRECTADDR1. . . .  N  NUMB  00C9H     A   
REDIRECTADDR2. . . .  N  NUMB  00CAH     A   
REDIRECTADDR3. . . .  N  NUMB  00CBH     A   
REDIRECTADDR4. . . .  N  NUMB  00CCH     A   
REDIRECTADDR5. . . .  N  NUMB  00CDH     A   
REDIRECTADDR6. . . .  N  NUMB  00CEH     A   
REDIRECTADDR7. . . .  N  NUMB  00CFH     A   
REDIRECTADDR8. . . .  N  NUMB  00D6H     A   
REDIRECTADDR9. . . .  N  NUMB  00D7H     A   
RPREFIX. . . . . . .  -- ----  -------       
RS0. . . . . . . . .  B  ADDR  00D0H.3   A   
RS1. . . . . . . . .  B  ADDR  00D0H.4   A   
RTCALMH. . . . . . .  N  NUMB  00B3H     A   
RTCALMM. . . . . . .  N  NUMB  00B2H     A   
RTCALMS. . . . . . .  N  NUMB  00B1H     A   
RTCRDM0. . . . . . .  N  NUMB  00BCH     A   
RTCRDM1. . . . . . .  N  NUMB  00BDH     A   
RTCRDM10 . . . . . .  N  NUMB  00C8H     A   
RTCRDM11 . . . . . .  N  NUMB  00C9H     A   
RTCRDM12 . . . . . .  N  NUMB  00CAH     A   
RTCRDM13 . . . . . .  N  NUMB  00CBH     A   
RTCRDM14 . . . . . .  N  NUMB  00CCH     A   
RTCRDM15 . . . . . .  N  NUMB  00CDH     A   
RTCRDM16 . . . . . .  N  NUMB  00CEH     A   
RTCRDM17 . . . . . .  N  NUMB  00CFH     A   
RTCRDM18 . . . . . .  N  NUMB  00D2H     A   
RTCRDM19 . . . . . .  N  NUMB  00D3H     A   
RTCRDM2. . . . . . .  N  NUMB  00BFH     A   
RTCRDM20 . . . . . .  N  NUMB  00D4H     A   
RTCRDM21 . . . . . .  N  NUMB  00D5H     A   
RTCRDM22 . . . . . .  N  NUMB  00D6H     A   
RTCRDM3. . . . . . .  N  NUMB  00C1H     A   
RTCRDM4. . . . . . .  N  NUMB  00C2H     A   
RTCRDM5. . . . . . .  N  NUMB  00C3H     A   
RTCRDM6. . . . . . .  N  NUMB  00C4H     A   
RTCRDM7. . . . . . .  N  NUMB  00C5H     A   
RTCRDM8. . . . . . .  N  NUMB  00C6H     A   
RTCRDM9. . . . . . .  N  NUMB  00C7H     A   
RTCRUPD. . . . . . .  N  NUMB  00B4H     A   
RTCTIMED . . . . . .  N  NUMB  00AEH     A   
RTCTIMEH . . . . . .  N  NUMB  00ADH     A   
RTCTIMEMINT. . . . .  N  NUMB  00ACH     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    84

RTCTIMEMON . . . . .  N  NUMB  00AFH     A   
RTCTIMES . . . . . .  N  NUMB  00ABH     A   
RTCTIMEY . . . . . .  N  NUMB  00B0H     A   
RTCVDD_RESERVED. . .  N  NUMB  009DH     A   
RTC_CTL0 . . . . . .  N  NUMB  00A9H     A   
RTC_CTL1 . . . . . .  N  NUMB  00AAH     A   
SDCLKCTL . . . . . .  N  NUMB  00ACH     A   
SD_BLK_NUM . . . . .  N  NUMB  0099H     A   
SD_BLK_SIZE_H. . . .  N  NUMB  0097H     A   
SD_BLK_SIZE_L. . . .  N  NUMB  0098H     A   
SD_CLK_CTL . . . . .  N  NUMB  009AH     A   
SD_CMD . . . . . . .  N  NUMB  0090H     A   
SD_CMD_ARGRSP. . . .  N  NUMB  0091H     A   
SD_DATA_FIFO . . . .  N  NUMB  009DH     A   
SD_DBG_CTL . . . . .  N  NUMB  00AEH     A   
SD_INT_CTL . . . . .  N  NUMB  009CH     A   
SD_PAD_CTL . . . . .  N  NUMB  009BH     A   
SD_RSP_POIN. . . . .  N  NUMB  0092H     A   
SD_STATE . . . . . .  N  NUMB  0094H     A   
SD_TF_CTL. . . . . .  N  NUMB  0093H     A   
SD_TIMEOUT_CTL . . .  N  NUMB  009EH     A   
SD_TIMING_CTL. . . .  N  NUMB  00ADH     A   
SETUPDAT0. . . . . .  N  NUMB  00BBH     A   
SETUPDAT1. . . . . .  N  NUMB  00BCH     A   
SETUPDAT2. . . . . .  N  NUMB  00BDH     A   
SETUPDAT3. . . . . .  N  NUMB  00BFH     A   
SETUPDAT4. . . . . .  N  NUMB  00C1H     A   
SETUPDAT5. . . . . .  N  NUMB  00C2H     A   
SETUPDAT6. . . . . .  N  NUMB  00C3H     A   
SETUPDAT7. . . . . .  N  NUMB  00C4H     A   
SFR_BANK . . . . . .  N  NUMB  0080H     A   
SHORTPCKIRQ. . . . .  N  NUMB  00AFH     A   
SOFTCTL. . . . . . .  N  NUMB  00ABH     A   
SOFTIE . . . . . . .  N  NUMB  00A9H     A   
SOFTIP . . . . . . .  N  NUMB  00AAH     A   
SP . . . . . . . . .  N  NUMB  0081H     A   
SPDIFRX_CNT_WR0. . .  N  NUMB  00B5H     A   
SPDIFRX_CNT_WR1. . .  N  NUMB  00B6H     A   
SPDIFRX_CNT_WR2. . .  N  NUMB  00B7H     A   
SPDIFRX_CSTAT. . . .  N  NUMB  00B2H     A   
SPDIFRX_CTL. . . . .  N  NUMB  00B0H     A   
SPDIFRX_DAT. . . . .  N  NUMB  00B4H     A   
SPDIFRX_DEBUG. . . .  N  NUMB  00B3H     A   
SPDIFRX_STAT . . . .  N  NUMB  00B1H     A   
SPH. . . . . . . . .  N  NUMB  00BEH     A   
SPICLKCTL. . . . . .  N  NUMB  00CAH     A   
SPI_BCH. . . . . . .  N  NUMB  00A2H     A   
SPI_BCL. . . . . . .  N  NUMB  009FH     A   
SPI_CLKDIV . . . . .  N  NUMB  009CH     A   
SPI_CTL. . . . . . .  N  NUMB  0099H     A   
SPI_DEBUG. . . . . .  N  NUMB  00A3H     A   
SPI_DRQ. . . . . . .  N  NUMB  009AH     A   
SPI_RAND . . . . . .  N  NUMB  00C8H     A   
SPI_RXDAT. . . . . .  N  NUMB  009EH     A   
SPI_SEED0. . . . . .  N  NUMB  00C9H     A   
SPI_SEED1. . . . . .  N  NUMB  00CAH     A   
SPI_STA. . . . . . .  N  NUMB  009BH     A   
SPI_TXDAT. . . . . .  N  NUMB  009DH     A   
SPL. . . . . . . . .  N  NUMB  0081H     A   
SRSCTL0. . . . . . .  N  NUMB  00CCH     A   
SRSCTL1. . . . . . .  N  NUMB  00CDH     A   
SRSCTL2. . . . . . .  N  NUMB  00CEH     A   
SYNHEADERDATA1 . . .  N  NUMB  00BCH     A   
SYNHEADERDATA2 . . .  N  NUMB  00BDH     A   
SYSTEM_CTL . . . . .  N  NUMB  009BH     A   
SYSTEM_ONOFF . . . .  N  NUMB  009CH     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    85

TESTCOUNTERBYTE0 . .  N  NUMB  00FCH     A   
TESTCOUNTERBYTE1 . .  N  NUMB  00FDH     A   
TESTCOUNTERBYTE2 . .  N  NUMB  00FEH     A   
TESTCOUNTERBYTE3 . .  N  NUMB  00FFH     A   
TESTCOUNTERBYTE4 . .  N  NUMB  00F1H     A   
TEST_CTL . . . . . .  N  NUMB  009AH     A   
TIMERHB. . . . . . .  N  NUMB  00B7H     A   
TIMERLB. . . . . . .  N  NUMB  00B5H     A   
TIMERMB. . . . . . .  N  NUMB  00B6H     A   
TK_AUTO_HIGHTH_H . .  N  NUMB  00A2H     A   
TK_AUTO_HIGHTH_L . .  N  NUMB  00A3H     A   
TK_AUTO_LOWTH_H. . .  N  NUMB  009DH     A   
TK_AUTO_LOWTH_L. . .  N  NUMB  009EH     A   
TK_BL_CAL_TH . . . .  N  NUMB  009AH     A   
TK_BUCKET_TH . . . .  N  NUMB  009CH     A   
TK_DB_CTL. . . . . .  N  NUMB  0094H     A   
TK_DEBUG . . . . . .  N  NUMB  00DAH     A   
TK_EN_CTL. . . . . .  N  NUMB  0090H     A   
TK_FUN_CTL . . . . .  N  NUMB  0091H     A   
TK_IRQ_PD. . . . . .  N  NUMB  0092H     A   
TK_KEY0_BL_H . . . .  N  NUMB  00CAH     A   
TK_KEY0_BL_L . . . .  N  NUMB  00CCH     A   
TK_KEY0_DATH . . . .  N  NUMB  00AEH     A   
TK_KEY0_DATL . . . .  N  NUMB  00AFH     A   
TK_KEY0_IDA_CTL. . .  N  NUMB  00A4H     A   
TK_KEY0_RAWH . . . .  N  NUMB  00BCH     A   
TK_KEY0_RAWL . . . .  N  NUMB  00BDH     A   
TK_KEY1_BL_H . . . .  N  NUMB  00CDH     A   
TK_KEY1_BL_L . . . .  N  NUMB  00CEH     A   
TK_KEY1_DATH . . . .  N  NUMB  00B0H     A   
TK_KEY1_DATL . . . .  N  NUMB  00B1H     A   
TK_KEY1_IDA_CTL. . .  N  NUMB  00A5H     A   
TK_KEY1_RAWH . . . .  N  NUMB  00BFH     A   
TK_KEY1_RAWL . . . .  N  NUMB  00C1H     A   
TK_KEY2_BL_H . . . .  N  NUMB  00D2H     A   
TK_KEY2_BL_L . . . .  N  NUMB  00D3H     A   
TK_KEY2_DATH . . . .  N  NUMB  00B2H     A   
TK_KEY2_DATL . . . .  N  NUMB  00B3H     A   
TK_KEY2_IDA_CTL. . .  N  NUMB  00A6H     A   
TK_KEY2_RAWH . . . .  N  NUMB  00C2H     A   
TK_KEY2_RAWL . . . .  N  NUMB  00C3H     A   
TK_KEY3_BL_H . . . .  N  NUMB  00D4H     A   
TK_KEY3_BL_L . . . .  N  NUMB  00D5H     A   
TK_KEY3_DATH . . . .  N  NUMB  00B4H     A   
TK_KEY3_DATL . . . .  N  NUMB  00B5H     A   
TK_KEY3_IDA_CTL. . .  N  NUMB  00A9H     A   
TK_KEY3_RAWH . . . .  N  NUMB  00C4H     A   
TK_KEY3_RAWL . . . .  N  NUMB  00C5H     A   
TK_KEY4_BL_H . . . .  N  NUMB  00D6H     A   
TK_KEY4_BL_L . . . .  N  NUMB  00D7H     A   
TK_KEY4_DATH . . . .  N  NUMB  00B6H     A   
TK_KEY4_DATL . . . .  N  NUMB  00B7H     A   
TK_KEY4_IDA_CTL. . .  N  NUMB  00AAH     A   
TK_KEY4_RAWH . . . .  N  NUMB  00C6H     A   
TK_KEY4_RAWL . . . .  N  NUMB  00C7H     A   
TK_KEY5_BL_H . . . .  N  NUMB  00D8H     A   
TK_KEY5_BL_L . . . .  N  NUMB  00D9H     A   
TK_KEY5_DATH . . . .  N  NUMB  00B8H     A   
TK_KEY5_DATL . . . .  N  NUMB  00B9H     A   
TK_KEY5_IDA_CTL. . .  N  NUMB  00ABH     A   
TK_KEY5_RAWH . . . .  N  NUMB  00C8H     A   
TK_KEY5_RAWL . . . .  N  NUMB  00C9H     A   
TK_NOISE_TH. . . . .  N  NUMB  009BH     A   
TK_PRESS_STA . . . .  N  NUMB  0093H     A   
TK_PRESS_TH. . . . .  N  NUMB  0099H     A   
TK_PWM_CNTH. . . . .  N  NUMB  0095H     A   
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    86

TK_PWM_CNTL. . . . .  N  NUMB  0097H     A   
TK_RAW_PD. . . . . .  N  NUMB  00BAH     A   
TK_UPDAT_PD. . . . .  N  NUMB  00ADH     A   
UART_BR. . . . . . .  N  NUMB  0090H     A   
UART_CTL . . . . . .  N  NUMB  0092H     A   
UART_DEBUG . . . . .  N  NUMB  0098H     A   
UART_DRQ . . . . . .  N  NUMB  0093H     A   
UART_MODE. . . . . .  N  NUMB  0091H     A   
UART_RXDAT . . . . .  N  NUMB  0097H     A   
UART_STA . . . . . .  N  NUMB  0094H     A   
UART_TXDAT . . . . .  N  NUMB  0095H     A   
UD . . . . . . . . .  B  ADDR  00D0H.1   A   
UDMAM. . . . . . . .  N  NUMB  0086H     A   
USBCTRL_STUS . . . .  N  NUMB  00CBH     A   
USBEIRQ. . . . . . .  N  NUMB  00EBH     A   
USBIEN_HCUSBIEN. . .  N  NUMB  00AEH     A   
USBIRQ_HCUSBIRQ. . .  N  NUMB  00ADH     A   
USBSTATUS. . . . . .  N  NUMB  0093H     A   
USB_EFUSE_REF. . . .  N  NUMB  00F7H     A   
USB_PHYCTRL. . . . .  N  NUMB  0095H     A   
VDCTRL . . . . . . .  N  NUMB  00EFH     A   
VDD_RESERVED . . . .  N  NUMB  0099H     A   
VDSTAT . . . . . . .  N  NUMB  00F1H     A   
VIRTUALADDRH . . . .  N  NUMB  00BBH     A   
VIRTUALADDRL . . . .  N  NUMB  00BCH     A   
VOUT_CTL . . . . . .  N  NUMB  0089H     A   
WAVBLOCKNUMH . . . .  N  NUMB  00B5H     A   
WAVBLOCKNUML . . . .  N  NUMB  00B7H     A   
WAVBLOCKNUMM . . . .  N  NUMB  00B6H     A   
WAVCTIMEH. . . . . .  N  NUMB  00B2H     A   
WAVCTIMEM. . . . . .  N  NUMB  00B3H     A   
WAVCTIMES. . . . . .  N  NUMB  00B4H     A   
WAVCTL . . . . . . .  N  NUMB  00ABH     A   
WAVENCCTL. . . . . .  N  NUMB  00ABH     A   
WAVENCINFO . . . . .  N  NUMB  00ACH     A   
WAVHEADERINFO1 . . .  N  NUMB  00ACH     A   
WAVHEADERINFO2 . . .  N  NUMB  00ADH     A   
WAVIE. . . . . . . .  N  NUMB  00A9H     A   
WAVIP. . . . . . . .  N  NUMB  00AAH     A   
WAVTTIMEH. . . . . .  N  NUMB  00AFH     A   
WAVTTIMEM. . . . . .  N  NUMB  00B0H     A   
WAVTTIMES. . . . . .  N  NUMB  00B1H     A   
WDCTL. . . . . . . .  N  NUMB  00B8H     A   
WMABITRATEH. . . . .  N  NUMB  00ADH     A   
WMABITRATEL. . . . .  N  NUMB  00AEH     A   
WMACTIMEH. . . . . .  N  NUMB  00B2H     A   
WMACTIMEM. . . . . .  N  NUMB  00B3H     A   
WMACTIMES. . . . . .  N  NUMB  00B4H     A   
WMACTL . . . . . . .  N  NUMB  00ABH     A   
WMAHEADERINFO. . . .  N  NUMB  00ACH     A   
WMAIE. . . . . . . .  N  NUMB  00A9H     A   
WMAIP. . . . . . . .  N  NUMB  00AAH     A   
WMAPACKNUMH. . . . .  N  NUMB  00B5H     A   
WMAPACKNUML. . . . .  N  NUMB  00B7H     A   
WMAPACKNUMM. . . . .  N  NUMB  00B6H     A   
WMAPACKSIZEH . . . .  N  NUMB  00B8H     A   
WMAPACKSIZEL . . . .  N  NUMB  00BAH     A   
WMAPACKSIZEM . . . .  N  NUMB  00B9H     A   
WMATTIMEH. . . . . .  N  NUMB  00AFH     A   
WMATTIMEM. . . . . .  N  NUMB  00B0H     A   
WMATTIMES. . . . . .  N  NUMB  00B1H     A   


REGISTER BANK(S) USED: 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
A251 MACRO ASSEMBLER  LCM_api                                                               02/06/16 14:55:35 PAGE    87

